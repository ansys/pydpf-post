# azure pipelines build and test DPF-Post

variables:
  ALLOW_PLOTTING: true
  package_name: ansys-dpf-post
  SHELLOPTS: 'errexit:pipefail'

trigger:
  branches:
    include:
    - '*'
    exclude:
    - gh-pages
  tags:
    include:
    - '*'

pr:
  branches:
    exclude:
    - '*'

jobs:
- job: Windows
  variables:
    python.version: '3.8'
    DISPLAY: ':99.0'
    PYANSYS_OFF_SCREEN: True
  pool:
    vmImage: 'windows-2019'

  steps:
    - template: templates\prepare-environment-windows.yml   
    
    - task: PublishBuildArtifacts@1
      displayName: 'WHEEL: publish artifacts'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)\dist'
        ArtifactName: 'ansys_dpf_post_wheel'
      enabled: true

    - script: |
        pip install -r requirements_test.txt
        set THISDIR=$(System.DefaultWorkingDirectory)
        cd tests=$(System.DefaultWorkingDirectory)
        set AWP_ROOT212=%THISDIR%\server\v212
        pytest -v --junitxml=junit/test-results.xml --cov ansys.dpf.post --cov-report=xml --reruns 3
        echo %PATH%
        
      displayName: Test Post API
      
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit/test-results.xml' 
        testRunTitle: 'windowsTests'
        publishRunAttachments: true      
      condition: always()
      
    - script: |
        pip install twine
        python setup.py sdist
        twine upload --skip-existing dist/*
      displayName: 'Upload to PyPi'
      condition: contains(variables['Build.SourceBranch'], 'refs/tags/')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: $(PYPI_TOKEN)
        TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"   
         
    - template: templates\kill-servers-windows.yml 
    

- job: Linux
  variables:
    python.version: '3.7'  # due to VTK 8.1.2 requirement for docbuild
    DISPLAY: ':99.0'
    PYANSYS_OFF_SCREEN: True
    TEMP: $(System.DefaultWorkingDirectory)/temp
    
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: PipAuthenticate@1
      inputs:
        artifactFeeds: 'pyansys'
        onlyAddExtraIndex: true

    - script: |
        ls -lh .ci
        chmod +x .ci/setup_headless_display.sh
        .ci/setup_headless_display.sh
        pip install -r .ci/requirements_test_xvfb.txt
        python .ci/display_test.py
      displayName: Install and start a virtual framebuffer

    - script: |
        pip install -r requirements_build.txt
        python setup.py bdist_wheel
        export WHEELNAME=`ls dist/*.whl`
        echo ${WHEELNAME}
        pip install ${WHEELNAME}
        cd tests
        python -c "from ansys.dpf import post; print(post.Report())"
      displayName: Install ansys-dpf-post

    - task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(System.DefaultWorkingDirectory)'
        feedsToUse: 'internal'
        vstsFeed: '705e121a-9631-49f5-8aaf-c7142856f923'
        vstsFeedPackage: 'dpf-linux' #TODO: update hash of packages
        vstsPackageVersion: '21.2.5'
        
    - script : |
        echo $0
        if pgrep -x "Ans.Dpf.Grpc" > /dev/null
        then
            pkill -f Ans.Dpf.Grpc.exe
        fi
      displayName: 'Kill all servers'
      condition: always()
      continueOnError: true
      
    - script: |
        env
      displayName: Display env

    # this step is necessary as we're running in docker and the
    # examples directory must be local to the docker enviornment
    - script: |
       EXAMPLES_DIR=$(python -c "from ansys.dpf.core import examples; import os; print(os.path.dirname(examples.__file__))")
       mkdir -p ansys/dpf/core
       cp -r $EXAMPLES_DIR ansys/dpf/core
      displayName: Copy ansys.dpf.core examples to local directory

    - script: |
        pip install -r requirements_test.txt
        pip install pytest-azurepipelines        
        export AWP_ROOT212=${SYSTEM_DEFAULTWORKINGDIRECTORY}/server/v212
        chmod 755 ${AWP_ROOT212}/aisol/bin/linx64/Ans.Dpf.Grpc.sh
        chmod 755 ${AWP_ROOT212}/aisol/bin/linx64/Ans.Dpf.Grpc.exe   
        cd tests
        pytest -v --junitxml=junit/test-results.xml --cov ansys.dpf.post --cov-report=xml  --reruns 3      
        export PATH=`pwd`
        echo ${PATH} 
      displayName: Test Post API
      
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit/test-results.xml' 
        testRunTitle: 'linuxTests'
        publishRunAttachments: true
        searchFolder: 'tests/'
      condition: always()
      
      
    - script : |
        echo $0
        if pgrep -x "Ans.Dpf.Grpc" > /dev/null
        then
            pkill -f Ans.Dpf.Grpc.exe
        fi
      displayName: 'Kill all servers'
      condition: always()
      continueOnError: true
      
- job: DocumentationWindows
  variables:
    python.version: '3.8'
    DISPLAY: ':99.0'
    PYANSYS_OFF_SCREEN: True
    DPF_PORT: 32772
    GH_DOC_BRANCH: 'anslpa/merge_0.2.0'
  pool:
    vmImage: 'windows-2019'

  steps:  
    - template: templates\prepare-environment-windows.yml    
   
    - script: |
          pip install -r requirements_docs.txt
          cd .ci
          dir 
          set THISDIR=$(System.DefaultWorkingDirectory)
          set AWP_ROOT212=%THISDIR%\server\v212
          ECHO %AWP_ROOT212%
          build_doc.bat
      displayName: Build Documentation
        
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)\docs\_build' 
        includeRootFolder: false 
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)\docs\archive\doc-ansys-dpf-post.zip'
        replaceExistingArchive: true 
      displayName: 'DOCUMENTATION: zip artifacts'
    
    - task: PublishBuildArtifacts@1
      displayName: 'DOCUMENTATION: publish artifacts'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)\docs\archive'
        ArtifactName: doc-ansys-dpf-post
      enabled: true      
        
    - powershell: |
        git init
        git checkout -b $(GH_DOC_BRANCH)
        git config --global user.name "pyansys-ci-bot"
        git config --global user.email "$(GH_EMAIL)"
        New-Item -ItemType file .nojekyll
        git add .
        git commit -m "Documentation generated by $(Build.DefinitionName)"
      displayName: "Init git and add docs"
      workingDirectory: docs\_build\html

    - script: |
        git remote add origin https://$(GH_PAT)@github.com/pyansys/DPF-Post-docs
        git push -u origin $(GH_DOC_BRANCH) --force
      displayName: "Publish GitHub Pages merge commit"
      workingDirectory: docs\_build\html
      # condition: contains(variables['Build.SourceBranch'], 'refs/tags/')
          
    - template: templates\kill-servers-windows.yml   
