[
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.tensor",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.tensor.html#tensor",
        "title": "tensor",
        "section": "tensor",
        "text": "Result data for the tensor values.\ntensor"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.tensor",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.tensor.html#ansys.dpf.post.strain.ElasticStrain.tensor",
        "title": "tensor > tensor > tensor",
        "section": "tensor > tensor",
        "text": "property ElasticStrain.tensor\n\nResult data for the tensor values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#compute-the-minimum-and-maximum-of-a-dataframe",
        "title": "Compute the minimum and maximum of a dataframe",
        "section": "Compute the minimum and maximum of a dataframe",
        "text": "This example uses transient mechanical displacement data\nto show how to compute the minimum and maximum of a dataframe.\nCompute the minimum and maximum of a dataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#perform-required-imports",
        "title": "Compute the minimum and maximum of a dataframe > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#get-simulation-object",
        "title": "Compute the minimum and maximum of a dataframe > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#extract-displacement-data",
        "title": "Compute the minimum and maximum of a dataframe > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data"
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#compute-maximum-displacement-for-each-component-at-each-time-step",
        "title": "Compute the minimum and maximum of a dataframe > Compute maximum displacement for each component at each time-step",
        "section": "Compute maximum displacement for each component at each time-step",
        "text": "Compute maximum displacement for each component at each time-step"
    },
    {
        "objectID": "examples/01-Detailed-Examples/06-compute-min-max",
        "href": "examples/01-Detailed-Examples/06-compute-min-max.html#compute-minimum-displacement-for-each-component-at-each-time-step",
        "title": "Compute the minimum and maximum of a dataframe > Compute minimum displacement for each component at each time-step",
        "section": "Compute minimum displacement for each component at each time-step",
        "text": "Total running time of the script: (0 minutes 0.276 seconds)\nDownload Jupyter notebook: 06-compute-min-max.ipynb\nDownload Python source code: 06-compute-min-max.py\nDownload zipped: 06-compute-min-max.zip\nGallery generated by Sphinx-Gallery\nCompute minimum displacement for each component at each time-step\nDownload Jupyter notebook: 06-compute-min-max.ipynb\nDownload Python source code: 06-compute-min-max.py\nDownload zipped: 06-compute-min-max.zip"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#extract-cyclic-results",
        "title": "Extract cyclic results",
        "section": "Extract cyclic results",
        "text": "This example uses a modal analysis with cyclic symmetry to show\nhow to expand the mesh and results.\nExtract cyclic results"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#perform-required-imports",
        "title": "Extract cyclic results > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#get-simulation-object",
        "title": "Extract cyclic results > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#extract-expanded-displacement-normal",
        "title": "Extract cyclic results > Extract expanded displacement normal",
        "section": "Extract expanded displacement normal",
        "text": "Extract expanded displacement normal"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#extract-equivalent-von-mises-nodal-stress-expanded-on-first-four-sectors",
        "title": "Extract cyclic results > Extract equivalent von Mises nodal stress expanded on first four sectors",
        "section": "Extract equivalent von Mises nodal stress expanded on first four sectors",
        "text": "Extract equivalent von Mises nodal stress expanded on first four sectors"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/01-cyclic-results",
        "href": "examples/03-Cyclic-Examples/01-cyclic-results.html#extract-equivalent-von-mises-nodal-stress-without-expansion",
        "title": "Extract cyclic results > Extract equivalent von Mises nodal stress without expansion",
        "section": "Extract equivalent von Mises nodal stress without expansion",
        "text": "Total running time of the script: (0 minutes 2.155 seconds)\nDownload Jupyter notebook: 01-cyclic-results.ipynb\nDownload Python source code: 01-cyclic-results.py\nDownload zipped: 01-cyclic-results.zip\nGallery generated by Sphinx-Gallery\nExtract equivalent von Mises nodal stress without expansion\nDownload Jupyter notebook: 01-cyclic-results.ipynb\nDownload Python source code: 01-cyclic-results.py\nDownload zipped: 01-cyclic-results.zip"
    },
    {
        "objectID": "api/modules",
        "href": "api/modules.html#ansys",
        "title": "ansys",
        "section": "ansys",
        "text": "ansys"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.z",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.z.html#z",
        "title": "z",
        "section": "z",
        "text": "Result data for the Z component of the vector.\nz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.z",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.z.html#ansys.dpf.post.electric_results.ElectricField.z",
        "title": "z > z > z",
        "section": "z > z",
        "text": "property ElectricField.z\n\nResult data for the Z component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.result_workflows",
        "href": "api/ansys.dpf.post.result_workflows.html#ansysdpfpostresult_workflows-namespace",
        "title": "ansys.dpf.post.result_workflows namespace",
        "section": "ansys.dpf.post.result_workflows namespace",
        "text": "ansys.dpf.post.result_workflows namespace"
    },
    {
        "objectID": "api/ansys.dpf.post.harmonic_mechanical_simulation",
        "href": "api/ansys.dpf.post.harmonic_mechanical_simulation.html#harmonicmechanicalsimulation",
        "title": "HarmonicMechanicalSimulation",
        "section": "HarmonicMechanicalSimulation",
        "text": "HarmonicMechanicalSimulation"
    },
    {
        "objectID": "api/ansys.dpf",
        "href": "api/ansys.dpf.html#ansysdpf-namespace",
        "title": "ansys.dpf namespace",
        "section": "ansys.dpf namespace",
        "text": "ansys.dpf namespace"
    },
    {
        "objectID": "api/ansys.dpf",
        "href": "api/ansys.dpf.html#subpackages",
        "title": "ansys.dpf namespace > Subpackages",
        "section": "Subpackages",
        "text": "Subpackages"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.x",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.x.html#x",
        "title": "x",
        "section": "x",
        "text": "Result data for the X component of the vector.\nx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.x",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.x.html#ansys.dpf.post.electric_results.ElectricField.x",
        "title": "x > x > x",
        "section": "x > x",
        "text": "property ElectricField.x\n\nResult data for the X component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_all_label_spaces",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_all_label_spaces.html#get_all_label_spaces",
        "title": "get_all_label_spaces",
        "section": "get_all_label_spaces",
        "text": "Get all label spaces contained in a result.\nYou can use labels to select the fields to plot.\nList of dictionary (list of label spaces).\nlist\nget_all_label_spaces"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_all_label_spaces",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_all_label_spaces.html#ansys.dpf.post.result_data.ResultData.get_all_label_spaces",
        "title": "get_all_label_spaces > get_all_label_spaces > get_all_label_spaces",
        "section": "get_all_label_spaces > get_all_label_spaces",
        "text": "ResultData.get_all_label_spaces()\n\nGet all label spaces contained in a result.\n\nYou can use labels to select the fields to plot.\n\nReturns\n\nList of dictionary (list of label spaces).\n\nReturn type\n\nlist\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/troubleshooting",
        "href": "user_guide/troubleshooting.html#troubleshoot-common-issues",
        "title": "Troubleshoot common issues",
        "section": "Troubleshoot common issues",
        "text": "This page explains how to resolve the most common issues encountered with PyDPF-Post\nand includes suggestions for improving your scripts.\nTroubleshoot common issues"
    },
    {
        "objectID": "user_guide/troubleshooting",
        "href": "user_guide/troubleshooting.html#known-issues-list",
        "title": "Troubleshoot common issues > Known issues list",
        "section": "Known issues list",
        "text": "For a list of known issues for each version of DPF, see the Known issues page .\nKnown issues list"
    },
    {
        "objectID": "user_guide/troubleshooting",
        "href": "user_guide/troubleshooting.html#installation",
        "title": "Troubleshoot common issues > Installation",
        "section": "Installation",
        "text": "When using pip to install older versions of the PyDPF libraries, an error might occur stating:\nIn this case, modify your Python environment to use a version of the setuptools library strictly\nearlier than 67.0.0 using this command:\nInstallation\npip\nsetuptools\n67.0.0"
    },
    {
        "objectID": "user_guide/troubleshooting",
        "href": "user_guide/troubleshooting.html#auto-completion",
        "title": "Troubleshoot common issues > Auto-completion",
        "section": "Auto-completion",
        "text": "Depending on your scripting environment, auto-completion might not work correctly when using the\nload_simulation() method. This method is intended as a helper which can automatically detect\nthe physics type and analysis type. To get auto-completion to work in all circumstances, instantiate\nthe correct Simulation subclass directly using its\nconstructor:\nAuto-completion\nload_simulation()"
    },
    {
        "objectID": "user_guide/troubleshooting",
        "href": "user_guide/troubleshooting.html#invalid-utf-8-error",
        "title": "Troubleshoot common issues > Invalid UTF-8 error",
        "section": "Invalid UTF-8 error",
        "text": "Assume that you use this code to load a simulation result:\nThis error might be raised:\nThis error prevents the simulation from being accessed. To avoid this error, ensure that you are using\na PyDPF-Post version later than 0.2.1 and a PyDPF-Core version later than 0.3.2.\nWhile a warning might still be raised, it should not prevent the simulation from being accessed.\nFor the result file to be read, you must set the physics_type and analysis type arguments for the\nload_solution() method:\nInvalid UTF-8 error\nphysics_type\nanalysis type\nload_solution()"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain_energy_density.html#nodal_plastic_strain_energy_density",
        "title": "nodal_plastic_strain_energy_density",
        "section": "nodal_plastic_strain_energy_density",
        "text": "Get result data for the nodal plastic strain energy density.\nnodal_plastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain_energy_density",
        "title": "nodal_plastic_strain_energy_density > nodal_plastic_strain_energy_density > nodal_plastic_strain_energy_density",
        "section": "nodal_plastic_strain_energy_density > nodal_plastic_strain_energy_density",
        "text": "MecanicMisc.nodal_plastic_strain_energy_density(**kwargs)\n\nGet result data for the nodal plastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#reduce-model-size-by-using-the-mesh-external-layer-for-result-and-mesh-extraction",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction",
        "section": "Reduce model size by using the mesh external layer for result and mesh extraction",
        "text": "This example shows postprocessing on a mesh external layer for a static analysis.\nThe external layer is the layer of solid elements with at least one facet facing the outside of\nthe geometry.\nThis feature, available for all types of mechanical simulation, allows you to reduce the size\nof both the mesh and the extracted data to improve processing performance.\nBecause larger stresses and strains are usually located on the skin of a model,\ncomputing the results on the external layer provides equivalent maximum values in most cases.\nReduce model size by using the mesh external layer for result and mesh extraction"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#perform-required-imports",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#get-simulation-object",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#extract-displacement-data",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data on the external layer.\nExtract displacement data"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#extract-stress-and-strain-data",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Extract stress and strain data",
        "section": "Extract stress and strain data",
        "text": "Extract stress and elastic strain data on the external layer.\nYou can easily compute averages and invariants on the external layer because the\nconnectivity of the external layer elements remains unchanged.\nExtract stress and strain data"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#extract-external-layer-on-a-selection-of-elements",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Extract external layer on a selection of elements",
        "section": "Extract external layer on a selection of elements",
        "text": "Extract external layer on a selection of elements"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#extract-external-layer-on-a-selection-of-elements-for-nodal-results",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Extract external layer on a selection of elements for nodal results",
        "section": "Extract external layer on a selection of elements for nodal results",
        "text": "Extract external layer on a selection of elements for nodal results"
    },
    {
        "objectID": "examples/02-Performance-Improvements/01-mesh-external-layer",
        "href": "examples/02-Performance-Improvements/01-mesh-external-layer.html#extract-external-layer-on-a-selection-of-elements-and-scope-results",
        "title": "Reduce model size by using the mesh external layer for result and mesh extraction > Extract external layer on a selection of elements and scope results",
        "section": "Extract external layer on a selection of elements and scope results",
        "text": "Total running time of the script: (0 minutes 8.059 seconds)\nDownload Jupyter notebook: 01-mesh-external-layer.ipynb\nDownload Python source code: 01-mesh-external-layer.py\nDownload zipped: 01-mesh-external-layer.zip\nGallery generated by Sphinx-Gallery\nExtract external layer on a selection of elements and scope results\nDownload Jupyter notebook: 01-mesh-external-layer.ipynb\nDownload Python source code: 01-mesh-external-layer.py\nDownload zipped: 01-mesh-external-layer.zip"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#use-keywords-to-get-a-more-precise-result",
        "title": "Use keywords to get a more precise result",
        "section": "Use keywords to get a more precise result",
        "text": "This example shows how to use the legacy PyDPF-Post API to use keywords to get\na more precise result when calling a Result object from a Solution object.\nUse keywords to get a more precise result\nResult\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#perform-required-imports",
        "title": "Use keywords to get a more precise result > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-solution-object",
        "title": "Use keywords to get a more precise result > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a simple file supplied with\nPyDPF-Post.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-keyword-list",
        "title": "Use keywords to get a more precise result > Get keyword list",
        "section": "Get keyword list",
        "text": "Get keyword list"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-result-objects",
        "title": "Use keywords to get a more precise result > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-displacement-result-using-scoping",
        "title": "Use keywords to get a more precise result > Get displacement result using scoping",
        "section": "Get displacement result using scoping",
        "text": "The default location is nodal.\nGet displacement result using scoping"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-information-on-displacement-result",
        "title": "Use keywords to get a more precise result > Get information on displacement result",
        "section": "Get information on displacement result",
        "text": "Get information on displacement result"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#use-named-selection-on-displacement-result",
        "title": "Use keywords to get a more precise result > Use named selection on displacement result",
        "section": "Use named selection on displacement result",
        "text": "Use named selection on displacement result"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#get-a-subresult",
        "title": "Use keywords to get a more precise result > Get a subresult",
        "section": "Get a subresult",
        "text": "Get a subresult"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#filter-result",
        "title": "Use keywords to get a more precise result > Filter result",
        "section": "Filter result",
        "text": "Filter the result on a time, time scoping, and set.\nFilter result"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#make-grouping",
        "title": "Use keywords to get a more precise result > Make grouping",
        "section": "Make grouping",
        "text": "Make grouping"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#filter-for-mapdl-elements",
        "title": "Use keywords to get a more precise result > Filter for MAPDL elements",
        "section": "Filter for MAPDL elements",
        "text": "Filter for only MAPDL elements of type solid 186.\nFilter for MAPDL elements"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#manipulate-result-and-change-its-definition",
        "title": "Use keywords to get a more precise result > Manipulate result and change its definition",
        "section": "Manipulate result and change its definition",
        "text": "Manipulate result and change its definition"
    },
    {
        "objectID": "examples/05-Legacy/07-result_keywords",
        "href": "examples/05-Legacy/07-result_keywords.html#use-miscellaneous-results",
        "title": "Use keywords to get a more precise result > Use miscellaneous results",
        "section": "Use miscellaneous results",
        "text": "You can use the same keywords for miscellaneouse results. For a complex\nresult, you can also use the keyword phase, which has a float value.\nTotal running time of the script: (0 minutes 0.146 seconds)\nDownload Jupyter notebook: 07-result_keywords.ipynb\nDownload Python source code: 07-result_keywords.py\nDownload zipped: 07-result_keywords.zip\nGallery generated by Sphinx-Gallery\nUse miscellaneous results\nphase\nDownload Jupyter notebook: 07-result_keywords.ipynb\nDownload Python source code: 07-result_keywords.py\nDownload zipped: 07-result_keywords.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain_energy_density.html#elemental_nodal_plastic_strain_energy_density",
        "title": "elemental_nodal_plastic_strain_energy_density",
        "section": "elemental_nodal_plastic_strain_energy_density",
        "text": "Get result data for the elemental nodal plastic strain energy density.\nelemental_nodal_plastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain_energy_density",
        "title": "elemental_nodal_plastic_strain_energy_density > elemental_nodal_plastic_strain_energy_density > elemental_nodal_plastic_strain_energy_density",
        "section": "elemental_nodal_plastic_strain_energy_density > elemental_nodal_plastic_strain_energy_density",
        "text": "MecanicMisc.elemental_nodal_plastic_strain_energy_density(**kwargs)\n\nGet result data for the elemental nodal plastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-and-use-a-result-object",
        "title": "Get and use a Result object",
        "section": "Get and use a Result object",
        "text": "This example shows how to use the legacy PyDPF-Post API to get and use a Result object.\nGet and use a Result object\nResult\nResult"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#perform-required-imports",
        "title": "Get and use a Result object > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-solution-object",
        "title": "Get and use a Result object > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object and instantiate with the path for the result\nfile.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-result-objects",
        "title": "Get and use a Result object > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-displacement-result",
        "title": "Get and use a Result object > Get displacement result",
        "section": "Get displacement result",
        "text": "Get displacement result"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-information-on-displacement-result",
        "title": "Get and use a Result object > Get information on displacement result",
        "section": "Get information on displacement result",
        "text": "Get information on displacement result"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-tensor-stress-result",
        "title": "Get and use a Result object > Get tensor stress result",
        "section": "Get tensor stress result",
        "text": "You can get the nodal or elemental location for a tesnsor stress result.\nThe default is the nodal location.\nGet tensor stress result"
    },
    {
        "objectID": "examples/05-Legacy/09-basics",
        "href": "examples/05-Legacy/09-basics.html#get-information-on-tensor-result",
        "title": "Get and use a Result object > Get information on tensor result",
        "section": "Get information on tensor result",
        "text": "Total running time of the script: (0 minutes 0.233 seconds)\nDownload Jupyter notebook: 09-basics.ipynb\nDownload Python source code: 09-basics.py\nDownload zipped: 09-basics.zip\nGallery generated by Sphinx-Gallery\nGet information on tensor result\nDownload Jupyter notebook: 09-basics.ipynb\nDownload Python source code: 09-basics.py\nDownload zipped: 09-basics.zip"
    },
    {
        "objectID": "api/ansys.dpf.post.post_utility",
        "href": "api/ansys.dpf.post.post_utility.html#post-utility",
        "title": "Post-utility",
        "section": "Post-utility",
        "text": "This module is used for the initialization of PyDPF-Post objects.\nPost-utility"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.result_fields_container",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.result_fields_container.html#result_fields_container",
        "title": "result_fields_container",
        "section": "result_fields_container",
        "text": "Result fields container.\nresult_fields_container"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.result_fields_container",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.result_fields_container.html#ansys.dpf.post.result_data.ResultData.result_fields_container",
        "title": "result_fields_container > result_fields_container > result_fields_container",
        "section": "result_fields_container > result_fields_container",
        "text": "property ResultData.result_fields_container\n\nResult fields container.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.static_mechanical_simulation",
        "href": "api/ansys.dpf.post.static_mechanical_simulation.html#staticmechanicalsimulation",
        "title": "StaticMechanicalSimulation",
        "section": "StaticMechanicalSimulation",
        "text": "StaticMechanicalSimulation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.yz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.yz.html#yz",
        "title": "yz",
        "section": "yz",
        "text": "Result data for the YZ component of the tensor.\nyz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.yz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.yz.html#ansys.dpf.post.stress.Stress.yz",
        "title": "yz > yz > yz",
        "section": "yz > yz",
        "text": "property Stress.yz\n\nResult data for the YZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress_ratio.html#elemental_nodal_stress_ratio",
        "title": "elemental_nodal_stress_ratio",
        "section": "elemental_nodal_stress_ratio",
        "text": "Get result data for the elemental nodal stress ratio.\nelemental_nodal_stress_ratio"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress_ratio.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress_ratio",
        "title": "elemental_nodal_stress_ratio > elemental_nodal_stress_ratio > elemental_nodal_stress_ratio",
        "section": "elemental_nodal_stress_ratio > elemental_nodal_stress_ratio",
        "text": "MecanicMisc.elemental_nodal_stress_ratio(**kwargs)\n\nGet result data for the elemental nodal stress ratio.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#use-basic-features",
        "title": "Use basic features",
        "section": "Use basic features",
        "text": "This example shows how to use basic features of the legacy PyDPF-Post API.\nUse basic features"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#perform-required-imports",
        "title": "Use basic features > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#get-solution-object",
        "title": "Use basic features > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a simple file supplied with\nPyDPF-Post.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#get-mesh-and-time-frequency-support",
        "title": "Use basic features > Get mesh and time frequency support",
        "section": "Get mesh and time frequency support",
        "text": "Get the mesh and time frequency support. The mesh is the support of the model.\nThe time frequency support is the time/frequency representation of the model.\nGet mesh and time frequency support"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#get-result-object",
        "title": "Use basic features > Get Result object",
        "section": "Get Result object",
        "text": "Get a Result object from the Solution object. The Result object\ncan be a stress, plastic strain, elastic strain, temperature, or displacement.\nGet Result object\nResult\nResult\nSolution\nResult"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#compute-data",
        "title": "Use basic features > Compute data",
        "section": "Compute data",
        "text": "SX subresult\nThis code gets the SX subresult, which is the stress tensor in the XX direction.\nStress tensor result\nThis code gets the minimum and maximum stresses at a field for all\ndirections (XX, XY, XZ, XY, YZ, and XZ.\nCompute data\nSX\nXX\nXY\nXZ\nXY\nYZ\nXZ"
    },
    {
        "objectID": "examples/05-Legacy/00-overview_example",
        "href": "examples/05-Legacy/00-overview_example.html#plot-result",
        "title": "Use basic features > Plot result",
        "section": "Plot result",
        "text": "Plot a result by using the plot_contour() method.\nTotal running time of the script: (0 minutes 1.041 seconds)\nDownload Jupyter notebook: 00-overview_example.ipynb\nDownload Python source code: 00-overview_example.py\nDownload zipped: 00-overview_example.zip\nGallery generated by Sphinx-Gallery\nPlot result\nplot_contour()\nDownload Jupyter notebook: 00-overview_example.ipynb\nDownload Python source code: 00-overview_example.py\nDownload zipped: 00-overview_example.zip"
    },
    {
        "objectID": "api/ansys.dpf.post.tools",
        "href": "api/ansys.dpf.post.tools.html#tools",
        "title": "tools",
        "section": "tools",
        "text": "This module has been replaced by the helpers sub-package.\nPlease use ansys.dpf.post.helpers.selections.select instead.\ntools"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_penetration",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_penetration.html#elemental_contact_penetration",
        "title": "elemental_contact_penetration",
        "section": "elemental_contact_penetration",
        "text": "Get result data for the elemental contact penetration.\nelemental_contact_penetration"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_penetration",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_penetration.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_penetration",
        "title": "elemental_contact_penetration > elemental_contact_penetration > elemental_contact_penetration",
        "section": "elemental_contact_penetration > elemental_contact_penetration",
        "text": "MecanicMisc.elemental_contact_penetration(**kwargs)\n\nGet result data for the elemental contact penetration.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/04-Fluid-Examples/sg_execution_times",
        "href": "examples/04-Fluid-Examples/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:03.342 total execution time for 1 file from examples/04-Fluid-Examples:\nExample\nTime\nMem (MB)\nsphx_glr_examples_04-Fluid-Examples_00-explore-fluid-simulation.py (00-explore-fluid-simulation.py)\n00:03.342\n0.0\nComputation times\n00-explore-fluid-simulation.py"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.time_freq_support",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.time_freq_support.html#time_freq_support",
        "title": "time_freq_support",
        "section": "time_freq_support",
        "text": "Description of the temporal/frequency analysis of the model.\ntime_freq_support"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.time_freq_support",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.time_freq_support.html#ansys.dpf.post.dpf_solution.DpfSolution.time_freq_support",
        "title": "time_freq_support > time_freq_support > time_freq_support",
        "section": "time_freq_support > time_freq_support",
        "text": "property DpfSolution.time_freq_support\n\nDescription of the temporal/frequency analysis of the model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.x",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.x.html#x",
        "title": "x",
        "section": "x",
        "text": "Result data for the X component of the vector.\nx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.x",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.x.html#ansys.dpf.post.displacement.Displacement.x",
        "title": "x > x > x",
        "section": "x > x",
        "text": "property Displacement.x\n\nResult data for the X component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/sg_execution_times",
        "href": "examples/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:00.000 total execution time for 0 files from examples:\nExample\nTime\nMem (MB)\nN/A\nN/A\nN/A\nComputation times"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#explore-and-manipulate-the-mesh",
        "title": "Explore and manipulate the mesh",
        "section": "Explore and manipulate the mesh",
        "text": "This example shows how to explore and manipulate the mesh to query mesh data\nsuch as connectivity tables, element IDs, and element types.\nExplore and manipulate the mesh"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#perform-required-imports",
        "title": "Explore and manipulate the mesh > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#load-result-file",
        "title": "Explore and manipulate the mesh > Load result file",
        "section": "Load result file",
        "text": "Load the result file in a Simulation object that allows access to the results.\nThe Simulation object must be instantiated with the path for the result file.\nFor example, \"C:/Users/user/my_result.rst\" on Windows\nor \"/home/user/my_result.rst\" on Linux.\nLoad result file\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-mesh-and-print-it",
        "title": "Explore and manipulate the mesh > Get mesh and print it",
        "section": "Get mesh and print it",
        "text": "Get mesh and print it"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#plot-mesh",
        "title": "Explore and manipulate the mesh > Plot mesh",
        "section": "Plot mesh",
        "text": "Plot the mesh to view the bare mesh of the model.\nPlot mesh"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-basic-information-about-mesh",
        "title": "Explore and manipulate the mesh > Get basic information about mesh",
        "section": "Get basic information about mesh",
        "text": "The Mesh object has several properties allowing access to different information.\nGet the number of nodes.\nGet the list of node IDs.\nGet the number of elements.\nGet the list of element IDs.\nGet the unit of the mesh.\nGet basic information about mesh\nMesh"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-named-selections",
        "title": "Explore and manipulate the mesh > Get named selections",
        "section": "Get named selections",
        "text": "The available named selections are given as a dictionary\nwith the names as keys and the actual NamedSelection objects as values.\nPrint the dictionary to get the available names.\nGet a specific named selection by using its name as the key.\nGet named selections\nNamedSelection"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-elements",
        "title": "Explore and manipulate the mesh > Get elements",
        "section": "Get elements",
        "text": "Get a list of the elements.\nGet a specific element by its ID.\nGet a specific element by its index.\nGet elements"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-information-about-a-particular-element",
        "title": "Explore and manipulate the mesh > Get information about a particular element",
        "section": "Get information about a particular element",
        "text": "You can request the IDs of the nodes attached to an element.\nGet the list of the element’s nodes.\nGet the number of nodes attached to the element.\nGet the type of the element.\nGet the shape of the element.\nGet information about a particular element"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-element-types-and-materials",
        "title": "Explore and manipulate the mesh > Get element types and materials",
        "section": "Get element types and materials",
        "text": "The Mesh object provides access to properties defined on all elements,\nsuch as their types or associated materials.\nGet the type of all elements.\nGet the materials of all elements.\nGet element types and materials\nMesh"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-elemental-connectivity",
        "title": "Explore and manipulate the mesh > Get elemental connectivity",
        "section": "Get elemental connectivity",
        "text": "The elemental connectivity maps elements to connected nodes using either IDs or indexes.\nAccess the indexes of the connected nodes using an element’s index:\nAccess the IDs of the connected nodes using an element’s index:\nEach connectivity object has a by_id property that changes the input from index to ID.\nAccess the indexes of the connected nodes using an element’s ID.\nAccess the IDs of the connected nodes using an element’s ID:\nGet elemental connectivity\nby_id"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-a-node-or-node-information",
        "title": "Explore and manipulate the mesh > Get a node or node information",
        "section": "Get a node or node information",
        "text": "Get a node by its ID.\nGet a node by its index.\nGet the coordinates of all nodes.\nGet the coordinates of a particular node.\nGet a node or node information"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#get-nodal-connectivity",
        "title": "Explore and manipulate the mesh > Get nodal connectivity",
        "section": "Get nodal connectivity",
        "text": "The nodal connectivity maps nodes to connected elements, either using IDs or indexes.\nAccess the indexes of the connected elements using a node’s index.\nAccess the IDs of the connected elements using a node’s index.\nEach connectivity object has a by_id property that changes the input from index to ID.\nAccess the indexes of the connected elements using a node’s ID.\nAccess the IDs of the connected elements using a node’s ID.\nGet nodal connectivity\nby_id"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-mesh-exploration",
        "href": "examples/01-Detailed-Examples/05-mesh-exploration.html#split-global-mesh-into-mesh-parts",
        "title": "Explore and manipulate the mesh > Split global mesh into mesh parts",
        "section": "Split global mesh into mesh parts",
        "text": "You can split the global mesh according to mesh properties to work on specific parts of the mesh.\nA Meshes object obtained.\nPlot a Meshes object to plot a combination of all Mesh objects within the split mesh.\nSelect a specific ``Mesh``object in the split mesh by index.\nSplit the global mesh and select meshes based on specific property values.\nSelect a mesh object with a unique combination of property values.\nTotal running time of the script: (0 minutes 13.968 seconds)\nDownload Jupyter notebook: 05-mesh-exploration.ipynb\nDownload Python source code: 05-mesh-exploration.py\nDownload zipped: 05-mesh-exploration.zip\nGallery generated by Sphinx-Gallery\nSplit global mesh into mesh parts\nMeshes\nMeshes\nMesh\nmesh\nDownload Jupyter notebook: 05-mesh-exploration.ipynb\nDownload Python source code: 05-mesh-exploration.py\nDownload zipped: 05-mesh-exploration.zip"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#reduce-cyclic-model-size-by-using-the-mesh-skin-for-result-and-mesh-extraction",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction",
        "section": "Reduce cyclic model size by using the mesh skin for result and mesh extraction",
        "text": "This example shows postprocessing on a mesh skin for a cyclic model analysis.\nThe skin mesh is rebuilt with new surface elements connecting the nodes on the external skin\nof the solid mesh. These surface elements types are chosen with respect to the solid elements\nfacets having all their nodes on the skin.\nThis feature, available for all types of mechanical simulation supporting cyclic\nor cyclic multi-stage models, allows you to reduce the size of both the mesh\nand extracted data to improve processing performance. Because larger stresses and\nstrains are usually located on the skin of a model, computing results on the skin gives\nequivalent maximum values in most cases.\nPostprocessing of elemental or elemental nodal results requires an element solid-to-skin mapping\nto get from a solid element result to a facet result. Because the connectivity of the new surface\nelements built on the skin are different from the connectivity of the solid elements, small\ndifferences can be found after result averaging.\nTo plot cyclic expanded results, the skin mesh is expanded.\nReduce cyclic model size by using the mesh skin for result and mesh extraction"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#perform-required-imports",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#get-simulation-object",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#extract-displacement-data",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data on the skin.\nExtract displacement data"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#extract-stress-and-strain-data",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction > Extract stress and strain data",
        "section": "Extract stress and strain data",
        "text": "Extract stress and elastic strain data over the entire mesh and on the skin.\nAveraging and invariants computation are done through a solid-to-skin connectivity mapping.\nExtract stress and strain data"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin",
        "href": "examples/03-Cyclic-Examples/04-cyclic-mesh-skin.html#get-stress-results-on-skin-of-first-sector-with-a-cyclic-phase",
        "title": "Reduce cyclic model size by using the mesh skin for result and mesh extraction > Get stress results on skin of first sector with a cyclic phase",
        "section": "Get stress results on skin of first sector with a cyclic phase",
        "text": "Total running time of the script: (0 minutes 3.234 seconds)\nDownload Jupyter notebook: 04-cyclic-mesh-skin.ipynb\nDownload Python source code: 04-cyclic-mesh-skin.py\nDownload zipped: 04-cyclic-mesh-skin.zip\nGallery generated by Sphinx-Gallery\nGet stress results on skin of first sector with a cyclic phase\nDownload Jupyter notebook: 04-cyclic-mesh-skin.ipynb\nDownload Python source code: 04-cyclic-mesh-skin.py\nDownload zipped: 04-cyclic-mesh-skin.zip"
    },
    {
        "objectID": "api/ansys.dpf.post.transient_mechanical_simulation",
        "href": "api/ansys.dpf.post.transient_mechanical_simulation.html#transientmechanicalsimulation",
        "title": "TransientMechanicalSimulation",
        "section": "TransientMechanicalSimulation",
        "text": "TransientMechanicalSimulation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yz.html#yz",
        "title": "yz",
        "section": "yz",
        "text": "Result data for the YZ component of the tensor.\nyz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yz.html#ansys.dpf.post.strain.ElasticStrain.yz",
        "title": "yz > yz > yz",
        "section": "yz > yz",
        "text": "property ElasticStrain.yz\n\nResult data for the YZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_structural_temperature.html#elemental_nodal_structural_temperature",
        "title": "elemental_nodal_structural_temperature",
        "section": "elemental_nodal_structural_temperature",
        "text": "Get result data for the elemental nodal structural temperature.\nelemental_nodal_structural_temperature"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_structural_temperature.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_structural_temperature",
        "title": "elemental_nodal_structural_temperature > elemental_nodal_structural_temperature > elemental_nodal_structural_temperature",
        "section": "elemental_nodal_structural_temperature > elemental_nodal_structural_temperature",
        "text": "MecanicMisc.elemental_nodal_structural_temperature(**kwargs)\n\nGet result data for the elemental nodal structural temperature.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_structural_temperature.html#elemental_structural_temperature",
        "title": "elemental_structural_temperature",
        "section": "elemental_structural_temperature",
        "text": "Get result data for the elemental structural temperature.\nelemental_structural_temperature"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_structural_temperature.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_structural_temperature",
        "title": "elemental_structural_temperature > elemental_structural_temperature > elemental_structural_temperature",
        "section": "elemental_structural_temperature > elemental_structural_temperature",
        "text": "MecanicMisc.elemental_structural_temperature(**kwargs)\n\nGet result data for the elemental structural temperature.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.modal_basis",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.modal_basis.html#modal_basis",
        "title": "modal_basis",
        "section": "modal_basis",
        "text": "Get result data for the modal basis.\nmodal_basis"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.modal_basis",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.modal_basis.html#ansys.dpf.post.misc_results.MecanicMisc.modal_basis",
        "title": "modal_basis > modal_basis > modal_basis",
        "section": "modal_basis > modal_basis",
        "text": "MecanicMisc.modal_basis(**kwargs)\n\nGet result data for the modal basis.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_reaction_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_reaction_force.html#nodal_raw_reaction_force",
        "title": "nodal_raw_reaction_force",
        "section": "nodal_raw_reaction_force",
        "text": "Get result data for the nodal raw reaction force.\nnodal_raw_reaction_force"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_reaction_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_reaction_force.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_reaction_force",
        "title": "nodal_raw_reaction_force > nodal_raw_reaction_force > nodal_raw_reaction_force",
        "section": "nodal_raw_reaction_force > nodal_raw_reaction_force",
        "text": "MecanicMisc.nodal_raw_reaction_force(**kwargs)\n\nGet result data for the nodal raw reaction force.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#access-results",
        "title": "Access results",
        "section": "Access results",
        "text": "After a result file is loaded, you can access the results themselves. You can query results using dedicated methods.\nThis code shows how to instantiate the Simulation object and then\nget the displacement result for a loaded simulation:\nYou can use keyword arguments to specify additional options,\nincluding the components, scope, and time. For detailed examples,\nsee ref_result_keywords.\nPyDPF-Post supports two types of result files:\nStructural (RST)\nThermal/electric (RTH) (with the legacy load_solution() method only)\nIt also supports some LS-DYNA result files and some Fluent and CFX result files as indicated in\nsolver_result_files_support.\nYou should only request results available in the result file.\nTo determine which results are available, see user_guide_accessing_file_metadata.\nAccess results\nSimulation\ndisplacement\nload_solution()"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#structural-result-files",
        "title": "Access results > Structural result files",
        "section": "Structural result files",
        "text": "You can use the legacy Solution object to access structural results.\nAfter loading a Solution object from a structural analysis result (RST)\nfile, you can query these Result objects:\ndisplacement\nstress\nelastic_strain\nplastic_strain\nstructural_temperature\nStructural result files\nSolution\nSolution\nResult\ndisplacement\nstress\nelastic_strain\nplastic_strain\nstructural_temperature"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#displacement",
        "title": "Access results > Displacement",
        "section": "Displacement",
        "text": "Displacement is the DOF solution for a structural analysis. The location argument\nfor a DOF solution must be modal.\nThis code shows how to access the Displacement\nresult object:\nThe displacement Result object corresponds to a vector field. To obtain the scalar\ncomponents (y-components) of this field, access the subresult with this code:\nFor more information, see ref_api_result_data.\nDisplacement\nDisplacement\nResult"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#stress",
        "title": "Access results > Stress",
        "section": "Stress",
        "text": "This code shows to access the Stress result\nobject:\nA Stress result object corresponds to a tensor field. To obtain the scalar\ncomponents of this field, such as the normal y-stresses, access the subresult:\nYou can query other components, as well as whole tensor data, accordingly.\nFor more information, see ref_api_result_data.\nStress\nStress\nStress"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#elastic-and-plastic-strain",
        "title": "Access results > Elastic and plastic strain",
        "section": "Elastic and plastic strain",
        "text": "This code shows how to access the ElasticStrain and\nPlasticStrain result objects:\nA Strain result object corresponds to a tensor field. To obtain the scalar\ncomponents of this field, such as the shear xy-strains, access the subresult:\nYou can query other components, as well as whole tensor data, accordingly.\nFor more information, see ref_api_result_data.\nElastic and plastic strain\nElasticStrain\nPlasticStrain\nStrain"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#structural-temperature",
        "title": "Access results > Structural temperature",
        "section": "Structural temperature",
        "text": "This code shows to access the StructuralTemperature\nresult object:\nTo access the temperature scalar field, use this code:\nStructural temperature\nStructuralTemperature"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#miscellaneous-results",
        "title": "Access results > Miscellaneous results",
        "section": "Miscellaneous results",
        "text": "The Solution object might contain other miscellaneous ansys.dpf.post.misc_results.MecanicMisc\nresult objects that you can access. For example, this code shows how to access the nodal_acceleration\nresult object:\nAll keyword arguments are available for miscellaneous results, except location.\nFor more information, see ref_result_keywords.\nSome subresults might be available as keyword arguments, such as the scalar\ncomponents of nodal acceleration:\nTo determine available queries, you can browse the metadata in the result file. For more\ninformation, see user_guide_accessing_file_metadata.\nMiscellaneous results\nSolution\nansys.dpf.post.misc_results.MecanicMisc\nnodal_acceleration\nlocation"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#thermalelectric-result-files",
        "title": "Access results > Thermal/electric result files",
        "section": "Thermal/electric result files",
        "text": "You can access thermal/electric results using the legacy Solution object.\nAfter loading a Solution object from a thermal/electric analysis\nresult file (RTH), you can query these Result objects:\ntemperature\nheat_flux\nelectric_field\nelectric_potential\nThermal/electric result files\nSolution\nSolution\nResult\ntemperature\nheat_flux\nelectric_field\nelectric_potential"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#temperature",
        "title": "Access results > Temperature",
        "section": "Temperature",
        "text": "Temperature is the DOF solution for a thermal analysis.\nThis code shows how to access the Temperature\nresult object:\nAs inferred above, the location argument for a DOF solution must be nodal.\nThis code shows how to access the scalar field directly:\nTemperature\nTemperature\nlocation"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#heat-flux",
        "title": "Access results > Heat flux",
        "section": "Heat flux",
        "text": "This code shows how to access the HeatFlux result\nobject:\nThe HeatFlux result object corresponds to a vector field. To obtain the scalar\ncomponents (x-components) of this field, access the subresult:\nYou can query other components accordingly. For more information, see\nref_api_result_data.\nHeat flux\nHeatFlux\nHeatFlux"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#electric-field",
        "title": "Access results > Electric field",
        "section": "Electric field",
        "text": "This code shows how to access the ElectricField\nresult object:\nThe electric_field result object corresponds to a vector field. To\nobtain the scalar components of this field, such as the x-components, access\nthe subresult:\nFor more information, see ref_api_result_data.\nElectric field\nElectricField\nelectric_field"
    },
    {
        "objectID": "user_guide/accessing_results",
        "href": "user_guide/accessing_results.html#electric-potential",
        "title": "Access results > Electric potential",
        "section": "Electric potential",
        "text": "This code shows how to access the ElectricPotential\nresult object:\nThe electric_potential result object corresponds to a scalar field. You can access\nits values with:\nElectric potential\nElectricPotential\nelectric_potential"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_3.html#principal_3",
        "title": "principal_3",
        "section": "principal_3",
        "text": "Results data for the third principal component of the tensor.\nprincipal_3"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_3.html#ansys.dpf.post.strain.ElasticStrain.principal_3",
        "title": "principal_3 > principal_3 > principal_3",
        "section": "principal_3 > principal_3",
        "text": "property ElasticStrain.principal_3\n\nResults data for the third principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/02-modal-extract-sub-results",
        "href": "examples/01-Detailed-Examples/02-modal-extract-sub-results.html#extract-components-of-results-modal-simulation",
        "title": "Extract components of results (modal simulation)",
        "section": "Extract components of results (modal simulation)",
        "text": "This example processes a modal simulation to extract subcomponents\nof results like displacement and elastic strain.\nExtract components of results (modal simulation)"
    },
    {
        "objectID": "examples/01-Detailed-Examples/02-modal-extract-sub-results",
        "href": "examples/01-Detailed-Examples/02-modal-extract-sub-results.html#perform-required-imports",
        "title": "Extract components of results (modal simulation) > Perform required imports",
        "section": "Perform required imports",
        "text": "This example uses a supplied file that you can get by importing the DPF examples\npackage.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/02-modal-extract-sub-results",
        "href": "examples/01-Detailed-Examples/02-modal-extract-sub-results.html#get-simulation-object",
        "title": "Extract components of results (modal simulation) > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/02-modal-extract-sub-results",
        "href": "examples/01-Detailed-Examples/02-modal-extract-sub-results.html#extract-x-displacement-over-a-list-modes",
        "title": "Extract components of results (modal simulation) > Extract X displacement over a list modes",
        "section": "Extract X displacement over a list modes",
        "text": "To help pick the right modes, printing the time frequency support.\nExtract X displacement over a list modes"
    },
    {
        "objectID": "examples/01-Detailed-Examples/02-modal-extract-sub-results",
        "href": "examples/01-Detailed-Examples/02-modal-extract-sub-results.html#extract-xx-and-xy-elastic-strain-over-a-list-modes",
        "title": "Extract components of results (modal simulation) > Extract XX and XY elastic strain over a list modes",
        "section": "Extract XX and XY elastic strain over a list modes",
        "text": "Get X displacements on the first two modes.\nTotal running time of the script: (0 minutes 1.364 seconds)\nDownload Jupyter notebook: 02-modal-extract-sub-results.ipynb\nDownload Python source code: 02-modal-extract-sub-results.py\nDownload zipped: 02-modal-extract-sub-results.zip\nGallery generated by Sphinx-Gallery\nExtract XX and XY elastic strain over a list modes\nDownload Jupyter notebook: 02-modal-extract-sub-results.ipynb\nDownload Python source code: 02-modal-extract-sub-results.py\nDownload zipped: 02-modal-extract-sub-results.zip"
    },
    {
        "objectID": "examples/02-Performance-Improvements/index",
        "href": "examples/02-Performance-Improvements/index.html#pydpf-post-performance-improvements",
        "title": "PyDPF-Post performance improvements",
        "section": "PyDPF-Post performance improvements",
        "text": "These examples show how to improve computation performance of PyDPF-Post when necessary.\nsphx_glr_examples_02-Performance-Improvements_01-mesh-external-layer.py\nsphx_glr_examples_02-Performance-Improvements_02-mesh-skin.py\nsphx_glr_examples_02-Performance-Improvements_03-mesh-external-layer-compare.py\nPyDPF-Post performance improvements"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-base-and-duplicate-sector-results-for-a-modal-cyclic-symmetry-model",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model",
        "section": "Get base and duplicate sector results for a modal cyclic symmetry model",
        "text": "This example shows how to extract real and imaginary results from a modal cyclic symmetry model.\nGet base and duplicate sector results for a modal cyclic symmetry model"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#perform-required-imports",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-simulation-object",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-base-and-duplicate-sector-displacement-results",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get base and duplicate sector displacement results",
        "section": "Get base and duplicate sector displacement results",
        "text": "With expand_cyclic=False, the result providers (such as stress and displacement) return\nresults for base and duplicate sectors for the cyclic symmetry model.\nThe output dataframe print displays the organization of the data.\nThe base_sector label gives access to base sector\nresults with base_sector=True and duplicate sector results with\nbase_sector=False for all modes.\nThe print also shows that there are no duplicate sectors for the first six modes.\nIndeed, modes with harmonic index 0 have 0.0 displacement, stresses… on\nduplicate sectors.\nGet base and duplicate sector displacement results\nexpand_cyclic=False\nbase_sector\nbase_sector=True\nbase_sector=False"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-displacement-results-on-first-sector-with-a-cyclic-phase",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get displacement results on first sector with a cyclic phase",
        "section": "Get displacement results on first sector with a cyclic phase",
        "text": "Get displacemetn results with phi set to different values.\nGet displacement results on first sector with a cyclic phase"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-nodal-stress-results-on-first-sector-with-a-cyclic-phase",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get nodal stress results on first sector with a cyclic phase",
        "section": "Get nodal stress results on first sector with a cyclic phase",
        "text": "Get nodal stress results on first sector with a cyclic phase"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-elemental-nodal-stress-results-on-first-sector-with-a-cyclic-phase",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get elemental nodal stress results on first sector with a cyclic phase",
        "section": "Get elemental nodal stress results on first sector with a cyclic phase",
        "text": "Elemental nodal is the default result location for stress and strain.\nGet elemental nodal stress results on first sector with a cyclic phase"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion",
        "href": "examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.html#get-nodal-stress-results-expanded",
        "title": "Get base and duplicate sector results for a modal cyclic symmetry model > Get nodal stress results expanded",
        "section": "Get nodal stress results expanded",
        "text": "Total running time of the script: (0 minutes 6.296 seconds)\nDownload Jupyter notebook: 05-modal_cyclic_no_expansion.ipynb\nDownload Python source code: 05-modal_cyclic_no_expansion.py\nDownload zipped: 05-modal_cyclic_no_expansion.zip\nGallery generated by Sphinx-Gallery\nGet nodal stress results expanded\nDownload Jupyter notebook: 05-modal_cyclic_no_expansion.ipynb\nDownload Python source code: 05-modal_cyclic_no_expansion.py\nDownload zipped: 05-modal_cyclic_no_expansion.zip"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#extract-multi-stage-cyclic-results",
        "title": "Extract multi-stage cyclic results",
        "section": "Extract multi-stage cyclic results",
        "text": "This example uses a multi-stage modal analysis with cyclic symmetry to show\nhow to expand the mesh and results.\nExtract multi-stage cyclic results"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#perform-required-imports",
        "title": "Extract multi-stage cyclic results > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#get-simulation-object",
        "title": "Extract multi-stage cyclic results > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#extract-expanded-displacement-normal",
        "title": "Extract multi-stage cyclic results > Extract expanded displacement normal",
        "section": "Extract expanded displacement normal",
        "text": "Extract expanded displacement normal"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#extract-equivalent-von-mises-nodal-stress-without-expansion",
        "title": "Extract multi-stage cyclic results > Extract equivalent von Mises nodal stress without expansion",
        "section": "Extract equivalent von Mises nodal stress without expansion",
        "text": "Extract equivalent von Mises nodal stress without expansion"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#extract-equivalent-von-mises-nodal-stress-expanded-on-first-four-sectors-of-first-stage",
        "title": "Extract multi-stage cyclic results > Extract equivalent von Mises nodal stress expanded on first four sectors of first stage",
        "section": "Extract equivalent von Mises nodal stress expanded on first four sectors of first stage",
        "text": "Extract equivalent von Mises nodal stress expanded on first four sectors of first stage"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results",
        "href": "examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.html#extract-equivalent-von-mises-nodal-stress-expanded-on-first-two-sectors-of-both-stages",
        "title": "Extract multi-stage cyclic results > Extract equivalent von Mises nodal stress expanded on first two sectors of both stages",
        "section": "Extract equivalent von Mises nodal stress expanded on first two sectors of both stages",
        "text": "Total running time of the script: (0 minutes 3.436 seconds)\nDownload Jupyter notebook: 02-multi-stage-cyclic-results.ipynb\nDownload Python source code: 02-multi-stage-cyclic-results.py\nDownload zipped: 02-multi-stage-cyclic-results.zip\nGallery generated by Sphinx-Gallery\nExtract equivalent von Mises nodal stress expanded on first two sectors of both stages\nDownload Jupyter notebook: 02-multi-stage-cyclic-results.ipynb\nDownload Python source code: 02-multi-stage-cyclic-results.py\nDownload zipped: 02-multi-stage-cyclic-results.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.scalar",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.scalar.html#scalar",
        "title": "scalar",
        "section": "scalar",
        "text": "Result data for the scalar values.\nscalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.scalar",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.scalar.html#ansys.dpf.post.temperature.StructuralTemperature.scalar",
        "title": "scalar > scalar > scalar",
        "section": "scalar > scalar",
        "text": "property StructuralTemperature.scalar\n\nResult data for the scalar values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_creep_strain.html#nodal_accu_eqv_creep_strain",
        "title": "nodal_accu_eqv_creep_strain",
        "section": "nodal_accu_eqv_creep_strain",
        "text": "Get result data for the nodal accurate equivalent creep strain.\nnodal_accu_eqv_creep_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_creep_strain.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_creep_strain",
        "title": "nodal_accu_eqv_creep_strain > nodal_accu_eqv_creep_strain > nodal_accu_eqv_creep_strain",
        "section": "nodal_accu_eqv_creep_strain > nodal_accu_eqv_creep_strain",
        "text": "MecanicMisc.nodal_accu_eqv_creep_strain(**kwargs)\n\nGet result data for the nodal accurate equivalent creep strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#postprocess-a-static-mechanical-simulation",
        "title": "Postprocess a static mechanical simulation",
        "section": "Postprocess a static mechanical simulation",
        "text": "This example shows how to postprocess a static mechanical simulation to extract results like\ndisplacement and stress. It shows how to selecting subparts of the results by scoping\non specific nodes or elements.\nPostprocess a static mechanical simulation"
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#perform-required-imports",
        "title": "Postprocess a static mechanical simulation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#get-simulation-object",
        "title": "Postprocess a static mechanical simulation > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#select-subparts-of-displacement",
        "title": "Postprocess a static mechanical simulation > Select subparts of displacement",
        "section": "Select subparts of displacement",
        "text": "Select subparts of displacement"
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#compute-total-displacement-norm",
        "title": "Postprocess a static mechanical simulation > Compute total displacement (norm)",
        "section": "Compute total displacement (norm)",
        "text": "Compute the norm of the displacement on a selection of nodes.\nCompute total displacement (norm)"
    },
    {
        "objectID": "examples/00-Different-analysis-types/01-static-simulation",
        "href": "examples/00-Different-analysis-types/01-static-simulation.html#extract-tensor-stresses",
        "title": "Postprocess a static mechanical simulation > Extract tensor stresses",
        "section": "Extract tensor stresses",
        "text": "Extract raw elemental nodal stresses from the result file. Then, apply averaging\nand compute equivalent stresses.\nTotal running time of the script: (0 minutes 9.304 seconds)\nDownload Jupyter notebook: 01-static-simulation.ipynb\nDownload Python source code: 01-static-simulation.py\nDownload zipped: 01-static-simulation.zip\nGallery generated by Sphinx-Gallery\nExtract tensor stresses\nDownload Jupyter notebook: 01-static-simulation.ipynb\nDownload Python source code: 01-static-simulation.py\nDownload zipped: 01-static-simulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_thermal_strains.html#elemental_nodal_thermal_strains",
        "title": "elemental_nodal_thermal_strains",
        "section": "elemental_nodal_thermal_strains",
        "text": "Get result data for the elemental nodal thermal strains.\nelemental_nodal_thermal_strains"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_thermal_strains.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_thermal_strains",
        "title": "elemental_nodal_thermal_strains > elemental_nodal_thermal_strains > elemental_nodal_thermal_strains",
        "section": "elemental_nodal_thermal_strains > elemental_nodal_thermal_strains",
        "text": "MecanicMisc.elemental_nodal_thermal_strains(**kwargs)\n\nGet result data for the elemental nodal thermal strains.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress.html#elemental_stress",
        "title": "elemental_stress",
        "section": "elemental_stress",
        "text": "Get result data for the elemental stress.\nelemental_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_stress",
        "title": "elemental_stress > elemental_stress > elemental_stress",
        "section": "elemental_stress > elemental_stress",
        "text": "MecanicMisc.elemental_stress(**kwargs)\n\nGet result data for the elemental stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post",
        "href": "api/ansys.dpf.post.html#ansysdpfpost-package",
        "title": "ansys.dpf.post package",
        "section": "ansys.dpf.post package",
        "text": "ansys.dpf.post package"
    },
    {
        "objectID": "api/ansys.dpf.post",
        "href": "api/ansys.dpf.post.html#subpackages",
        "title": "ansys.dpf.post package > Subpackages",
        "section": "Subpackages",
        "text": "Subpackages"
    },
    {
        "objectID": "api/ansys.dpf.post",
        "href": "api/ansys.dpf.post.html#submodules",
        "title": "ansys.dpf.post package > Submodules",
        "section": "Submodules",
        "text": "Submodules"
    },
    {
        "objectID": "api/ansys.dpf.post",
        "href": "api/ansys.dpf.post.html#module-contents",
        "title": "ansys.dpf.post package > Module contents",
        "section": "Module contents",
        "text": "Post-processing module.\nUsing the Data Processing Framework.\nAllow to create a result object, then use it to get desired results.\nModule contents"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.y",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.y.html#y",
        "title": "y",
        "section": "y",
        "text": "Result data for the Y component of the vector.\ny"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.y",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.y.html#ansys.dpf.post.electric_results.ElectricField.y",
        "title": "y > y > y",
        "section": "y > y",
        "text": "property ElectricField.y\n\nResult data for the Y component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain.html#nodal_elastic_strain",
        "title": "nodal_elastic_strain",
        "section": "nodal_elastic_strain",
        "text": "Get result data for the nodal elastic strain.\nnodal_elastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain",
        "title": "nodal_elastic_strain > nodal_elastic_strain > nodal_elastic_strain",
        "section": "nodal_elastic_strain > nodal_elastic_strain",
        "text": "MecanicMisc.nodal_elastic_strain(**kwargs)\n\nGet result data for the nodal elastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "This section describes PyDPF-Post and how to install it in user mode so that you can\nquickly begin using it. For information on installing PyDPF-Post in development mode,\nsee contributing.\nUnderstand the key features of PyDPF-Post.\nView version compatibilities of PyDPF-Core and PyPDF-Post for each\nDPF server version.\nView PyDPF-Post software requirements.\nInstall PyDPF-Post.\nSee a brief demo of how to load a result file to extract and postprocess results.\nGetting started"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.has_complex_frequencies.html#ansys.dpf.post.strain.ElasticStrain.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "ElasticStrain.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/index",
        "href": "examples/00-Different-analysis-types/index.html#pydpf-post-analysis-types",
        "title": "PyDPF-Post analysis types",
        "section": "PyDPF-Post analysis types",
        "text": "These examples show how to postprocess different simulation types using PyDPF-Post.\nsphx_glr_examples_00-Different-analysis-types_01-static-simulation.py\nsphx_glr_examples_00-Different-analysis-types_02-modal-simulation.py\nsphx_glr_examples_00-Different-analysis-types_03-transient-simulation.py\nsphx_glr_examples_00-Different-analysis-types_04-harmonic-complex-results.py\nsphx_glr_examples_00-Different-analysis-types_05-fluid-simulation.py\nPyDPF-Post analysis types"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.vector",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.vector.html#vector",
        "title": "vector",
        "section": "vector",
        "text": "Result data for the vector values.\nvector"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.vector",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.vector.html#ansys.dpf.post.displacement.Displacement.vector",
        "title": "vector > vector > vector",
        "section": "vector > vector",
        "text": "property Displacement.vector\n\nResult data for the vector values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_pressure.html#elemental_contact_pressure",
        "title": "elemental_contact_pressure",
        "section": "elemental_contact_pressure",
        "text": "Get result data for the elemental contact pressure.\nelemental_contact_pressure"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_pressure.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_pressure",
        "title": "elemental_contact_pressure > elemental_contact_pressure > elemental_contact_pressure",
        "section": "elemental_contact_pressure > elemental_contact_pressure",
        "text": "MecanicMisc.elemental_contact_pressure(**kwargs)\n\nGet result data for the elemental contact pressure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.has_complex_frequencies.html#ansys.dpf.post.temperature.Temperature.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "Temperature.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#postprocess-a-transient-mechanical-simulation-with-animation",
        "title": "Postprocess a transient mechanical simulation with animation",
        "section": "Postprocess a transient mechanical simulation with animation",
        "text": "This example shows how to postprocess a transient mechanical simulation with animation\nto extract results like displacement, stress, and strain. It also shows how\nto extract data for chosen time steps and animate the strain equivalence over\nall times.\nPostprocess a transient mechanical simulation with animation"
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#perform-required-imports",
        "title": "Postprocess a transient mechanical simulation with animation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#get-simulation-object",
        "title": "Postprocess a transient mechanical simulation with animation > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#extract-displacement",
        "title": "Postprocess a transient mechanical simulation with animation > Extract displacement",
        "section": "Extract displacement",
        "text": "You can extract displacement at all times or on a selection of time steps.\nExtract displacement"
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#extract-strain",
        "title": "Postprocess a transient mechanical simulation with animation > Extract strain",
        "section": "Extract strain",
        "text": "You can extract strain at all times or on a selection of time steps.\nExtract strain"
    },
    {
        "objectID": "examples/00-Different-analysis-types/03-transient-simulation",
        "href": "examples/00-Different-analysis-types/03-transient-simulation.html#animate-strain-eqvivalent-over-all-times",
        "title": "Postprocess a transient mechanical simulation with animation > Animate strain eqvivalent over all times",
        "section": "Animate strain eqvivalent over all times",
        "text": "Total running time of the script: (0 minutes 3.899 seconds)\nDownload Jupyter notebook: 03-transient-simulation.ipynb\nDownload Python source code: 03-transient-simulation.py\nDownload zipped: 03-transient-simulation.zip\nGallery generated by Sphinx-Gallery\nAnimate strain eqvivalent over all times\nDownload Jupyter notebook: 03-transient-simulation.ipynb\nDownload Python source code: 03-transient-simulation.py\nDownload zipped: 03-transient-simulation.zip"
    },
    {
        "objectID": "examples/00-Different-analysis-types/04-harmonic-complex-results",
        "href": "examples/00-Different-analysis-types/04-harmonic-complex-results.html#postprocess-a-harmonic-mechanical-simulation",
        "title": "Postprocess a harmonic mechanical simulation",
        "section": "Postprocess a harmonic mechanical simulation",
        "text": "This example shows how to postprocess a harmonic mechanical simulation and use the complex results.\nPostprocess a harmonic mechanical simulation"
    },
    {
        "objectID": "examples/00-Different-analysis-types/04-harmonic-complex-results",
        "href": "examples/00-Different-analysis-types/04-harmonic-complex-results.html#perform-required-imports",
        "title": "Postprocess a harmonic mechanical simulation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/00-Different-analysis-types/04-harmonic-complex-results",
        "href": "examples/00-Different-analysis-types/04-harmonic-complex-results.html#get-simulation-object",
        "title": "Postprocess a harmonic mechanical simulation > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/00-Different-analysis-types/04-harmonic-complex-results",
        "href": "examples/00-Different-analysis-types/04-harmonic-complex-results.html#extract-displacement-over-a-list-of-frequency-sets",
        "title": "Postprocess a harmonic mechanical simulation > Extract displacement over a list of frequency sets",
        "section": "Extract displacement over a list of frequency sets",
        "text": "To help pick the right frequencies, print the time frequency support.\nExtract displacement over a list of frequency sets"
    },
    {
        "objectID": "examples/00-Different-analysis-types/04-harmonic-complex-results",
        "href": "examples/00-Different-analysis-types/04-harmonic-complex-results.html#extract-stress-equivalent-over-a-list-of-frequency-sets",
        "title": "Postprocess a harmonic mechanical simulation > Extract stress equivalent over a list of frequency sets",
        "section": "Extract stress equivalent over a list of frequency sets",
        "text": "Total running time of the script: (0 minutes 6.432 seconds)\nDownload Jupyter notebook: 04-harmonic-complex-results.ipynb\nDownload Python source code: 04-harmonic-complex-results.py\nDownload zipped: 04-harmonic-complex-results.zip\nGallery generated by Sphinx-Gallery\nExtract stress equivalent over a list of frequency sets\nDownload Jupyter notebook: 04-harmonic-complex-results.ipynb\nDownload Python source code: 04-harmonic-complex-results.py\nDownload zipped: 04-harmonic-complex-results.zip"
    },
    {
        "objectID": "api/ansys.dpf.post.mesh_info",
        "href": "api/ansys.dpf.post.mesh_info.html#fluidmeshinfo",
        "title": "FluidMeshInfo",
        "section": "FluidMeshInfo",
        "text": "FluidMeshInfo"
    },
    {
        "objectID": "user_guide/post_processing",
        "href": "user_guide/post_processing.html#load-a-result-file",
        "title": "Load a result file",
        "section": "Load a result file",
        "text": "The Simulation object is\na central element of PyDPF-Post. This object is the entry point for loading\nthe contents of a result file.\nLoad a result file\nSimulation"
    },
    {
        "objectID": "user_guide/post_processing",
        "href": "user_guide/post_processing.html#on-windows",
        "title": "Load a result file > On Windows",
        "section": "On Windows",
        "text": "This code loads a result file on Windows:\nOn Windows"
    },
    {
        "objectID": "user_guide/post_processing",
        "href": "user_guide/post_processing.html#on-linux",
        "title": "Load a result file > On Linux",
        "section": "On Linux",
        "text": "This code loads a result file on Linux:\nFor a more detailed example on interacting with the\nSimulation object,\nsee ref_basics.\nOn Linux\nSimulation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xx",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xx.html#xx",
        "title": "xx",
        "section": "xx",
        "text": "Result data for the XX component of the tensor.\nxx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xx",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xx.html#ansys.dpf.post.stress.Stress.xx",
        "title": "xx > xx > xx",
        "section": "xx > xx",
        "text": "property Stress.xx\n\nResult data for the XX component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.vector",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.vector.html#vector",
        "title": "vector",
        "section": "vector",
        "text": "Result data for the vector values.\nvector"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.vector",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.vector.html#ansys.dpf.post.temperature.HeatFlux.vector",
        "title": "vector > vector > vector",
        "section": "vector > vector",
        "text": "property HeatFlux.vector\n\nResult data for the vector values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_data_at_field.html#get_data_at_field",
        "title": "get_data_at_field",
        "section": "get_data_at_field",
        "text": "Get the data for the field with the specified index.\nfield_index (int, optional) – Field index. The default is 0.\nget_data_at_field\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_data_at_field.html#ansys.dpf.post.result_data.ResultData.get_data_at_field",
        "title": "get_data_at_field > get_data_at_field > get_data_at_field",
        "section": "get_data_at_field > get_data_at_field",
        "text": "ResultData.get_data_at_field(field_index: int = 0)\n\nGet the data for the field with the specified index.\n\nParameters\n\nfield_index (int, optional) – Field index. The default is 0.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xx",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xx.html#xx",
        "title": "xx",
        "section": "xx",
        "text": "Result data for the XX component of the tensor.\nxx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xx",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xx.html#ansys.dpf.post.strain.PlasticStrain.xx",
        "title": "xx > xx > xx",
        "section": "xx > xx",
        "text": "property PlasticStrain.xx\n\nResult data for the XX component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/extending_to_core",
        "href": "user_guide/extending_to_core.html#use-pydpf-core-operators",
        "title": "Use PyDPF-Core operators",
        "section": "Use PyDPF-Core operators",
        "text": "PyDPF-Post is based on PyDPF-Core, but it is streamlined for postprocessing.\nBecause PyDPF-Post works hand-in-hand with PyDPF-Core, you can use the powerful,\nscalable  operators\nof PyDPF-Core to facilitate data manipulation and more general data transformations.\nPyDPF-Core can access data from Ansys solver result files as well as from\nthird-party file formats. With PyDPF-Core, you can assemble complex workflows\nfrom simpler building blocks by chaining them together with operators.\nThe data in DPF is represented by physics-agnostic mathematical quantities\ndescribed in a self-sufficient entity called a Field.\nTo show the range of PyDPF-Core and PyDPF-Post capabilities, the following\nexamples show how they work together.\nUse PyDPF-Core operators\nField"
    },
    {
        "objectID": "user_guide/extending_to_core",
        "href": "user_guide/extending_to_core.html#export-to-vtk-file",
        "title": "Use PyDPF-Core operators > Export to VTK file",
        "section": "Export to VTK file",
        "text": "This code shows how to export a fields container to a VTK file using the legacy PyDPF-Post API:\nExport to VTK file"
    },
    {
        "objectID": "user_guide/extending_to_core",
        "href": "user_guide/extending_to_core.html#export-to-hdf5-file",
        "title": "Use PyDPF-Core operators > Export to HDF5 file",
        "section": "Export to HDF5 file",
        "text": "This code shows how to export the same fields container\nto an HDF5 file with the legacy PyDPF-Post API:\nExport to HDF5 file"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.vector",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.vector.html#vector",
        "title": "vector",
        "section": "vector",
        "text": "Result data for the vector values.\nvector"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.vector",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.vector.html#ansys.dpf.post.electric_results.ElectricField.vector",
        "title": "vector > vector > vector",
        "section": "vector > vector",
        "text": "property ElectricField.vector\n\nResult data for the vector values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress_ratio.html#elemental_stress_ratio",
        "title": "elemental_stress_ratio",
        "section": "elemental_stress_ratio",
        "text": "Get result data for the elemental stress ratio.\nelemental_stress_ratio"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stress_ratio.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_stress_ratio",
        "title": "elemental_stress_ratio > elemental_stress_ratio > elemental_stress_ratio",
        "section": "elemental_stress_ratio > elemental_stress_ratio",
        "text": "MecanicMisc.elemental_stress_ratio(**kwargs)\n\nGet result data for the elemental stress ratio.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.has_complex_frequencies.html#ansys.dpf.post.temperature.StructuralTemperature.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "StructuralTemperature.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.x",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.x.html#x",
        "title": "x",
        "section": "x",
        "text": "Result data for the X component of the vector.\nx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.x",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.x.html#ansys.dpf.post.temperature.HeatFlux.x",
        "title": "x > x > x",
        "section": "x > x",
        "text": "property HeatFlux.x\n\nResult data for the X component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.mesh",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Mesh representation of the model.\nReturns the ansys.dpf.core.MeshedRegion class.\nmesh\nansys.dpf.core.MeshedRegion"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.mesh",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.mesh.html#ansys.dpf.post.dpf_solution.DpfSolution.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property DpfSolution.mesh\n\nMesh representation of the model.\n\nReturns the ansys.dpf.core.MeshedRegion class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#postprocess-the-result-file-for-a-modal-analysis",
        "title": "Postprocess the result file for a modal analysis",
        "section": "Postprocess the result file for a modal analysis",
        "text": "This example shows how to use the legacy PyDPF-Post API to postprocess the result\nfile for a modal analysis.\nPostprocess the result file for a modal analysis"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#perform-required-imports",
        "title": "Postprocess the result file for a modal analysis > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-solution-object",
        "title": "Postprocess the result file for a modal analysis > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a result file for a modal analysis\ncomputed in Ansys Mechanical.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-result-objects",
        "title": "Postprocess the result file for a modal analysis > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-displacement-result",
        "title": "Postprocess the result file for a modal analysis > Get displacement result",
        "section": "Get displacement result",
        "text": "The displacement result contains a field for real values and a field for\nimaginary values.\nGet displacement result"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-number-of-fields",
        "title": "Postprocess the result file for a modal analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get number of fields"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-data-from-a-field",
        "title": "Postprocess the result file for a modal analysis > Get data from a field",
        "section": "Get data from a field",
        "text": "Get data from a field"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-maximum-data-value-over-all-fields",
        "title": "Postprocess the result file for a modal analysis > Get maximum data value over all fields",
        "section": "Get maximum data value over all fields",
        "text": "Get maximum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess the result file for a modal analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-maximum-data-value-over-targeted-field",
        "title": "Postprocess the result file for a modal analysis > Get maximum data value over targeted field",
        "section": "Get maximum data value over targeted field",
        "text": "Get maximum data value over targeted field"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess the result file for a modal analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-stress-result",
        "title": "Postprocess the result file for a modal analysis > Get stress result",
        "section": "Get stress result",
        "text": "Get a stress result that deals with amplitude. It contains a field for real\nvalues and a field for imaginary values.\nGet stress result"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#check-if-support-has-complex-frequencies",
        "title": "Postprocess the result file for a modal analysis > Check if support has complex frequencies",
        "section": "Check if support has complex frequencies",
        "text": "Check if support has complex frequencies"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-tensor-result",
        "title": "Postprocess the result file for a modal analysis > Get tensor result",
        "section": "Get tensor result",
        "text": "Get tensor result"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-shell-field",
        "title": "Postprocess the result file for a modal analysis > Get shell field",
        "section": "Get shell field",
        "text": "Get shell field"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-solid-field",
        "title": "Postprocess the result file for a modal analysis > Get solid field",
        "section": "Get solid field",
        "text": "Get solid field"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#plot-amplitude-contour",
        "title": "Postprocess the result file for a modal analysis > Plot amplitude contour",
        "section": "Plot amplitude contour",
        "text": "Plot amplitude contour"
    },
    {
        "objectID": "examples/05-Legacy/03-modal-analysis",
        "href": "examples/05-Legacy/03-modal-analysis.html#get-elastic-strain-result",
        "title": "Postprocess the result file for a modal analysis > Get elastic strain result",
        "section": "Get elastic strain result",
        "text": "Get an elastic strain result that deals with phase. It contains a field for\nreal values and a field for imaginary values.\nIf the result file contains results, use this method\nto get the elastic strain result.\nTotal running time of the script: (0 minutes 1.128 seconds)\nDownload Jupyter notebook: 03-modal-analysis.ipynb\nDownload Python source code: 03-modal-analysis.py\nDownload zipped: 03-modal-analysis.zip\nGallery generated by Sphinx-Gallery\nGet elastic strain result\nDownload Jupyter notebook: 03-modal-analysis.ipynb\nDownload Python source code: 03-modal-analysis.py\nDownload zipped: 03-modal-analysis.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain.html#elemental_nodal_elastic_strain",
        "title": "elemental_nodal_elastic_strain",
        "section": "elemental_nodal_elastic_strain",
        "text": "Get result data for the elemental nodal elastic strain.\nelemental_nodal_elastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain",
        "title": "elemental_nodal_elastic_strain > elemental_nodal_elastic_strain > elemental_nodal_elastic_strain",
        "section": "elemental_nodal_elastic_strain > elemental_nodal_elastic_strain",
        "text": "MecanicMisc.elemental_nodal_elastic_strain(**kwargs)\n\nGet result data for the elemental nodal elastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#postprocess-a-result-file-for-a-transient-analysis",
        "title": "Postprocess a result file for a transient analysis",
        "section": "Postprocess a result file for a transient analysis",
        "text": "This example shows how to use the legacy PyDPF-Post API to postprocess a result\nfile for a transient analysis.\nPostprocess a result file for a transient analysis"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#perform-required-imports",
        "title": "Postprocess a result file for a transient analysis > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-solution-object",
        "title": "Postprocess a result file for a transient analysis > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a result file for a transient\nanalysis computed in Ansys Mechanical.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-result-objects",
        "title": "Postprocess a result file for a transient analysis > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-displacement-result",
        "title": "Postprocess a result file for a transient analysis > Get displacement result",
        "section": "Get displacement result",
        "text": "Get displacement result"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-number-of-fields",
        "title": "Postprocess a result file for a transient analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get number of fields"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-data-from-field",
        "title": "Postprocess a result file for a transient analysis > Get data from field",
        "section": "Get data from field",
        "text": "Get data from field"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-maximum-data-value-over-all-fields",
        "title": "Postprocess a result file for a transient analysis > Get maximum data value over all fields",
        "section": "Get maximum data value over all fields",
        "text": "Get maximum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess a result file for a transient analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-maximum-data-value-over-targeted-field",
        "title": "Postprocess a result file for a transient analysis > Get maximum data value over targeted field",
        "section": "Get maximum data value over targeted field",
        "text": "Get maximum data value over targeted field"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess a result file for a transient analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-stress-result-for-a-tensor",
        "title": "Postprocess a result file for a transient analysis > Get stress result for a tensor",
        "section": "Get stress result for a tensor",
        "text": "Get stress result for a tensor"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#check-number-of-fields",
        "title": "Postprocess a result file for a transient analysis > Check number of fields",
        "section": "Check number of fields",
        "text": "Check the number of shell and solid elements in distinct fields.\nCheck number of fields"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-shell-field",
        "title": "Postprocess a result file for a transient analysis > Get shell field",
        "section": "Get shell field",
        "text": "Get shell field"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-solid-field",
        "title": "Postprocess a result file for a transient analysis > Get solid field",
        "section": "Get solid field",
        "text": "Get solid field"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#plot-contour",
        "title": "Postprocess a result file for a transient analysis > Plot contour",
        "section": "Plot contour",
        "text": "Plot contour"
    },
    {
        "objectID": "examples/05-Legacy/05-transient-analysis",
        "href": "examples/05-Legacy/05-transient-analysis.html#get-elastic-strain-result",
        "title": "Postprocess a result file for a transient analysis > Get elastic strain result",
        "section": "Get elastic strain result",
        "text": "If the result file contains results, use this method\nto get the elastic strain result.\nTotal running time of the script: (0 minutes 0.655 seconds)\nDownload Jupyter notebook: 05-transient-analysis.ipynb\nDownload Python source code: 05-transient-analysis.py\nDownload zipped: 05-transient-analysis.zip\nGallery generated by Sphinx-Gallery\nGet elastic strain result\nDownload Jupyter notebook: 05-transient-analysis.ipynb\nDownload Python source code: 05-transient-analysis.py\nDownload zipped: 05-transient-analysis.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.html#plasticstrain",
        "title": "PlasticStrain",
        "section": "PlasticStrain",
        "text": "Defines the plastic strain object, which is a tensor object.\nPlasticStrain.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nPlasticStrain.principal_1\nResult data for the first principal component of the tensor.\nPlasticStrain.principal_2\nResult data for the second principal component of the tensor.\nPlasticStrain.principal_3\nResults data for the third principal component of the tensor.\nPlasticStrain.tensor\nResult data for the tensor values.\nPlasticStrain.xx\nResult data for the XX component of the tensor.\nPlasticStrain.xy\nResult data of for the XY component of the tensor.\nPlasticStrain.xz\nResult data for the XZ component of the tensor.\nPlasticStrain.yy\nResult data for the YY component of the tensor.\nPlasticStrain.yz\nResult data for the YZ component of the tensor.\nPlasticStrain.zz\nResult data for the ZZ component of the tensor.\nPlasticStrain\nPlasticStrain.has_complex_frequencies\nPlasticStrain.principal_1\nPlasticStrain.principal_2\nPlasticStrain.principal_3\nPlasticStrain.tensor\nPlasticStrain.xx\nPlasticStrain.xy\nPlasticStrain.xz\nPlasticStrain.yy\nPlasticStrain.yz\nPlasticStrain.zz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.html#ansys.dpf.post.strain.PlasticStrain",
        "title": "PlasticStrain > PlasticStrain > PlasticStrain",
        "section": "PlasticStrain > PlasticStrain",
        "text": "class ansys.dpf.post.strain.PlasticStrain(**kwargs)\n\nDefines the plastic strain object, which is a tensor object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPlasticStrain.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPlasticStrain.principal_1\n\nResult data for the first principal component of the tensor.\n\nPlasticStrain.principal_2\n\nResult data for the second principal component of the tensor.\n\nPlasticStrain.principal_3\n\nResults data for the third principal component of the tensor.\n\nPlasticStrain.tensor\n\nResult data for the tensor values.\n\nPlasticStrain.xx\n\nResult data for the XX component of the tensor.\n\nPlasticStrain.xy\n\nResult data of for the XY component of the tensor.\n\nPlasticStrain.xz\n\nResult data for the XZ component of the tensor.\n\nPlasticStrain.yy\n\nResult data for the YY component of the tensor.\n\nPlasticStrain.yz\n\nResult data for the YZ component of the tensor.\n\nPlasticStrain.zz\n\nResult data for the ZZ component of the tensor.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_2.html#principal_2",
        "title": "principal_2",
        "section": "principal_2",
        "text": "Result data for the second principal component of the tensor.\nprincipal_2"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_2.html#ansys.dpf.post.stress.Stress.principal_2",
        "title": "principal_2 > principal_2 > principal_2",
        "section": "principal_2 > principal_2",
        "text": "property Stress.principal_2\n\nResult data for the second principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yz.html#yz",
        "title": "yz",
        "section": "yz",
        "text": "Result data for the YZ component of the tensor.\nyz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yz.html#ansys.dpf.post.strain.PlasticStrain.yz",
        "title": "yz > yz > yz",
        "section": "yz > yz",
        "text": "property PlasticStrain.yz\n\nResult data for the YZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.misc",
        "href": "api/ansys.dpf.post.misc.html#misc",
        "title": "Misc",
        "section": "Misc",
        "text": "Misc"
    },
    {
        "objectID": "api/ansys.dpf.post.species",
        "href": "api/ansys.dpf.post.species.html#species",
        "title": "Species",
        "section": "Species",
        "text": "In fluid simulations, the species are the chemical compounds present.\nSpecies"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain_energy_density.html#elemental_plastic_strain_energy_density",
        "title": "elemental_plastic_strain_energy_density",
        "section": "elemental_plastic_strain_energy_density",
        "text": "Get result data for the elemental plastic strain energy density.\nelemental_plastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain_energy_density",
        "title": "elemental_plastic_strain_energy_density > elemental_plastic_strain_energy_density > elemental_plastic_strain_energy_density",
        "section": "elemental_plastic_strain_energy_density > elemental_plastic_strain_energy_density",
        "text": "MecanicMisc.elemental_plastic_strain_energy_density(**kwargs)\n\nGet result data for the elemental plastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.zz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.zz.html#zz",
        "title": "zz",
        "section": "zz",
        "text": "Result data for the ZZ component of the tensor.\nzz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.zz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.zz.html#ansys.dpf.post.stress.Stress.zz",
        "title": "zz > zz > zz",
        "section": "zz > zz",
        "text": "property Stress.zz\n\nResult data for the ZZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.has_complex_frequencies.html#ansys.dpf.post.temperature.HeatFlux.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "HeatFlux.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_min_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_min_data_at_field.html#get_min_data_at_field",
        "title": "get_min_data_at_field",
        "section": "get_min_data_at_field",
        "text": "Get the minimum values field data for the field with the specified index.\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\nfield_index (int, optional) – Field index. The default is 0.\nget_min_data_at_field\nmin_max_fc\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_min_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_min_data_at_field.html#ansys.dpf.post.result_data.ResultData.get_min_data_at_field",
        "title": "get_min_data_at_field > get_min_data_at_field > get_min_data_at_field",
        "section": "get_min_data_at_field > get_min_data_at_field",
        "text": "ResultData.get_min_data_at_field(field_index: int = 0)\n\nGet the minimum values field data for the field with the specified index.\n\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\n\nParameters\n\nfield_index (int, optional) – Field index. The default is 0.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/index",
        "href": "examples/03-Cyclic-Examples/index.html#pydpf-post-cyclic-symmetry-examples",
        "title": "PyDPF-Post cyclic symmetry examples",
        "section": "PyDPF-Post cyclic symmetry examples",
        "text": "These examples show how to use PyDPF-Post features for cyclic symmetry models.\nsphx_glr_examples_03-Cyclic-Examples_01-cyclic-results.py\nsphx_glr_examples_03-Cyclic-Examples_02-multi-stage-cyclic-results.py\nsphx_glr_examples_03-Cyclic-Examples_03-cyclic-mesh-external-layer.py\nsphx_glr_examples_03-Cyclic-Examples_04-cyclic-mesh-skin.py\nsphx_glr_examples_03-Cyclic-Examples_05-modal_cyclic_no_expansion.py\nPyDPF-Post cyclic symmetry examples"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_object.Result.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.result_object.Result.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_object.Result.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.result_object.Result.has_complex_frequencies.html#ansys.dpf.post.result_object.Result.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "Result.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.examples",
        "href": "api/ansys.dpf.post.examples.html#ansysdpfpostexamples-package",
        "title": "ansys.dpf.post.examples package",
        "section": "ansys.dpf.post.examples package",
        "text": "ansys.dpf.post.examples package"
    },
    {
        "objectID": "api/ansys.dpf.post.examples",
        "href": "api/ansys.dpf.post.examples.html#module-contents",
        "title": "ansys.dpf.post.examples package > Module contents",
        "section": "Module contents",
        "text": "PyDPF-Post example files.\nThis package exposes PyDPF-Core functionalities.\nSee here\nfor a description of the PyDPF-Core example API.\nModule contents\nexample"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_1.html#principal_1",
        "title": "principal_1",
        "section": "principal_1",
        "text": "Result data for the first principal component of the tensor.\nprincipal_1"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_1.html#ansys.dpf.post.strain.ElasticStrain.principal_1",
        "title": "principal_1 > principal_1 > principal_1",
        "section": "principal_1 > principal_1",
        "text": "property ElasticStrain.principal_1\n\nResult data for the first principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "End-to-end examples show how to use PyDPF-Post. If PyDPF-Post is installed\non your machine, you can download these examples as Jupyter notebooks, Python files,\nor ZIP files and run them locally.\nExamples"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-analysis-types",
        "title": "Examples > PyDPF-Post analysis types",
        "section": "PyDPF-Post analysis types",
        "text": "These examples show how to postprocess different simulation types using PyDPF-Post.\nsphx_glr_examples_00-Different-analysis-types_01-static-simulation.py\nsphx_glr_examples_00-Different-analysis-types_02-modal-simulation.py\nsphx_glr_examples_00-Different-analysis-types_03-transient-simulation.py\nsphx_glr_examples_00-Different-analysis-types_04-harmonic-complex-results.py\nsphx_glr_examples_00-Different-analysis-types_05-fluid-simulation.py\nPyDPF-Post analysis types"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-features",
        "title": "Examples > PyDPF-Post features",
        "section": "PyDPF-Post features",
        "text": "These examples show how to use PyDPF-Post features.\nsphx_glr_examples_01-Detailed-Examples_00-dataframe-manipulation.py\nsphx_glr_examples_01-Detailed-Examples_01-named-selections-modal-simulation.py\nsphx_glr_examples_01-Detailed-Examples_02-modal-extract-sub-results.py\nsphx_glr_examples_01-Detailed-Examples_03-explore-result-data-harmonic.py\nsphx_glr_examples_01-Detailed-Examples_04-invariants.py\nsphx_glr_examples_01-Detailed-Examples_05-export_data.py\nsphx_glr_examples_01-Detailed-Examples_05-mesh-exploration.py\nsphx_glr_examples_01-Detailed-Examples_06-compute-min-max.py\nPyDPF-Post features"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-performance-improvements",
        "title": "Examples > PyDPF-Post performance improvements",
        "section": "PyDPF-Post performance improvements",
        "text": "These examples show how to improve computation performance of PyDPF-Post when necessary.\nsphx_glr_examples_02-Performance-Improvements_01-mesh-external-layer.py\nsphx_glr_examples_02-Performance-Improvements_02-mesh-skin.py\nsphx_glr_examples_02-Performance-Improvements_03-mesh-external-layer-compare.py\nPyDPF-Post performance improvements"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-cyclic-symmetry-examples",
        "title": "Examples > PyDPF-Post cyclic symmetry examples",
        "section": "PyDPF-Post cyclic symmetry examples",
        "text": "These examples show how to use PyDPF-Post features for cyclic symmetry models.\nsphx_glr_examples_03-Cyclic-Examples_01-cyclic-results.py\nsphx_glr_examples_03-Cyclic-Examples_02-multi-stage-cyclic-results.py\nsphx_glr_examples_03-Cyclic-Examples_03-cyclic-mesh-external-layer.py\nsphx_glr_examples_03-Cyclic-Examples_04-cyclic-mesh-skin.py\nsphx_glr_examples_03-Cyclic-Examples_05-modal_cyclic_no_expansion.py\nPyDPF-Post cyclic symmetry examples"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-fluid-examples",
        "title": "Examples > PyDPF-Post fluid examples",
        "section": "PyDPF-Post fluid examples",
        "text": "These examples show how to use PyDPF-Post features for fluid models.\nsphx_glr_examples_04-Fluid-Examples_00-explore-fluid-simulation.py\nPyDPF-Post fluid examples"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pydpf-post-legacy-examples",
        "title": "Examples > PyDPF-Post legacy examples",
        "section": "PyDPF-Post legacy examples",
        "text": "These examples show how you use the legacy PyDPF-Post API.\nsphx_glr_examples_05-Legacy_00-overview_example.py\nsphx_glr_examples_05-Legacy_01-get_data_from_static_simulation.py\nsphx_glr_examples_05-Legacy_01-introduction.py\nsphx_glr_examples_05-Legacy_02-static-analysis.py\nsphx_glr_examples_05-Legacy_03-modal-analysis.py\nsphx_glr_examples_05-Legacy_04-harmonic-analysis.py\nsphx_glr_examples_05-Legacy_05-transient-analysis.py\nsphx_glr_examples_05-Legacy_06-complex_results.py\nsphx_glr_examples_05-Legacy_07-result_keywords.py\nsphx_glr_examples_05-Legacy_08-result_on_path_of_coordinates.py\nsphx_glr_examples_05-Legacy_09-basics.py\nGallery generated by Sphinx-Gallery\nPyDPF-Post legacy examples"
    },
    {
        "objectID": "api/ansys.dpf.post.fluid_simulation",
        "href": "api/ansys.dpf.post.fluid_simulation.html#fluidsimulation",
        "title": "FluidSimulation",
        "section": "FluidSimulation",
        "text": "FluidSimulation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.has_complex_frequencies.html#ansys.dpf.post.electric_results.ElectricField.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "ElectricField.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_displacement",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_displacement.html#nodal_raw_displacement",
        "title": "nodal_raw_displacement",
        "section": "nodal_raw_displacement",
        "text": "Get result data for the nodal raw displacement.\nnodal_raw_displacement"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_displacement",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_displacement.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_raw_displacement",
        "title": "nodal_raw_displacement > nodal_raw_displacement > nodal_raw_displacement",
        "section": "nodal_raw_displacement > nodal_raw_displacement",
        "text": "MecanicMisc.nodal_raw_displacement(**kwargs)\n\nGet result data for the nodal raw displacement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min_data",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min_data.html#min_data",
        "title": "min_data",
        "section": "min_data",
        "text": "Minimum values field data.\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\nmin_data\nmin_max_fc"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min_data",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min_data.html#ansys.dpf.post.result_data.ResultData.min_data",
        "title": "min_data > min_data > min_data",
        "section": "min_data > min_data",
        "text": "property ResultData.min_data\n\nMinimum values field data.\n\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.html#stress",
        "title": "Stress",
        "section": "Stress",
        "text": "Defines the stress object, which is a tensor object.\nExtract the stress from a solution.\nStress.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nStress.principal_1\nResult data for the first principal component of the tensor.\nStress.principal_2\nResult data for the second principal component of the tensor.\nStress.principal_3\nResults data for the third principal component of the tensor.\nStress.tensor\nResult data for the tensor values.\nStress.von_mises\nResult data for the von Mises stress.\nStress.xx\nResult data for the XX component of the tensor.\nStress.xy\nResult data of for the XY component of the tensor.\nStress.xz\nResult data for the XZ component of the tensor.\nStress.yy\nResult data for the YY component of the tensor.\nStress.yz\nResult data for the YZ component of the tensor.\nStress.zz\nResult data for the ZZ component of the tensor.\nStress\nStress.has_complex_frequencies\nStress.principal_1\nStress.principal_2\nStress.principal_3\nStress.tensor\nStress.von_mises\nStress.xx\nStress.xy\nStress.xz\nStress.yy\nStress.yz\nStress.zz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.html#ansys.dpf.post.stress.Stress",
        "title": "Stress > Stress > Stress",
        "section": "Stress > Stress",
        "text": "class ansys.dpf.post.stress.Stress(**kwargs)\n\nDefines the stress object, which is a tensor object.\n\nExamples\n\nExtract the stress from a solution.\n\n>>> from ansys.dpf import post\n>>> from ansys.dpf.post import examples\n>>> solution = post.load_solution(examples.multishells_rst)\n>>> stress = solution.stress(location=post.locations.nodal, time_scoping=[1])\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nStress.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nStress.principal_1\n\nResult data for the first principal component of the tensor.\n\nStress.principal_2\n\nResult data for the second principal component of the tensor.\n\nStress.principal_3\n\nResults data for the third principal component of the tensor.\n\nStress.tensor\n\nResult data for the tensor values.\n\nStress.von_mises\n\nResult data for the von Mises stress.\n\nStress.xx\n\nResult data for the XX component of the tensor.\n\nStress.xy\n\nResult data of for the XY component of the tensor.\n\nStress.xz\n\nResult data for the XZ component of the tensor.\n\nStress.yy\n\nResult data for the YY component of the tensor.\n\nStress.yz\n\nResult data for the YZ component of the tensor.\n\nStress.zz\n\nResult data for the ZZ component of the tensor.\n\n"
    },
    {
        "objectID": "examples/02-Performance-Improvements/03-mesh-external-layer-compare",
        "href": "examples/02-Performance-Improvements/03-mesh-external-layer-compare.html#validate-external-layer-results-with-the-full-mesh",
        "title": "Validate external layer results with the full mesh",
        "section": "Validate external layer results with the full mesh",
        "text": "This example shows postprocessing comparisons based on how results and\nthe mesh are extracted:\nResults and mesh extracted only on the external layer\nResults and mesh extracted on the entire mesh\nThe external layer is the layer of solid elements with at least one facet facing the outside of\nthe geometry.\nThis feature, available for all types of mechanical simulation, allows you to reduce the size\nof both the mesh and extracted data to improve processing performance.\nBecause larger stresses and strains are usually located on the skin of a model,\ncomputing the results on the external layer provides equivalent maximum values in most cases.\nValidate external layer results with the full mesh"
    },
    {
        "objectID": "examples/02-Performance-Improvements/03-mesh-external-layer-compare",
        "href": "examples/02-Performance-Improvements/03-mesh-external-layer-compare.html#perform-required-imports",
        "title": "Validate external layer results with the full mesh > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/02-Performance-Improvements/03-mesh-external-layer-compare",
        "href": "examples/02-Performance-Improvements/03-mesh-external-layer-compare.html#get-simulation-object",
        "title": "Validate external layer results with the full mesh > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/02-Performance-Improvements/03-mesh-external-layer-compare",
        "href": "examples/02-Performance-Improvements/03-mesh-external-layer-compare.html#extract-displacement-data",
        "title": "Validate external layer results with the full mesh > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data over the entire mesh and on the external layer.\nExtract displacement data"
    },
    {
        "objectID": "examples/02-Performance-Improvements/03-mesh-external-layer-compare",
        "href": "examples/02-Performance-Improvements/03-mesh-external-layer-compare.html#extract-stress-and-strain-data",
        "title": "Validate external layer results with the full mesh > Extract stress and strain data",
        "section": "Extract stress and strain data",
        "text": "Extract stress and elastic strain data over the entire mesh and on the external layer.\nYou can easily compute averages and invariants on the external layer because the\nconnectivity of the kept elements remains unchanged.\nTotal running time of the script: (0 minutes 5.524 seconds)\nDownload Jupyter notebook: 03-mesh-external-layer-compare.ipynb\nDownload Python source code: 03-mesh-external-layer-compare.py\nDownload zipped: 03-mesh-external-layer-compare.zip\nGallery generated by Sphinx-Gallery\nExtract stress and strain data\nDownload Jupyter notebook: 03-mesh-external-layer-compare.ipynb\nDownload Python source code: 03-mesh-external-layer-compare.py\nDownload zipped: 03-mesh-external-layer-compare.zip"
    },
    {
        "objectID": "getting_started/software_requirements",
        "href": "getting_started/software_requirements.html#software-requirements",
        "title": "Software requirements",
        "section": "Software requirements",
        "text": "Software requirements"
    },
    {
        "objectID": "getting_started/software_requirements",
        "href": "getting_started/software_requirements.html#platform-support",
        "title": "Software requirements > Platform support",
        "section": "Platform support",
        "text": "PyDPF-Post supports Windows 10 and CentOS 7 and later. For more information,\nsee Platform Support\non the Ansys web site.\nOther platforms may be supported by using PyDPF-Post in a\ncontainerized ecosystem, such as Docker or\nKubernetes.\nPlatform support"
    },
    {
        "objectID": "getting_started/software_requirements",
        "href": "getting_started/software_requirements.html#pydpf-core-and-dpf-server",
        "title": "Software requirements > PyDPF-Core and DPF server",
        "section": "PyDPF-Core and DPF server",
        "text": "To use PyDPF-Post, you must have PyDPF-Core\ninstalled. Because you must use a native DPF server, you must also have a local\ninstallation of either Ansys 2021 R1 or later or a standalone DPF server.\nFor more information on getting a licensed copy of Ansys, visit the\nAnsys website.\nFor more information on installing a standalone DPF server, see\nGetting started\nin the PyDPF-Core documentation.\nPyDPF-Core and DPF server"
    },
    {
        "objectID": "examples/02-Performance-Improvements/sg_execution_times",
        "href": "examples/02-Performance-Improvements/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:17.392 total execution time for 3 files from examples/02-Performance-Improvements:\nExample\nTime\nMem (MB)\nsphx_glr_examples_02-Performance-Improvements_01-mesh-external-layer.py (01-mesh-external-layer.py)\n00:08.059\n0.0\nsphx_glr_examples_02-Performance-Improvements_03-mesh-external-layer-compare.py (03-mesh-external-layer-compare.py)\n00:05.524\n0.0\nsphx_glr_examples_02-Performance-Improvements_02-mesh-skin.py (02-mesh-skin.py)\n00:03.809\n0.0\nComputation times\n01-mesh-external-layer.py\n03-mesh-external-layer-compare.py\n02-mesh-skin.py"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.html#heatflux",
        "title": "HeatFlux",
        "section": "HeatFlux",
        "text": "Defines the heat flux object, which is a scalar object, for thermal analysis.\nHeatFlux.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nHeatFlux.norm\nResult data for the norm of the vector.\nHeatFlux.vector\nResult data for the vector values.\nHeatFlux.x\nResult data for the X component of the vector.\nHeatFlux.y\nResult data for the Y component of the vector.\nHeatFlux.z\nResult data for the Z component of the vector.\nHeatFlux\nHeatFlux.has_complex_frequencies\nHeatFlux.norm\nHeatFlux.vector\nHeatFlux.x\nHeatFlux.y\nHeatFlux.z"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.html#ansys.dpf.post.temperature.HeatFlux",
        "title": "HeatFlux > HeatFlux > HeatFlux",
        "section": "HeatFlux > HeatFlux",
        "text": "class ansys.dpf.post.temperature.HeatFlux(**kwargs)\n\nDefines the heat flux object, which is a scalar object, for thermal analysis.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nHeatFlux.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nHeatFlux.norm\n\nResult data for the norm of the vector.\n\nHeatFlux.vector\n\nResult data for the vector values.\n\nHeatFlux.x\n\nResult data for the X component of the vector.\n\nHeatFlux.y\n\nResult data for the Y component of the vector.\n\nHeatFlux.z\n\nResult data for the Z component of the vector.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_creep_strain_energy_density.html#elemental_nodal_creep_strain_energy_density",
        "title": "elemental_nodal_creep_strain_energy_density",
        "section": "elemental_nodal_creep_strain_energy_density",
        "text": "Get result data for the elemental nodal creep strain energy density.\nelemental_nodal_creep_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_creep_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_creep_strain_energy_density",
        "title": "elemental_nodal_creep_strain_energy_density > elemental_nodal_creep_strain_energy_density > elemental_nodal_creep_strain_energy_density",
        "section": "elemental_nodal_creep_strain_energy_density > elemental_nodal_creep_strain_energy_density",
        "text": "MecanicMisc.elemental_nodal_creep_strain_energy_density(**kwargs)\n\nGet result data for the elemental nodal creep strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain_energy_density.html#nodal_elastic_strain_energy_density",
        "title": "nodal_elastic_strain_energy_density",
        "section": "nodal_elastic_strain_energy_density",
        "text": "Get result data for the nodal elastic strain energy density.\nnodal_elastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_elastic_strain_energy_density",
        "title": "nodal_elastic_strain_energy_density > nodal_elastic_strain_energy_density > nodal_elastic_strain_energy_density",
        "section": "nodal_elastic_strain_energy_density > nodal_elastic_strain_energy_density",
        "text": "MecanicMisc.nodal_elastic_strain_energy_density(**kwargs)\n\nGet result data for the nodal elastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_1.html#principal_1",
        "title": "principal_1",
        "section": "principal_1",
        "text": "Result data for the first principal component of the tensor.\nprincipal_1"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_1.html#ansys.dpf.post.strain.PlasticStrain.principal_1",
        "title": "principal_1 > principal_1 > principal_1",
        "section": "principal_1 > principal_1",
        "text": "property PlasticStrain.principal_1\n\nResult data for the first principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress_ratio.html#nodal_stress_ratio",
        "title": "nodal_stress_ratio",
        "section": "nodal_stress_ratio",
        "text": "Get result data for the nodal stress ratio.\nnodal_stress_ratio"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress_ratio",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress_ratio.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_stress_ratio",
        "title": "nodal_stress_ratio > nodal_stress_ratio > nodal_stress_ratio",
        "section": "nodal_stress_ratio > nodal_stress_ratio",
        "text": "MecanicMisc.nodal_stress_ratio(**kwargs)\n\nGet result data for the nodal stress ratio.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_surface_heat_flux",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_surface_heat_flux.html#elemental_contact_surface_heat_flux",
        "title": "elemental_contact_surface_heat_flux",
        "section": "elemental_contact_surface_heat_flux",
        "text": "Get result data for the elemental contact surface heat flux.\nelemental_contact_surface_heat_flux"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_surface_heat_flux",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_surface_heat_flux.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_surface_heat_flux",
        "title": "elemental_contact_surface_heat_flux > elemental_contact_surface_heat_flux > elemental_contact_surface_heat_flux",
        "section": "elemental_contact_surface_heat_flux > elemental_contact_surface_heat_flux",
        "text": "MecanicMisc.elemental_contact_surface_heat_flux(**kwargs)\n\nGet result data for the elemental contact surface heat flux.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_creep_strain.html#elemental_accu_eqv_creep_strain",
        "title": "elemental_accu_eqv_creep_strain",
        "section": "elemental_accu_eqv_creep_strain",
        "text": "Get result data for the elemental accurate equivalent creep strain.\nelemental_accu_eqv_creep_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_creep_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_creep_strain",
        "title": "elemental_accu_eqv_creep_strain > elemental_accu_eqv_creep_strain > elemental_accu_eqv_creep_strain",
        "section": "elemental_accu_eqv_creep_strain > elemental_accu_eqv_creep_strain",
        "text": "MecanicMisc.elemental_accu_eqv_creep_strain(**kwargs)\n\nGet result data for the elemental accurate equivalent creep strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.index",
        "href": "api/ansys.dpf.post.index.html#index",
        "title": "Index",
        "section": "Index",
        "text": "Index"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_2.html#principal_2",
        "title": "principal_2",
        "section": "principal_2",
        "text": "Result data for the second principal component of the tensor.\nprincipal_2"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.principal_2.html#ansys.dpf.post.strain.ElasticStrain.principal_2",
        "title": "principal_2 > principal_2 > principal_2",
        "section": "principal_2 > principal_2",
        "text": "property ElasticStrain.principal_2\n\nResult data for the second principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.html#structuraltemperature",
        "title": "StructuralTemperature",
        "section": "StructuralTemperature",
        "text": "Defines the structural temperature object, which is a scalar object.\nStructuralTemperature.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nStructuralTemperature.scalar\nResult data for the scalar values.\nStructuralTemperature\nStructuralTemperature.has_complex_frequencies\nStructuralTemperature.scalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature",
        "href": "api/_autosummary/ansys.dpf.post.temperature.StructuralTemperature.html#ansys.dpf.post.temperature.StructuralTemperature",
        "title": "StructuralTemperature > StructuralTemperature > StructuralTemperature",
        "section": "StructuralTemperature > StructuralTemperature",
        "text": "class ansys.dpf.post.temperature.StructuralTemperature(**kwargs)\n\nDefines the structural temperature object, which is a scalar object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nStructuralTemperature.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nStructuralTemperature.scalar\n\nResult data for the scalar values.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.html#displacement",
        "title": "Displacement",
        "section": "Displacement",
        "text": "Defines the displacement object, which is a vector object.\nDisplacement.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nDisplacement.norm\nResult data for the norm of the vector.\nDisplacement.vector\nResult data for the vector values.\nDisplacement.x\nResult data for the X component of the vector.\nDisplacement.y\nResult data for the Y component of the vector.\nDisplacement.z\nResult data for the Z component of the vector.\nDisplacement\nDisplacement.has_complex_frequencies\nDisplacement.norm\nDisplacement.vector\nDisplacement.x\nDisplacement.y\nDisplacement.z"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.html#ansys.dpf.post.displacement.Displacement",
        "title": "Displacement > Displacement > Displacement",
        "section": "Displacement > Displacement",
        "text": "class ansys.dpf.post.displacement.Displacement(**kwargs)\n\nDefines the displacement object, which is a vector object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDisplacement.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDisplacement.norm\n\nResult data for the norm of the vector.\n\nDisplacement.vector\n\nResult data for the vector values.\n\nDisplacement.x\n\nResult data for the X component of the vector.\n\nDisplacement.y\n\nResult data for the Y component of the vector.\n\nDisplacement.z\n\nResult data for the Z component of the vector.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.has_complex_frequencies.html#ansys.dpf.post.electric_results.ElectricPotential.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "ElectricPotential.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xz.html#xz",
        "title": "xz",
        "section": "xz",
        "text": "Result data for the XZ component of the tensor.\nxz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xz.html#ansys.dpf.post.strain.ElasticStrain.xz",
        "title": "xz > xz > xz",
        "section": "xz > xz",
        "text": "property ElasticStrain.xz\n\nResult data for the XZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_hydrostatic_pressure.html#nodal_hydrostatic_pressure",
        "title": "nodal_hydrostatic_pressure",
        "section": "nodal_hydrostatic_pressure",
        "text": "Get result data for the nodal hydrostatic pressure.\nnodal_hydrostatic_pressure"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_hydrostatic_pressure.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_hydrostatic_pressure",
        "title": "nodal_hydrostatic_pressure > nodal_hydrostatic_pressure > nodal_hydrostatic_pressure",
        "section": "nodal_hydrostatic_pressure > nodal_hydrostatic_pressure",
        "text": "MecanicMisc.nodal_hydrostatic_pressure(**kwargs)\n\nGet result data for the nodal hydrostatic pressure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_state_variable.html#elemental_plastic_state_variable",
        "title": "elemental_plastic_state_variable",
        "section": "elemental_plastic_state_variable",
        "text": "Get result data for the elemental plastic state variable.\nelemental_plastic_state_variable"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_state_variable.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_state_variable",
        "title": "elemental_plastic_state_variable > elemental_plastic_state_variable > elemental_plastic_state_variable",
        "section": "elemental_plastic_state_variable > elemental_plastic_state_variable",
        "text": "MecanicMisc.elemental_plastic_state_variable(**kwargs)\n\nGet result data for the elemental plastic state variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#create-and-manipulate-a-dpf-dataframe",
        "title": "Create and manipulate a DPF dataframe",
        "section": "Create and manipulate a DPF dataframe",
        "text": "This example shows how to generate a dataframe by extracting a result from a static simulation.\nIt also shows different dataframe viewing and manipulation possibilities.\nCreate and manipulate a DPF dataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#perform-required-imports",
        "title": "Create and manipulate a DPF dataframe > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#get-the-simulation-object",
        "title": "Create and manipulate a DPF dataframe > Get the Simulation object",
        "section": "Get the Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet the Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#get-a-dataframe-object",
        "title": "Create and manipulate a DPF dataframe > Get a Dataframe object",
        "section": "Get a Dataframe object",
        "text": "Extract a result as a dataframe.\nGet a Dataframe object\nDataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#explore-index-objects",
        "title": "Create and manipulate a DPF dataframe > Explore Index objects",
        "section": "Explore Index objects",
        "text": "The data labels are each defined by an Index object or one of its specialized subtypes.\nA ResultIndex index defines the result stored in the dataframe.\nYou can check values available for an index.\nA SetIndex index defines the available set IDs available.\nA set ID is a unique identifier associated to each time-step, step and substep, or frequency\navailable in a simulation.\nAs shown next, an index has a name and a list of values of a given type.\nThe dataframe’s row labels are defined in dataframe.index.\nA MeshIndex defines the mesh entities that data is available for.\nIt can store node IDs, element IDs, or face IDs.\nBecause the list of possible values can be long and querying it can be costly,\nthe list of available values might not be determined unless explicitly asked.\nThe MeshIndex is then updated to display the actual number of entities available.\nA CompIndex defines the result components that data is available for.\nExplore Index objects\nIndex\nIndex\nResultIndex\nSetIndex\ndataframe.index\nMeshIndex\nMeshIndex\nCompIndex"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#change-the-dataframe-print",
        "title": "Create and manipulate a DPF dataframe > Change the dataframe print",
        "section": "Change the dataframe print",
        "text": "Options exist to configure the way a dataframe is shown.\nYou can change the number of data rows shown:\nYou can change the number of data columns shown:\nChange the dataframe print"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#see-node-number-in-elements-connectivity",
        "title": "Create and manipulate a DPF dataframe > See node number in element’s connectivity",
        "section": "See node number in element’s connectivity",
        "text": "When dealing with results located on each node of each element (which is known\nas ElementalNodal results, an ElementNodeIndex index is added at creation\nto specify the node number in the element’s connectivity.\nSee node number in element’s connectivity\nElementNodeIndex"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#select-data",
        "title": "Create and manipulate a DPF dataframe > Select data",
        "section": "Select data",
        "text": "To select specific columns or rows, use the index names as arguments for the\nDataFrame.select() method, which takes lists of values:\nYou can also select along an index using a zero-based position with the\nDataframe.iselect() method:\nSelect data\nDataFrame.select()\nDataframe.iselect()"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#extract-data",
        "title": "Create and manipulate a DPF dataframe > Extract data",
        "section": "Extract data",
        "text": "Once the dataframe contains the specific data you require, extract it as an array:\nExtract data"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#plot-a-dataframe",
        "title": "Create and manipulate a DPF dataframe > Plot a dataframe",
        "section": "Plot a dataframe",
        "text": "Plot a dataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/00-dataframe-manipulation",
        "href": "examples/01-Detailed-Examples/00-dataframe-manipulation.html#animate-a-transient-dataframe",
        "title": "Create and manipulate a DPF dataframe > Animate a transient dataframe",
        "section": "Animate a transient dataframe",
        "text": "Total running time of the script: (0 minutes 2.281 seconds)\nDownload Jupyter notebook: 00-dataframe-manipulation.ipynb\nDownload Python source code: 00-dataframe-manipulation.py\nDownload zipped: 00-dataframe-manipulation.zip\nGallery generated by Sphinx-Gallery\nAnimate a transient dataframe\nDownload Jupyter notebook: 00-dataframe-manipulation.ipynb\nDownload Python source code: 00-dataframe-manipulation.py\nDownload zipped: 00-dataframe-manipulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.has_complex_frequencies.html#ansys.dpf.post.strain.PlasticStrain.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "PlasticStrain.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#reduce-model-size-by-using-the-mesh-skin-for-result-and-mesh-extraction",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction",
        "section": "Reduce model size by using the mesh skin for result and mesh extraction",
        "text": "This example shows postprocessing on a mesh skin for a static analysis.\nThe skin mesh is rebuilt with new surface elements connecting the nodes on the external skin\nof the solid mesh. These surface elements types are chosen with respect to the solid elements\nfacets having all their nodes on the skin.\nThis feature, available for all types of mechanical simulation, allows you to reduce the size\nof both the mesh and the extracted data to improve processing performance. Because larger stresses\nand strains are usually located on the skin of a model, computing results on the skin gives\nequivalent maximum values in most cases.\nPostprocessing of elemental or elemental nodal results\nrequires element solid to skin mapping to get from a solid element result to a facet\nresult. Because the connectivity of the new surface elements built on the skin are different from\nthe connectivity of the solid elements, small differences can be found after result averaging.\nReduce model size by using the mesh skin for result and mesh extraction"
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#perform-required-imports",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#get-simulation-object",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#extract-displacement-data",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data on the skin.\nExtract displacement data"
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#extract-stress-and-strain-data",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction > Extract stress and strain data",
        "section": "Extract stress and strain data",
        "text": "Extract stress and elastic strain data on the skin.\nCompute averages and invariants through a solid-to-skin connectivity mapping.\nExtract stress and strain data"
    },
    {
        "objectID": "examples/02-Performance-Improvements/02-mesh-skin",
        "href": "examples/02-Performance-Improvements/02-mesh-skin.html#extract-external-layer-on-a-selection-of-elements",
        "title": "Reduce model size by using the mesh skin for result and mesh extraction > Extract external layer on a selection of elements",
        "section": "Extract external layer on a selection of elements",
        "text": "Total running time of the script: (0 minutes 3.809 seconds)\nDownload Jupyter notebook: 02-mesh-skin.ipynb\nDownload Python source code: 02-mesh-skin.py\nDownload zipped: 02-mesh-skin.zip\nGallery generated by Sphinx-Gallery\nExtract external layer on a selection of elements\nDownload Jupyter notebook: 02-mesh-skin.ipynb\nDownload Python source code: 02-mesh-skin.py\nDownload zipped: 02-mesh-skin.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.tensor",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.tensor.html#tensor",
        "title": "tensor",
        "section": "tensor",
        "text": "Result data for the tensor values.\ntensor"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.tensor",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.tensor.html#ansys.dpf.post.strain.PlasticStrain.tensor",
        "title": "tensor > tensor > tensor",
        "section": "tensor > tensor",
        "text": "property PlasticStrain.tensor\n\nResult data for the tensor values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "PyDPF-Post provides a Python interface to DPF that is streamlined for\npostprocessing. These sections explain the conceptual model of PyDPF-Post and\ntypical usage.\nLoad a result file to browse its contents.\nBrowse all result file metadata or only mesh metadata.\nAccess results in a loaded result file.\nPlot results in a loaded result file.\nChange the server context to control Ansys license interactions for DPF-Core operators.\nUse PyDPF-Core operators in both PyDPF-Core and PyDPF-Post.\nTroubleshoot common PyDPF-Post issues and learn how to improve your scripts.\nUser guide"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_thermal_strains.html#nodal_thermal_strains",
        "title": "nodal_thermal_strains",
        "section": "nodal_thermal_strains",
        "text": "Get result data for the nodal thermal strains.\nnodal_thermal_strains"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_thermal_strains.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_thermal_strains",
        "title": "nodal_thermal_strains > nodal_thermal_strains > nodal_thermal_strains",
        "section": "nodal_thermal_strains > nodal_thermal_strains",
        "text": "MecanicMisc.nodal_thermal_strains(**kwargs)\n\nGet result data for the nodal thermal strains.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_state_variable.html#nodal_plastic_state_variable",
        "title": "nodal_plastic_state_variable",
        "section": "nodal_plastic_state_variable",
        "text": "Get result data for the nodal plastic state variable.\nnodal_plastic_state_variable"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_state_variable.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_state_variable",
        "title": "nodal_plastic_state_variable > nodal_plastic_state_variable > nodal_plastic_state_variable",
        "section": "nodal_plastic_state_variable > nodal_plastic_state_variable",
        "text": "MecanicMisc.nodal_plastic_state_variable(**kwargs)\n\nGet result data for the nodal plastic state variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yy",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yy.html#yy",
        "title": "yy",
        "section": "yy",
        "text": "Result data for the YY component of the tensor.\nyy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yy",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.yy.html#ansys.dpf.post.strain.PlasticStrain.yy",
        "title": "yy > yy > yy",
        "section": "yy > yy",
        "text": "property PlasticStrain.yy\n\nResult data for the YY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xy",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xy.html#xy",
        "title": "xy",
        "section": "xy",
        "text": "Result data of for the XY component of the tensor.\nxy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xy",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xy.html#ansys.dpf.post.strain.ElasticStrain.xy",
        "title": "xy > xy > xy",
        "section": "xy > xy",
        "text": "property ElasticStrain.xy\n\nResult data of for the XY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#load-a-solution",
        "title": "Load a solution",
        "section": "Load a solution",
        "text": "This example shows how to use the legacy PyDPF-Post API to load a solution and\naccess some basic information.\nLoad a solution"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#perform-required-imports",
        "title": "Load a solution > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#get-solution-object",
        "title": "Load a solution > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a simple file supplied with\nPyDPF-Post.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#use-helpers",
        "title": "Load a solution > Use helpers",
        "section": "Use helpers",
        "text": "Use helpers"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#get-solution-information",
        "title": "Load a solution > Get solution information",
        "section": "Get solution information",
        "text": "Get solution information"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#get-location-information",
        "title": "Load a solution > Get location information",
        "section": "Get location information",
        "text": "Locations are used to defined where the result must be set.\nGet location information"
    },
    {
        "objectID": "examples/05-Legacy/01-introduction",
        "href": "examples/05-Legacy/01-introduction.html#get-available-keywords",
        "title": "Load a solution > Get available keywords",
        "section": "Get available keywords",
        "text": "Keywords can be used as attributes of a Result object.\nTotal running time of the script: (0 minutes 0.226 seconds)\nDownload Jupyter notebook: 01-introduction.ipynb\nDownload Python source code: 01-introduction.py\nDownload zipped: 01-introduction.zip\nGallery generated by Sphinx-Gallery\nGet available keywords\nResult\nDownload Jupyter notebook: 01-introduction.ipynb\nDownload Python source code: 01-introduction.py\nDownload zipped: 01-introduction.zip"
    },
    {
        "objectID": "examples/05-Legacy/sg_execution_times",
        "href": "examples/05-Legacy/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:10.504 total execution time for 11 files from examples/05-Legacy:\nExample\nTime\nMem (MB)\nsphx_glr_examples_05-Legacy_01-get_data_from_static_simulation.py (01-get_data_from_static_simulation.py)\n00:03.565\n0.0\nsphx_glr_examples_05-Legacy_04-harmonic-analysis.py (04-harmonic-analysis.py)\n00:01.248\n0.0\nsphx_glr_examples_05-Legacy_02-static-analysis.py (02-static-analysis.py)\n00:01.213\n0.0\nsphx_glr_examples_05-Legacy_03-modal-analysis.py (03-modal-analysis.py)\n00:01.128\n0.0\nsphx_glr_examples_05-Legacy_00-overview_example.py (00-overview_example.py)\n00:01.041\n0.0\nsphx_glr_examples_05-Legacy_08-result_on_path_of_coordinates.py (08-result_on_path_of_coordinates.py)\n00:00.952\n0.0\nsphx_glr_examples_05-Legacy_05-transient-analysis.py (05-transient-analysis.py)\n00:00.655\n0.0\nsphx_glr_examples_05-Legacy_09-basics.py (09-basics.py)\n00:00.233\n0.0\nsphx_glr_examples_05-Legacy_01-introduction.py (01-introduction.py)\n00:00.226\n0.0\nsphx_glr_examples_05-Legacy_07-result_keywords.py (07-result_keywords.py)\n00:00.146\n0.0\nsphx_glr_examples_05-Legacy_06-complex_results.py (06-complex_results.py)\n00:00.097\n0.0\nComputation times\n01-get_data_from_static_simulation.py\n04-harmonic-analysis.py\n02-static-analysis.py\n03-modal-analysis.py\n00-overview_example.py\n08-result_on_path_of_coordinates.py\n05-transient-analysis.py\n09-basics.py\n01-introduction.py\n07-result_keywords.py\n06-complex_results.py"
    },
    {
        "objectID": "examples/04-Fluid-Examples/index",
        "href": "examples/04-Fluid-Examples/index.html#pydpf-post-fluid-examples",
        "title": "PyDPF-Post fluid examples",
        "section": "PyDPF-Post fluid examples",
        "text": "These examples show how to use PyDPF-Post features for fluid models.\nsphx_glr_examples_04-Fluid-Examples_00-explore-fluid-simulation.py\nPyDPF-Post fluid examples"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain.html#nodal_plastic_strain",
        "title": "nodal_plastic_strain",
        "section": "nodal_plastic_strain",
        "text": "Get result data for the nodal plastic strain.\nnodal_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_plastic_strain",
        "title": "nodal_plastic_strain > nodal_plastic_strain > nodal_plastic_strain",
        "section": "nodal_plastic_strain > nodal_plastic_strain",
        "text": "MecanicMisc.nodal_plastic_strain(**kwargs)\n\nGet result data for the nodal plastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.scalar",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.scalar.html#scalar",
        "title": "scalar",
        "section": "scalar",
        "text": "Result data for the scalar values.\nscalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.scalar",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.scalar.html#ansys.dpf.post.electric_results.ElectricPotential.scalar",
        "title": "scalar > scalar > scalar",
        "section": "scalar > scalar",
        "text": "property ElectricPotential.scalar\n\nResult data for the scalar values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.num_fields",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.num_fields.html#num_fields",
        "title": "num_fields",
        "section": "num_fields",
        "text": "Number of fields contained in the result.\nnum_fields"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.num_fields",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.num_fields.html#ansys.dpf.post.result_data.ResultData.num_fields",
        "title": "num_fields > num_fields > num_fields",
        "section": "num_fields > num_fields",
        "text": "property ResultData.num_fields\n\nNumber of fields contained in the result.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/result_object",
        "href": "api/result_object.html#result-class",
        "title": "Result class",
        "section": "Result class",
        "text": "The Result class provides access\nto different types of result data.\nThis code shows how you can access result data for displacements, stresses, and\nelastic strains:\nDPF-Post features separate Result classes for each supported result type. For information on\nthe available types and their interfaces, see user_guide_accessing_results.\nresult_object.Result(data_sources, model, ...)\nProvides the Result class.\ndisplacement.Displacement(**kwargs)\nDefines the displacement object, which is a vector object.\nelectric_results.ElectricField(**kwargs)\nDefines the temperature object for a thermal/electric analysis.\nelectric_results.ElectricPotential(**kwargs)\nDefines the temperature object for a thermal/electric analysis.\nmisc_results.MecanicMisc(model, data_sources)\nProvides the miscellaneous mecanic result.\nstrain.ElasticStrain(**kwargs)\nDefines the elastic strain object, which is a tensor object.\nstrain.PlasticStrain(**kwargs)\nDefines the plastic strain object, which is a tensor object.\nstress.Stress(**kwargs)\nDefines the stress object, which is a tensor object.\ntemperature.HeatFlux(**kwargs)\nDefines the heat flux object, which is a scalar object, for thermal analysis.\ntemperature.StructuralTemperature(**kwargs)\nDefines the structural temperature object, which is a scalar object.\ntemperature.Temperature(**kwargs)\nDefines the temperature object, which is a scalar object, for thermal analysis.\nResult class\nResult\nResult\nResult\nresult_object.Result\nResult\ndisplacement.Displacement\nelectric_results.ElectricField\nelectric_results.ElectricPotential\nmisc_results.MecanicMisc\nstrain.ElasticStrain\nstrain.PlasticStrain\nstress.Stress\ntemperature.HeatFlux\ntemperature.StructuralTemperature\ntemperature.Temperature"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_creep_strain_energy_density.html#nodal_creep_strain_energy_density",
        "title": "nodal_creep_strain_energy_density",
        "section": "nodal_creep_strain_energy_density",
        "text": "Get result data for the nodal creep strain energy density.\nnodal_creep_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_creep_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_creep_strain_energy_density",
        "title": "nodal_creep_strain_energy_density > nodal_creep_strain_energy_density > nodal_creep_strain_energy_density",
        "section": "nodal_creep_strain_energy_density > nodal_creep_strain_energy_density",
        "text": "MecanicMisc.nodal_creep_strain_energy_density(**kwargs)\n\nGet result data for the nodal creep strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#postprocess-a-modal-mechanical-simulation",
        "title": "Postprocess a modal mechanical simulation",
        "section": "Postprocess a modal mechanical simulation",
        "text": "This example shows how to postprocess a modal mechanical simulation to view different\nmode shapes.\nPostprocess a modal mechanical simulation"
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#perform-required-imports",
        "title": "Postprocess a modal mechanical simulation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#get-simulation-object",
        "title": "Postprocess a modal mechanical simulation > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#view-the-frequency-domain",
        "title": "Postprocess a modal mechanical simulation > View the frequency domain",
        "section": "View the frequency domain",
        "text": "To help pick the right modes, printing the time frequency support.\nView the frequency domain"
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#extract-and-view-all-mode-shapes",
        "title": "Postprocess a modal mechanical simulation > Extract and view all mode shapes",
        "section": "Extract and view all mode shapes",
        "text": "Extract all mode shapes and view them one by one.\nExtract and view all mode shapes"
    },
    {
        "objectID": "examples/00-Different-analysis-types/02-modal-simulation",
        "href": "examples/00-Different-analysis-types/02-modal-simulation.html#extract-and-view-a-selection-of-mode-shapes",
        "title": "Postprocess a modal mechanical simulation > Extract and view a selection of mode shapes",
        "section": "Extract and view a selection of mode shapes",
        "text": "Extract and view a selection of mode shapes and view them one by one.\nTotal running time of the script: (0 minutes 6.600 seconds)\nDownload Jupyter notebook: 02-modal-simulation.ipynb\nDownload Python source code: 02-modal-simulation.py\nDownload zipped: 02-modal-simulation.zip\nGallery generated by Sphinx-Gallery\nExtract and view a selection of mode shapes\nDownload Jupyter notebook: 02-modal-simulation.ipynb\nDownload Python source code: 02-modal-simulation.py\nDownload zipped: 02-modal-simulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.zz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.zz.html#zz",
        "title": "zz",
        "section": "zz",
        "text": "Result data for the ZZ component of the tensor.\nzz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.zz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.zz.html#ansys.dpf.post.strain.PlasticStrain.zz",
        "title": "zz > zz > zz",
        "section": "zz > zz",
        "text": "property PlasticStrain.zz\n\nResult data for the ZZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_incremental_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_incremental_energy.html#elemental_incremental_energy",
        "title": "elemental_incremental_energy",
        "section": "elemental_incremental_energy",
        "text": "Get result data for the elemental incremental energy.\nelemental_incremental_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_incremental_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_incremental_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_incremental_energy",
        "title": "elemental_incremental_energy > elemental_incremental_energy > elemental_incremental_energy",
        "section": "elemental_incremental_energy > elemental_incremental_energy",
        "text": "MecanicMisc.elemental_incremental_energy(**kwargs)\n\nGet result data for the elemental incremental energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.meshes",
        "href": "api/ansys.dpf.post.meshes.html#meshes",
        "title": "Meshes",
        "section": "Meshes",
        "text": "Meshes"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress.html#elemental_nodal_stress",
        "title": "elemental_nodal_stress",
        "section": "elemental_nodal_stress",
        "text": "Get result data for the elemental nodal stress.\nelemental_nodal_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_stress",
        "title": "elemental_nodal_stress > elemental_nodal_stress > elemental_nodal_stress",
        "section": "elemental_nodal_stress > elemental_nodal_stress",
        "text": "MecanicMisc.elemental_nodal_stress(**kwargs)\n\nGet result data for the elemental nodal stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xz.html#xz",
        "title": "xz",
        "section": "xz",
        "text": "Result data for the XZ component of the tensor.\nxz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xz",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xz.html#ansys.dpf.post.stress.Stress.xz",
        "title": "xz > xz > xz",
        "section": "xz > xz",
        "text": "property Stress.xz\n\nResult data for the XZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain_energy_density.html#elemental_elastic_strain_energy_density",
        "title": "elemental_elastic_strain_energy_density",
        "section": "elemental_elastic_strain_energy_density",
        "text": "Get result data for the elemental elastic strain energy density.\nelemental_elastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain_energy_density",
        "title": "elemental_elastic_strain_energy_density > elemental_elastic_strain_energy_density > elemental_elastic_strain_energy_density",
        "section": "elemental_elastic_strain_energy_density > elemental_elastic_strain_energy_density",
        "text": "MecanicMisc.elemental_elastic_strain_energy_density(**kwargs)\n\nGet result data for the elemental elastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_structural_temperature.html#nodal_structural_temperature",
        "title": "nodal_structural_temperature",
        "section": "nodal_structural_temperature",
        "text": "Get result data for the nodal structural temperature.\nnodal_structural_temperature"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_structural_temperature",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_structural_temperature.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_structural_temperature",
        "title": "nodal_structural_temperature > nodal_structural_temperature > nodal_structural_temperature",
        "section": "nodal_structural_temperature > nodal_structural_temperature",
        "text": "MecanicMisc.nodal_structural_temperature(**kwargs)\n\nGet result data for the nodal structural temperature.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_object.Result",
        "href": "api/_autosummary/ansys.dpf.post.result_object.Result.html#result",
        "title": "Result",
        "section": "Result",
        "text": "Provides the Result class.\nThis is an abstract class. It is not instantiated directly but instead is\nsubclassed by specific result classes like the\nDisplacement class.\nResult.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nResult\nResult\nDisplacement\nResult.has_complex_frequencies"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_object.Result",
        "href": "api/_autosummary/ansys.dpf.post.result_object.Result.html#ansys.dpf.post.result_object.Result",
        "title": "Result > Result > Result",
        "section": "Result > Result",
        "text": "class ansys.dpf.post.result_object.Result(data_sources, model, **kwargs)\n\nProvides the Result class.\n\nThis is an abstract class. It is not instantiated directly but instead is\nsubclassed by specific result classes like the\nDisplacement class.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nResult.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yy",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yy.html#yy",
        "title": "yy",
        "section": "yy",
        "text": "Result data for the YY component of the tensor.\nyy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yy",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.yy.html#ansys.dpf.post.strain.ElasticStrain.yy",
        "title": "yy > yy > yy",
        "section": "yy > yy",
        "text": "property ElasticStrain.yy\n\nResult data for the YY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xy",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xy.html#xy",
        "title": "xy",
        "section": "xy",
        "text": "Result data of for the XY component of the tensor.\nxy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.xy",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.xy.html#ansys.dpf.post.stress.Stress.xy",
        "title": "xy > xy > xy",
        "section": "xy > xy",
        "text": "property Stress.xy\n\nResult data of for the XY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contactgap_distance",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contactgap_distance.html#elemental_contactgap_distance",
        "title": "elemental_contactgap_distance",
        "section": "elemental_contactgap_distance",
        "text": "Get result data for the elemental contact gap distance.\nelemental_contactgap_distance"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contactgap_distance",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contactgap_distance.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contactgap_distance",
        "title": "elemental_contactgap_distance > elemental_contactgap_distance > elemental_contactgap_distance",
        "section": "elemental_contactgap_distance > elemental_contactgap_distance",
        "text": "MecanicMisc.elemental_contactgap_distance(**kwargs)\n\nGet result data for the elemental contact gap distance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.z",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.z.html#z",
        "title": "z",
        "section": "z",
        "text": "Result data for the Z component of the vector.\nz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.z",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.z.html#ansys.dpf.post.temperature.HeatFlux.z",
        "title": "z > z > z",
        "section": "z > z",
        "text": "property HeatFlux.z\n\nResult data for the Z component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.has_complex_frequencies.html#ansys.dpf.post.stress.Stress.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "Stress.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain.html#elemental_elastic_strain",
        "title": "elemental_elastic_strain",
        "section": "elemental_elastic_strain",
        "text": "Get result data for the elemental elastic strain.\nelemental_elastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_elastic_strain",
        "title": "elemental_elastic_strain > elemental_elastic_strain > elemental_elastic_strain",
        "section": "elemental_elastic_strain > elemental_elastic_strain",
        "text": "MecanicMisc.elemental_elastic_strain(**kwargs)\n\nGet result data for the elemental elastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.simulation",
        "href": "api/ansys.dpf.post.simulation.html#simulation",
        "title": "Simulation",
        "section": "Simulation",
        "text": "Simulation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.html#dpfsolution",
        "title": "DpfSolution",
        "section": "DpfSolution",
        "text": "Provides the main class of the DPF-Post solution.\nDpfSolution.get_result_info()\nGet result file information.\nDpfSolution.mesh\nMesh representation of the model.\nDpfSolution.time_freq_support\nDescription of the temporal/frequency analysis of the model.\nDpfSolution\nDpfSolution.get_result_info\nDpfSolution.mesh\nDpfSolution.time_freq_support"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.html#ansys.dpf.post.dpf_solution.DpfSolution",
        "title": "DpfSolution > DpfSolution > DpfSolution",
        "section": "DpfSolution > DpfSolution",
        "text": "class ansys.dpf.post.dpf_solution.DpfSolution(data_sources, model)\n\nProvides the main class of the DPF-Post solution.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDpfSolution.get_result_info()\n\nGet result file information.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDpfSolution.mesh\n\nMesh representation of the model.\n\nDpfSolution.time_freq_support\n\nDescription of the temporal/frequency analysis of the model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_artificial_hourglass_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_artificial_hourglass_energy.html#elemental_artificial_hourglass_energy",
        "title": "elemental_artificial_hourglass_energy",
        "section": "elemental_artificial_hourglass_energy",
        "text": "Get result data for the elemental artificial hourglass energy.\nelemental_artificial_hourglass_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_artificial_hourglass_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_artificial_hourglass_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_artificial_hourglass_energy",
        "title": "elemental_artificial_hourglass_energy > elemental_artificial_hourglass_energy > elemental_artificial_hourglass_energy",
        "section": "elemental_artificial_hourglass_energy > elemental_artificial_hourglass_energy",
        "text": "MecanicMisc.elemental_artificial_hourglass_energy(**kwargs)\n\nGet result data for the elemental artificial hourglass energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_velocity",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_velocity.html#nodal_velocity",
        "title": "nodal_velocity",
        "section": "nodal_velocity",
        "text": "Get result data for the nodal velocity.\nnodal_velocity"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_velocity",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_velocity.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_velocity",
        "title": "nodal_velocity > nodal_velocity > nodal_velocity",
        "section": "nodal_velocity > nodal_velocity",
        "text": "MecanicMisc.nodal_velocity(**kwargs)\n\nGet result data for the nodal velocity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#explore-the-data-of-a-result-with-the-dataframe-harmonic-simulation",
        "title": "Explore the data of a result with the dataframe (harmonic simulation)",
        "section": "Explore the data of a result with the dataframe (harmonic simulation)",
        "text": "This example uses a harmonic simulation to show how to interact with the PyDPF-Post\ndataframe, which is the object returned by each result.\nExplore the data of a result with the dataframe (harmonic simulation)"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#perform-required-imports",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#get-simulation-object",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#extract-displacement-over-all-sets",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Extract displacement over all sets",
        "section": "Extract displacement over all sets",
        "text": "Loop over all columns and rows to understand the dataframe\nand get the values for each index.\nExtract displacement over all sets"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#make-selections-in-dataframe",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Make selections in dataframe",
        "section": "Make selections in dataframe",
        "text": "Use the labels and values shown by the preceding code to select subparts of the\ndataframe.\nMake selections in dataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#make-selections-in-dataframe-by-index",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Make selections in dataframe by index",
        "section": "Make selections in dataframe by index",
        "text": "To select values by index for each label, use the iselect() method.\nThe index to ID order follows what is returned by the values on the preceding index method.\nMake selections in dataframe by index\niselect()"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#make-multiple-selections-in-dataframe",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Make multiple selections in dataframe",
        "section": "Make multiple selections in dataframe",
        "text": "Make multiple selections in dataframe"
    },
    {
        "objectID": "examples/01-Detailed-Examples/03-explore-result-data-harmonic",
        "href": "examples/01-Detailed-Examples/03-explore-result-data-harmonic.html#make-selections-to-plot-dataframe",
        "title": "Explore the data of a result with the dataframe (harmonic simulation) > Make selections to plot dataframe",
        "section": "Make selections to plot dataframe",
        "text": "Total running time of the script: (0 minutes 0.997 seconds)\nDownload Jupyter notebook: 03-explore-result-data-harmonic.ipynb\nDownload Python source code: 03-explore-result-data-harmonic.py\nDownload zipped: 03-explore-result-data-harmonic.zip\nGallery generated by Sphinx-Gallery\nMake selections to plot dataframe\nDownload Jupyter notebook: 03-explore-result-data-harmonic.ipynb\nDownload Python source code: 03-explore-result-data-harmonic.py\nDownload zipped: 03-explore-result-data-harmonic.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_volume",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_volume.html#elemental_volume",
        "title": "elemental_volume",
        "section": "elemental_volume",
        "text": "Get result data for the elemental volume.\nelemental_volume"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_volume",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_volume.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_volume",
        "title": "elemental_volume > elemental_volume > elemental_volume",
        "section": "elemental_volume > elemental_volume",
        "text": "MecanicMisc.elemental_volume(**kwargs)\n\nGet result data for the elemental volume.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.html#temperature",
        "title": "Temperature",
        "section": "Temperature",
        "text": "Defines the temperature object, which is a scalar object, for thermal analysis.\nTemperature.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nTemperature.scalar\nResult data for the scalar values.\nTemperature\nTemperature.has_complex_frequencies\nTemperature.scalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.html#ansys.dpf.post.temperature.Temperature",
        "title": "Temperature > Temperature > Temperature",
        "section": "Temperature > Temperature",
        "text": "class ansys.dpf.post.temperature.Temperature(**kwargs)\n\nDefines the temperature object, which is a scalar object, for thermal analysis.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTemperature.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTemperature.scalar\n\nResult data for the scalar values.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress.html#nodal_stress",
        "title": "nodal_stress",
        "section": "nodal_stress",
        "text": "Get result data for the nodal stress.\nnodal_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_stress.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_stress",
        "title": "nodal_stress > nodal_stress > nodal_stress",
        "section": "nodal_stress > nodal_stress",
        "text": "MecanicMisc.nodal_stress(**kwargs)\n\nGet result data for the nodal stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/install",
        "href": "getting_started/install.html#installation",
        "title": "Installation",
        "section": "Installation",
        "text": "After all software requirements are installed, you can install PyDPF-Post.\nInstallation"
    },
    {
        "objectID": "getting_started/install",
        "href": "getting_started/install.html#install-using-pip",
        "title": "Installation > Install using pip",
        "section": "Install using pip",
        "text": "The standard package installer for Python is pip.\nTo use PyDPF-Post with Ansys 2021 R1 or later, install the latest version\nwith this command:\nAlternatively, you can also clone and install the latest version of PyDPF-Post from its GitHub\nrepository with these commands:\nPyDPF-Post plotting capabilities require an installation of PyVista.\nTo install PyDPF-Post with its optional plotting functionalities, use this command:\npip install ansys-dpf-post[plotting] is equivalent to the previous command, however, the “plotting” target\nonly remains valid for legacy reasons and will soon be deprecated. Users are encouraged to use the “graphics”\ntarget instead.\nFor more information about PyDPF-Post plotting capabilities, see user_guide_plotting.\nInstall using pip\npip\npip install ansys-dpf-post[plotting]"
    },
    {
        "objectID": "getting_started/install",
        "href": "getting_started/install.html#install-without-internet",
        "title": "Installation > Install without internet",
        "section": "Install without internet",
        "text": "If you are unable to install PyDPF-Post on the host machine using pip due to\nnetwork isolation, you can download the wheel file corresponding to your platform\nand Python interpreter version. To obtain the latest release, go to the Assets section\nfor the latest PyDPF-Post release on GitHub.\nA Python wheel file is essentially a ZIP archive containing Python wheel files for all the packages\nthat PyDPF-Post requires to run. To install PyDPF-Post using the downloaded wheel file, unzip this file\nto a local directory and then run this command from within this local directory:\nBeware that PyDPF-Post wheel files do not include the optional plotting dependencies.\nTo allow for plotting capabilities, also download the PyVista wheel file,\nunzip it to the same local directory, and run the preceding command again.\nInstall without internet\npip"
    },
    {
        "objectID": "getting_started/install",
        "href": "getting_started/install.html#check-the-installation",
        "title": "Installation > Check the installation",
        "section": "Check the installation",
        "text": "Run this Python code to verify your PyDPF-Post installation:\nCheck the installation"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.html#elasticstrain",
        "title": "ElasticStrain",
        "section": "ElasticStrain",
        "text": "Defines the elastic strain object, which is a tensor object.\nElasticStrain.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nElasticStrain.principal_1\nResult data for the first principal component of the tensor.\nElasticStrain.principal_2\nResult data for the second principal component of the tensor.\nElasticStrain.principal_3\nResults data for the third principal component of the tensor.\nElasticStrain.tensor\nResult data for the tensor values.\nElasticStrain.xx\nResult data for the XX component of the tensor.\nElasticStrain.xy\nResult data of for the XY component of the tensor.\nElasticStrain.xz\nResult data for the XZ component of the tensor.\nElasticStrain.yy\nResult data for the YY component of the tensor.\nElasticStrain.yz\nResult data for the YZ component of the tensor.\nElasticStrain.zz\nResult data for the ZZ component of the tensor.\nElasticStrain\nElasticStrain.has_complex_frequencies\nElasticStrain.principal_1\nElasticStrain.principal_2\nElasticStrain.principal_3\nElasticStrain.tensor\nElasticStrain.xx\nElasticStrain.xy\nElasticStrain.xz\nElasticStrain.yy\nElasticStrain.yz\nElasticStrain.zz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.html#ansys.dpf.post.strain.ElasticStrain",
        "title": "ElasticStrain > ElasticStrain > ElasticStrain",
        "section": "ElasticStrain > ElasticStrain",
        "text": "class ansys.dpf.post.strain.ElasticStrain(**kwargs)\n\nDefines the elastic strain object, which is a tensor object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElasticStrain.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElasticStrain.principal_1\n\nResult data for the first principal component of the tensor.\n\nElasticStrain.principal_2\n\nResult data for the second principal component of the tensor.\n\nElasticStrain.principal_3\n\nResults data for the third principal component of the tensor.\n\nElasticStrain.tensor\n\nResult data for the tensor values.\n\nElasticStrain.xx\n\nResult data for the XX component of the tensor.\n\nElasticStrain.xy\n\nResult data of for the XY component of the tensor.\n\nElasticStrain.xz\n\nResult data for the XZ component of the tensor.\n\nElasticStrain.yy\n\nResult data for the YY component of the tensor.\n\nElasticStrain.yz\n\nResult data for the YZ component of the tensor.\n\nElasticStrain.zz\n\nResult data for the ZZ component of the tensor.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_fluid_penetration_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_fluid_penetration_pressure.html#elemental_contact_fluid_penetration_pressure",
        "title": "elemental_contact_fluid_penetration_pressure",
        "section": "elemental_contact_fluid_penetration_pressure",
        "text": "Get result data for the elemental contact fluid penetration pressure.\nelemental_contact_fluid_penetration_pressure"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_fluid_penetration_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_fluid_penetration_pressure.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_fluid_penetration_pressure",
        "title": "elemental_contact_fluid_penetration_pressure > elemental_contact_fluid_penetration_pressure > elemental_contact_fluid_penetration_pressure",
        "section": "elemental_contact_fluid_penetration_pressure > elemental_contact_fluid_penetration_pressure",
        "text": "MecanicMisc.elemental_contact_fluid_penetration_pressure(**kwargs)\n\nGet result data for the elemental contact fluid penetration pressure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.tensor",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.tensor.html#tensor",
        "title": "tensor",
        "section": "tensor",
        "text": "Result data for the tensor values.\ntensor"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.tensor",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.tensor.html#ansys.dpf.post.stress.Stress.tensor",
        "title": "tensor > tensor > tensor",
        "section": "tensor > tensor",
        "text": "property Stress.tensor\n\nResult data for the tensor values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#access-complex-results-from-a-modal-or-harmonic-analysis",
        "title": "Access complex results from a modal or harmonic analysis",
        "section": "Access complex results from a modal or harmonic analysis",
        "text": "This example shows how to use the legacy PyDPF-Post API to access complex results\nfrom a modal or harmonic analysis.\nAccess complex results from a modal or harmonic analysis"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#perform-required-imports",
        "title": "Access complex results from a modal or harmonic analysis > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#get-solution-object",
        "title": "Access complex results from a modal or harmonic analysis > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a file with complex results.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#get-displacement-result",
        "title": "Access complex results from a modal or harmonic analysis > Get displacement result",
        "section": "Get displacement result",
        "text": "The displacement result contain a field for real values and a field for\nimaginary values.\nGet displacement result"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#check-for-support-of-complex-frequencies",
        "title": "Access complex results from a modal or harmonic analysis > Check for support of complex frequencies",
        "section": "Check for support of complex frequencies",
        "text": "Check for support of complex frequencies"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#compute-result",
        "title": "Access complex results from a modal or harmonic analysis > Compute result",
        "section": "Compute result",
        "text": "Compute result"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#define-phase",
        "title": "Access complex results from a modal or harmonic analysis > Define phase",
        "section": "Define phase",
        "text": "The phase value must be a float. The phase unit is degrees.\nDefine phase"
    },
    {
        "objectID": "examples/05-Legacy/06-complex_results",
        "href": "examples/05-Legacy/06-complex_results.html#get-amplitude",
        "title": "Access complex results from a modal or harmonic analysis > Get amplitude",
        "section": "Get amplitude",
        "text": "Total running time of the script: (0 minutes 0.097 seconds)\nDownload Jupyter notebook: 06-complex_results.ipynb\nDownload Python source code: 06-complex_results.py\nDownload zipped: 06-complex_results.zip\nGallery generated by Sphinx-Gallery\nGet amplitude\nDownload Jupyter notebook: 06-complex_results.ipynb\nDownload Python source code: 06-complex_results.py\nDownload zipped: 06-complex_results.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.load_solution",
        "href": "api/_autosummary/ansys.dpf.post.load_solution.html#load_solution",
        "title": "load_solution",
        "section": "load_solution",
        "text": "Loads a solution and returns a ansys.dpf.post.Result object.\nDeprecated since version 3.0: Use load_simulation() instead.\nThis class provides information on a given set on a given scoping.\ndata_sources (str, ansys.dpf.core.DataSources) – Path to the file to open or the ansys.dpf.core.DataSources class.\nphysics_type (common._PhysicsType, str, optional) – Type of physics described in the specified data sources. Options are\n\"mecanic\" or \"thermal\". The default is None, in which case\nthe data sources are read to determine the physics type.\nanalysis_type (common._AnalysisType, str, optional) – Type of analysis described in the specified data sources. Options are\n\"static\", \"modal\", \"harmonic\", and \"transient\". The\ndefault is None, in which case the data sources are read to determine\nthe analysis type.\nLoad the example static result.\nload_solution\nansys.dpf.post.Result\nload_simulation()\nansys.dpf.core.DataSources\n\"mecanic\"\n\"thermal\"\nNone\n\"static\"\n\"modal\"\n\"harmonic\"\n\"transient\"\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.load_solution",
        "href": "api/_autosummary/ansys.dpf.post.load_solution.html#ansys.dpf.post.load_solution",
        "title": "load_solution > load_solution > load_solution",
        "section": "load_solution > load_solution",
        "text": "ansys.dpf.post.load_solution(data_sources, physics_type=None, analysis_type=None)\n\nLoads a solution and returns a ansys.dpf.post.Result object.\n\nDeprecated since version 3.0: Use load_simulation() instead.\n\nThis class provides information on a given set on a given scoping.\n\nParameters\n\ndata_sources (str, ansys.dpf.core.DataSources) – Path to the file to open or the ansys.dpf.core.DataSources class.\n\nphysics_type (common._PhysicsType, str, optional) – Type of physics described in the specified data sources. Options are\n\"mecanic\" or \"thermal\". The default is None, in which case\nthe data sources are read to determine the physics type.\n\nanalysis_type (common._AnalysisType, str, optional) – Type of analysis described in the specified data sources. Options are\n\"static\", \"modal\", \"harmonic\", and \"transient\". The\ndefault is None, in which case the data sources are read to determine\nthe analysis type.\n\nExamples\n\nLoad the example static result.\n\n>>> from ansys.dpf import post\n>>> from ansys.dpf.post import examples\n>>> solution = post.load_solution(examples.static_rst)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_eqv_stress_parameter.html#nodal_eqv_stress_parameter",
        "title": "nodal_eqv_stress_parameter",
        "section": "nodal_eqv_stress_parameter",
        "text": "Get result data for the nodal equivalent stress parameter.\nnodal_eqv_stress_parameter"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_eqv_stress_parameter.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_eqv_stress_parameter",
        "title": "nodal_eqv_stress_parameter > nodal_eqv_stress_parameter > nodal_eqv_stress_parameter",
        "section": "nodal_eqv_stress_parameter > nodal_eqv_stress_parameter",
        "text": "MecanicMisc.nodal_eqv_stress_parameter(**kwargs)\n\nGet result data for the nodal equivalent stress parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_displacement",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_displacement.html#nodal_displacement",
        "title": "nodal_displacement",
        "section": "nodal_displacement",
        "text": "Get result data for the nodal displacement.\nnodal_displacement"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_displacement",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_displacement.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_displacement",
        "title": "nodal_displacement > nodal_displacement > nodal_displacement",
        "section": "nodal_displacement > nodal_displacement",
        "text": "MecanicMisc.nodal_displacement(**kwargs)\n\nGet result data for the nodal displacement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_status",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_status.html#elemental_contact_status",
        "title": "elemental_contact_status",
        "section": "elemental_contact_status",
        "text": "Get result data for the elemental contact status.\nelemental_contact_status"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_status",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_status.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_status",
        "title": "elemental_contact_status > elemental_contact_status > elemental_contact_status",
        "section": "elemental_contact_status > elemental_contact_status",
        "text": "MecanicMisc.elemental_contact_status(**kwargs)\n\nGet result data for the elemental contact status.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/sg_execution_times",
        "href": "examples/00-Different-analysis-types/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:29.517 total execution time for 5 files from examples/00-Different-analysis-types:\nExample\nTime\nMem (MB)\nsphx_glr_examples_00-Different-analysis-types_01-static-simulation.py (01-static-simulation.py)\n00:09.304\n0.0\nsphx_glr_examples_00-Different-analysis-types_02-modal-simulation.py (02-modal-simulation.py)\n00:06.600\n0.0\nsphx_glr_examples_00-Different-analysis-types_04-harmonic-complex-results.py (04-harmonic-complex-results.py)\n00:06.432\n0.0\nsphx_glr_examples_00-Different-analysis-types_03-transient-simulation.py (03-transient-simulation.py)\n00:03.899\n0.0\nsphx_glr_examples_00-Different-analysis-types_05-fluid-simulation.py (05-fluid-simulation.py)\n00:03.281\n0.0\nComputation times\n01-static-simulation.py\n02-modal-simulation.py\n04-harmonic-complex-results.py\n03-transient-simulation.py\n05-fluid-simulation.py"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#request-a-result-on-a-specific-path-of-coordinates",
        "title": "Request a result on a specific path of coordinates",
        "section": "Request a result on a specific path of coordinates",
        "text": "This example shows how to use the legacy PyDPF-Post API to request a result on a\nspecific path of coordinates.\nRequest a result on a specific path of coordinates"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#perform-required-imports",
        "title": "Request a result on a specific path of coordinates > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#get-solution-object",
        "title": "Request a result on a specific path of coordinates > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a simple file supplied with\nPyDPF-Post.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#create-coordinates-array-to-request-result-on",
        "title": "Request a result on a specific path of coordinates > Create coordinates array to request result on",
        "section": "Create coordinates array to request result on",
        "text": "Create coordinates array to request result on"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#create-dpfpath-object",
        "title": "Request a result on a specific path of coordinates > Create DpfPath object",
        "section": "Create DpfPath object",
        "text": "Create a DpfPath object.\nCreate DpfPath object\nDpfPath\nDpfPath"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#request-result-on-this-path",
        "title": "Request a result on a specific path of coordinates > Request result on this path",
        "section": "Request result on this path",
        "text": "Request result on this path"
    },
    {
        "objectID": "examples/05-Legacy/08-result_on_path_of_coordinates",
        "href": "examples/05-Legacy/08-result_on_path_of_coordinates.html#plot-result",
        "title": "Request a result on a specific path of coordinates > Plot result",
        "section": "Plot result",
        "text": "Total running time of the script: (0 minutes 0.952 seconds)\nDownload Jupyter notebook: 08-result_on_path_of_coordinates.ipynb\nDownload Python source code: 08-result_on_path_of_coordinates.py\nDownload zipped: 08-result_on_path_of_coordinates.zip\nGallery generated by Sphinx-Gallery\nPlot result\nDownload Jupyter notebook: 08-result_on_path_of_coordinates.ipynb\nDownload Python source code: 08-result_on_path_of_coordinates.py\nDownload zipped: 08-result_on_path_of_coordinates.zip"
    },
    {
        "objectID": "getting_started/demo",
        "href": "getting_started/demo.html#brief-demo",
        "title": "Brief demo",
        "section": "Brief demo",
        "text": "This brief demo shows how to load an Ansys Mechanical APDL (MAPDL) result file to extract\nand postprocess results. The code to use depends on which Ansys version you have installed.\nFor comprehensive examples of how to use PyDPF-Post, see gallery.\nBrief demo"
    },
    {
        "objectID": "getting_started/demo",
        "href": "getting_started/demo.html#2023-r1-and-later",
        "title": "Brief demo > 2023 R1 and later",
        "section": "2023 R1 and later",
        "text": "If Ansys 2023 R1 or later is installed, a DPF server automatically starts\nonce you start using PyDPF-Post. Use this code to load an MAPDL result file\nto extract and postprocess results:\n2023 R1 and later"
    },
    {
        "objectID": "getting_started/demo",
        "href": "getting_started/demo.html#2021-r1-through-2022-r2",
        "title": "Brief demo > 2021 R1 through 2022 R2",
        "section": "2021 R1 through 2022 R2",
        "text": "If an Ansys release of 2021 R1 through 2022 R2 is installed, use this code to\nstart the legacy PyDPF-Post tools and then load an MAPDL result file\nto extract and postprocess results:\n2021 R1 through 2022 R2"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_mass",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_mass.html#elemental_mass",
        "title": "elemental_mass",
        "section": "elemental_mass",
        "text": "Get result data for the elemental mass.\nelemental_mass"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_mass",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_mass.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_mass",
        "title": "elemental_mass > elemental_mass > elemental_mass",
        "section": "elemental_mass > elemental_mass",
        "text": "MecanicMisc.elemental_mass(**kwargs)\n\nGet result data for the elemental mass.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/compatibility",
        "href": "getting_started/compatibility.html#pydpf-library-compatibilities",
        "title": "PyDPF library compatibilities",
        "section": "PyDPF library compatibilities",
        "text": "Potential crashes can occur when using PyDPF-Post 0.2.2 or earlier with PyDPF-Core 0.5.2\nor later. For a given DPF server version, the following table indicates version compatibilities\nfor these two libraries.\nDPF server version\nPyDPF-Core version\nPyDPF-Post version\n10.0 (Ansys 2025 R2)\n0.13.4 or later\n0.9.3 or later\n9.1 (Ansys 2025 R1)\n0.13.4 or later\n0.9.0 or later\n9.0 (DPF Server 2025.1.pre0)\n0.13.0 or later\n0.9.0 or later\n8.2 (Ansys 2024 R2)\n0.12.1 or later\n0.8.0 or later\n8.1 (DPF Server 2024.2.pre1)\n0.12.0 or later\n0.8.0 or later\n8.0 (DPF Server 2024.2.pre0)\n0.11.0 or later\n0.7.0 or later\n7.1 (Ansys 2024 R1)\n0.10.1 or later\n0.6.0 or later\n7.0 (DPF Server 2024.1.pre0)\n0.10.0 or later\n0.6.0 or later\n6.2 (Ansys 2023 R2)\n0.9.0 or later\n0.5.0 or later\n6.1 (DPF Server 2023.2.pre1)\n0.8.0 or later\n0.4.0 or later\n6.0 (DPF Server 2023.2.pre0)\n0.7.0 or later\n0.3.0 or later\n5.0 (Ansys 2023 R1)\n0.6.0 or later\n0.3.0 or later\n4.0 (Ansys 2022 R2)\n0.5.0 or later\n0.3.0 or later\n3.0 (Ansys 2022 R1)\n0.4.0 to 0.9.0\n0.1.0 to 0.5.0\n2.0 (Ansys 2021 R2)\n0.3.0 to 0.9.0*\n0.1.0 to 0.5.0\n1.0 (Ansys 2021 R1)\n0.2.0 to 0.2.x\n0.1.0\n*Compatibility of DPF 2.0 with PyDPF-Core 0.5.0 to 0.9.0 is assumed but not certified.\nPyDPF library compatibilities\nPyDPF library compatibilities"
    },
    {
        "objectID": "user_guide/server_context",
        "href": "user_guide/server_context.html#change-the-server-context",
        "title": "Change the server context",
        "section": "Change the server context",
        "text": "When using a DPF server version later than Ansys 2023 R1, the DPF server context controls Ansys license\ninteractions.\nWhen the Premium DPF server context is active, underlying operations check if a valid\nAnsys license exists and are allowed to check out this license if needed. This means that all DPF\nfeatures are available, but a license may be checked out.\nWhen the Entry DPF server context is active, underlying operations check if a valid Ansys\nlicense exists but are not allowed to check out any license. This means that operations that require\nthe license be checked out are not available and raise an error.\nBy default, using PyDPF-Post starts a DPF server with the Premium context active.\nFor more information, search the PyDPF-Core documentation\nfor  Premium and Entry.\nChange the server context"
    },
    {
        "objectID": "user_guide/server_context",
        "href": "user_guide/server_context.html#change-the-default-server-context",
        "title": "Change the server context > Change the default server context",
        "section": "Change the default server context",
        "text": "The default context for the DPF server is Premium. You can change the context using\nthe ANSYS_DPF_SERVER_CONTEXT environment variable. For more information, see\nServerContext in\nthe PyDPF-Core API documentation.\nYou can also change the DPF server context with this code:\nChange the default server context\nANSYS_DPF_SERVER_CONTEXT"
    },
    {
        "objectID": "user_guide/server_context",
        "href": "user_guide/server_context.html#release-history",
        "title": "Change the server context > Release history",
        "section": "Release history",
        "text": "The Entry DPF server context is available in DPF Server version 6.0\n(Ansys 2023 R2) and later.\nWith a DPF Server version earlier than 6.0 (Ansys 2023 R1 and earlier),\nPremium is the default context. All operations are available,\ndepending only on their release dates.\nRelease history"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_force.html#nodal_force",
        "title": "nodal_force",
        "section": "nodal_force",
        "text": "Get result data for the nodal force.\nnodal_force"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_force.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_force",
        "title": "nodal_force > nodal_force > nodal_force",
        "section": "nodal_force > nodal_force",
        "text": "MecanicMisc.nodal_force(**kwargs)\n\nGet result data for the nodal force.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.zz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.zz.html#zz",
        "title": "zz",
        "section": "zz",
        "text": "Result data for the ZZ component of the tensor.\nzz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.zz",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.zz.html#ansys.dpf.post.strain.ElasticStrain.zz",
        "title": "zz > zz > zz",
        "section": "zz > zz",
        "text": "property ElasticStrain.zz\n\nResult data for the ZZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#postprocess-a-fluid-simulation",
        "title": "Postprocess a fluid simulation",
        "section": "Postprocess a fluid simulation",
        "text": "This example shows how to load a fluid simulation, explore the model and its available zones,\nspecies, and phases, and then extract a result.\nThis example requires DPF 7.0 (2024.1.pre0) or later.\nFor more information, see compatibility.\nPostprocess a fluid simulation"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#perform-required-imports",
        "title": "Postprocess a fluid simulation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#load-the-fluid-analysis-result",
        "title": "Postprocess a fluid simulation > Load the fluid analysis result",
        "section": "Load the fluid analysis result",
        "text": "Load the fluid analysis result"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#explore-available-metadata",
        "title": "Postprocess a fluid simulation > Explore available metadata",
        "section": "Explore available metadata",
        "text": "Check the available cell and face zones.\nThe mesh metadata is available separately from the mesh\nas accessing the mesh means loading it.\nUse the mesh_info property to explore the mesh structure to define queries.\nExplore available metadata\nmesh_info"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#check-available-species",
        "title": "Postprocess a fluid simulation > Check available species",
        "section": "Check available species",
        "text": "Check available species"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#check-available-phases",
        "title": "Postprocess a fluid simulation > Check available phases",
        "section": "Check available phases",
        "text": "Check available phases"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#check-metadata-on-available-results",
        "title": "Postprocess a fluid simulation > Check metadata on available results",
        "section": "Check metadata on available results",
        "text": "Check metadata on available results"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#extract-a-result",
        "title": "Postprocess a fluid simulation > Extract a result",
        "section": "Extract a result",
        "text": "Print a specific result to get more information on available qualifiers\n(such as zones and phases).\nExtract a result"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#extract-this-result-as-a-dataframe",
        "title": "Postprocess a fluid simulation > Extract this result as a dataframe",
        "section": "Extract this result as a dataframe",
        "text": "Extract this result as a dataframe"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#plot-dataframe",
        "title": "Postprocess a fluid simulation > Plot dataframe",
        "section": "Plot dataframe",
        "text": "Plot dataframe"
    },
    {
        "objectID": "examples/00-Different-analysis-types/05-fluid-simulation",
        "href": "examples/00-Different-analysis-types/05-fluid-simulation.html#use-qualifiers-for-result-to-filter-or-separate-data",
        "title": "Postprocess a fluid simulation > Use qualifiers for result to filter or separate data",
        "section": "Use qualifiers for result to filter or separate data",
        "text": "You can use available qualifiers for the result in the extraction request\nto filter or separate data.\nThis code outputs a different column for each available zone for the result.\nThe result extraction request can also contain selection arguments.\nBecause the enthalpy result is being defined on cells, you can request data\nfor specific cells using their IDs:\nFor an example showing how to create and manipulate a DPF dataframe,\nsee ref_dataframe_example.\nTotal running time of the script: (0 minutes 3.281 seconds)\nDownload Jupyter notebook: 05-fluid-simulation.ipynb\nDownload Python source code: 05-fluid-simulation.py\nDownload zipped: 05-fluid-simulation.zip\nGallery generated by Sphinx-Gallery\nUse qualifiers for result to filter or separate data\nDownload Jupyter notebook: 05-fluid-simulation.ipynb\nDownload Python source code: 05-fluid-simulation.py\nDownload zipped: 05-fluid-simulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.norm",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.norm.html#norm",
        "title": "norm",
        "section": "norm",
        "text": "Result data for the norm of the vector.\nnorm"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.norm",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.norm.html#ansys.dpf.post.displacement.Displacement.norm",
        "title": "norm > norm > norm",
        "section": "norm > norm",
        "text": "property Displacement.norm\n\nResult data for the norm of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_plastic_strain.html#elemental_nodal_accu_eqv_plastic_strain",
        "title": "elemental_nodal_accu_eqv_plastic_strain",
        "section": "elemental_nodal_accu_eqv_plastic_strain",
        "text": "Get result data for the elemental nodal accurate eqvivalent plastic strain.\nelemental_nodal_accu_eqv_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_plastic_strain",
        "title": "elemental_nodal_accu_eqv_plastic_strain > elemental_nodal_accu_eqv_plastic_strain > elemental_nodal_accu_eqv_plastic_strain",
        "section": "elemental_nodal_accu_eqv_plastic_strain > elemental_nodal_accu_eqv_plastic_strain",
        "text": "MecanicMisc.elemental_nodal_accu_eqv_plastic_strain(**kwargs)\n\nGet result data for the elemental nodal accurate eqvivalent plastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_3.html#principal_3",
        "title": "principal_3",
        "section": "principal_3",
        "text": "Results data for the third principal component of the tensor.\nprincipal_3"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_3.html#ansys.dpf.post.strain.PlasticStrain.principal_3",
        "title": "principal_3 > principal_3 > principal_3",
        "section": "principal_3 > principal_3",
        "text": "property PlasticStrain.principal_3\n\nResults data for the third principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_friction_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_friction_stress.html#elemental_contact_friction_stress",
        "title": "elemental_contact_friction_stress",
        "section": "elemental_contact_friction_stress",
        "text": "Get result data for the elemental contact friction stress.\nelemental_contact_friction_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_friction_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_friction_stress.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_friction_stress",
        "title": "elemental_contact_friction_stress > elemental_contact_friction_stress > elemental_contact_friction_stress",
        "section": "elemental_contact_friction_stress > elemental_contact_friction_stress",
        "text": "MecanicMisc.elemental_contact_friction_stress(**kwargs)\n\nGet result data for the elemental contact friction stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#extract-results-on-named-selections-modal-simulation",
        "title": "Extract results on named selections (modal simulation)",
        "section": "Extract results on named selections (modal simulation)",
        "text": "This example shows how to process a modal simulation to extract results\nlike displacement and stress. It selects subparts of the results by scoping\non specific nodes and also shows elements.\nExtract results on named selections (modal simulation)"
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#perform-required-imports",
        "title": "Extract results on named selections (modal simulation) > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#get-simulation-object",
        "title": "Extract results on named selections (modal simulation) > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#get-available-named-selections",
        "title": "Extract results on named selections (modal simulation) > Get available named selections",
        "section": "Get available named selections",
        "text": "Get available named selections"
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#extract-displacements-on-named-selections",
        "title": "Extract results on named selections (modal simulation) > Extract displacements on named selections",
        "section": "Extract displacements on named selections",
        "text": "Extract displacements on named selections"
    },
    {
        "objectID": "examples/01-Detailed-Examples/01-named-selections-modal-simulation",
        "href": "examples/01-Detailed-Examples/01-named-selections-modal-simulation.html#extract-stress-and-averaged-stress-on-named-selections",
        "title": "Extract results on named selections (modal simulation) > Extract stress and averaged stress on named selections",
        "section": "Extract stress and averaged stress on named selections",
        "text": "Total running time of the script: (0 minutes 2.923 seconds)\nDownload Jupyter notebook: 01-named-selections-modal-simulation.ipynb\nDownload Python source code: 01-named-selections-modal-simulation.py\nDownload zipped: 01-named-selections-modal-simulation.zip\nGallery generated by Sphinx-Gallery\nExtract stress and averaged stress on named selections\nDownload Jupyter notebook: 01-named-selections-modal-simulation.ipynb\nDownload Python source code: 01-named-selections-modal-simulation.py\nDownload zipped: 01-named-selections-modal-simulation.zip"
    },
    {
        "objectID": "examples/01-Detailed-Examples/index",
        "href": "examples/01-Detailed-Examples/index.html#pydpf-post-features",
        "title": "PyDPF-Post features",
        "section": "PyDPF-Post features",
        "text": "These examples show how to use PyDPF-Post features.\nsphx_glr_examples_01-Detailed-Examples_00-dataframe-manipulation.py\nsphx_glr_examples_01-Detailed-Examples_01-named-selections-modal-simulation.py\nsphx_glr_examples_01-Detailed-Examples_02-modal-extract-sub-results.py\nsphx_glr_examples_01-Detailed-Examples_03-explore-result-data-harmonic.py\nsphx_glr_examples_01-Detailed-Examples_04-invariants.py\nsphx_glr_examples_01-Detailed-Examples_05-export_data.py\nsphx_glr_examples_01-Detailed-Examples_05-mesh-exploration.py\nsphx_glr_examples_01-Detailed-Examples_06-compute-min-max.py\nPyDPF-Post features"
    },
    {
        "objectID": "examples/01-Detailed-Examples/sg_execution_times",
        "href": "examples/01-Detailed-Examples/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:26.390 total execution time for 8 files from examples/01-Detailed-Examples:\nExample\nTime\nMem (MB)\nsphx_glr_examples_01-Detailed-Examples_05-mesh-exploration.py (05-mesh-exploration.py)\n00:13.968\n0.0\nsphx_glr_examples_01-Detailed-Examples_04-invariants.py (04-invariants.py)\n00:04.089\n0.0\nsphx_glr_examples_01-Detailed-Examples_01-named-selections-modal-simulation.py (01-named-selections-modal-simulation.py)\n00:02.923\n0.0\nsphx_glr_examples_01-Detailed-Examples_00-dataframe-manipulation.py (00-dataframe-manipulation.py)\n00:02.281\n0.0\nsphx_glr_examples_01-Detailed-Examples_02-modal-extract-sub-results.py (02-modal-extract-sub-results.py)\n00:01.364\n0.0\nsphx_glr_examples_01-Detailed-Examples_03-explore-result-data-harmonic.py (03-explore-result-data-harmonic.py)\n00:00.997\n0.0\nsphx_glr_examples_01-Detailed-Examples_05-export_data.py (05-export_data.py)\n00:00.493\n0.0\nsphx_glr_examples_01-Detailed-Examples_06-compute-min-max.py (06-compute-min-max.py)\n00:00.276\n0.0\nComputation times\n05-mesh-exploration.py\n04-invariants.py\n01-named-selections-modal-simulation.py\n00-dataframe-manipulation.py\n02-modal-extract-sub-results.py\n03-explore-result-data-harmonic.py\n05-export_data.py\n06-compute-min-max.py"
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#extract-stress-and-strain-invariants-static-simulation",
        "title": "Extract stress and strain invariants (static simulation)",
        "section": "Extract stress and strain invariants (static simulation)",
        "text": "This example uses a static simulation to show how to extract a tensor’s\nstress and strain invariants.\nExtract stress and strain invariants (static simulation)"
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#perform-required-imports",
        "title": "Extract stress and strain invariants (static simulation) > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#get-simulation-object",
        "title": "Extract stress and strain invariants (static simulation) > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#extract-elemental-nodal-stress-and-strain",
        "title": "Extract stress and strain invariants (static simulation) > Extract elemental nodal stress and strain",
        "section": "Extract elemental nodal stress and strain",
        "text": "Extract elemental nodal stress and strain"
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#compute-principal-invariant-averaged-and-unaveraged-on-stress-and-strain",
        "title": "Extract stress and strain invariants (static simulation) > Compute principal invariant averaged and unaveraged on stress and strain",
        "section": "Compute principal invariant averaged and unaveraged on stress and strain",
        "text": "Compute principal invariant averaged and unaveraged on stress and strain"
    },
    {
        "objectID": "examples/01-Detailed-Examples/04-invariants",
        "href": "examples/01-Detailed-Examples/04-invariants.html#compute-von-mises-eqvivalent-averaged-and-unaveraged-on-stress-and-strain",
        "title": "Extract stress and strain invariants (static simulation) > Compute von Mises eqvivalent averaged and unaveraged on stress and strain",
        "section": "Compute von Mises eqvivalent averaged and unaveraged on stress and strain",
        "text": "Total running time of the script: (0 minutes 4.089 seconds)\nDownload Jupyter notebook: 04-invariants.ipynb\nDownload Python source code: 04-invariants.py\nDownload zipped: 04-invariants.zip\nGallery generated by Sphinx-Gallery\nCompute von Mises eqvivalent averaged and unaveraged on stress and strain\nDownload Jupyter notebook: 04-invariants.ipynb\nDownload Python source code: 04-invariants.py\nDownload zipped: 04-invariants.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.von_mises_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.von_mises_stress.html#von_mises_stress",
        "title": "von_mises_stress",
        "section": "von_mises_stress",
        "text": "Get result data for the nodal von Mises stress.\nThe default location of this result is nodal.  Use the location keyword\n\"ElementalNodal\" to get an elemental nodal result or \"Elemental\"\nto get an elemental result.\nvon_mises_stress\n\"ElementalNodal\"\n\"Elemental\""
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.von_mises_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.von_mises_stress.html#ansys.dpf.post.misc_results.MecanicMisc.von_mises_stress",
        "title": "von_mises_stress > von_mises_stress > von_mises_stress",
        "section": "von_mises_stress > von_mises_stress",
        "text": "MecanicMisc.von_mises_stress(**kwargs)\n\nGet result data for the nodal von Mises stress.\n\nThe default location of this result is nodal.  Use the location keyword\n\"ElementalNodal\" to get an elemental nodal result or \"Elemental\"\nto get an elemental result.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/key_features",
        "href": "getting_started/key_features.html#pydpf-post-key-features",
        "title": "PyDPF-Post key features",
        "section": "PyDPF-Post key features",
        "text": "PyDPF-Post key features"
    },
    {
        "objectID": "getting_started/key_features",
        "href": "getting_started/key_features.html#computational-efficiency",
        "title": "PyDPF-Post key features > Computational efficiency",
        "section": "Computational efficiency",
        "text": "PyDPF-Post is based on DPF, whose data framework localizes loading and\npostprocessing on the DPF server, enabling rapid postprocessing workflows\nbecause they are written in C and FORTRAN. Because PyDPF-Post presents results\nin a Pythonic manner, you can rapidly develop simple or complex postprocessing\nscripts.\nComputational efficiency"
    },
    {
        "objectID": "getting_started/key_features",
        "href": "getting_started/key_features.html#easy-to-use",
        "title": "PyDPF-Post key features > Easy to use",
        "section": "Easy to use",
        "text": "The PyDPF-Post API automates the use of chained DPF operators to make postprocessing\neasier. By using operators to compute results, you can build your own custom,\nlow-level scripts to enable fast postprocessing of potentially multi-gigabyte models\nwith PyDPF-Core.\nEasy to use"
    },
    {
        "objectID": "getting_started/key_features",
        "href": "getting_started/key_features.html#ansys-solver-result-files-support",
        "title": "PyDPF-Post key features > Ansys solver result files support",
        "section": "Ansys solver result files support",
        "text": "DPF supports these Ansys solver result files:\nMechanical APDL (RST, MODE, RFRQ, and RDSP)\nLS-DYNA (D3PLOT and BINOUT)\nFluent (CAS/DAT.H5 and FLPRJ)\nCFX (CAS/DAT.CFF, FLPRJ, and RES)\nFor more comprehensive information on file support for Ansys solvers, see the\nmain page\nin the PyDPF-Core documentation.\nAnsys solver result files support"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.yy",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.yy.html#yy",
        "title": "yy",
        "section": "yy",
        "text": "Result data for the YY component of the tensor.\nyy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.yy",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.yy.html#ansys.dpf.post.stress.Stress.yy",
        "title": "yy > yy > yy",
        "section": "yy > yy",
        "text": "property Stress.yy\n\nResult data for the YY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_acceleration",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_acceleration.html#nodal_acceleration",
        "title": "nodal_acceleration",
        "section": "nodal_acceleration",
        "text": "Get result data for the nodal acceleration.\nnodal_acceleration"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_acceleration",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_acceleration.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_acceleration",
        "title": "nodal_acceleration > nodal_acceleration > nodal_acceleration",
        "section": "nodal_acceleration > nodal_acceleration",
        "text": "MecanicMisc.nodal_acceleration(**kwargs)\n\nGet result data for the nodal acceleration.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_plastic_strain.html#elemental_accu_eqv_plastic_strain",
        "title": "elemental_accu_eqv_plastic_strain",
        "section": "elemental_accu_eqv_plastic_strain",
        "text": "Get result data for the elemental accurate eqvivalent plastic strain.\nelemental_accu_eqv_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_accu_eqv_plastic_strain",
        "title": "elemental_accu_eqv_plastic_strain > elemental_accu_eqv_plastic_strain > elemental_accu_eqv_plastic_strain",
        "section": "elemental_accu_eqv_plastic_strain > elemental_accu_eqv_plastic_strain",
        "text": "MecanicMisc.elemental_accu_eqv_plastic_strain(**kwargs)\n\nGet result data for the elemental accurate eqvivalent plastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.y",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.y.html#y",
        "title": "y",
        "section": "y",
        "text": "Result data for the Y component of the vector.\ny"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.y",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.y.html#ansys.dpf.post.displacement.Displacement.y",
        "title": "y > y > y",
        "section": "y > y",
        "text": "property Displacement.y\n\nResult data for the Y component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_hydrostatic_pressure.html#elemental_hydrostatic_pressure",
        "title": "elemental_hydrostatic_pressure",
        "section": "elemental_hydrostatic_pressure",
        "text": "Get result data for the elemental hydrostatic pressure.\nelemental_hydrostatic_pressure"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_hydrostatic_pressure.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_hydrostatic_pressure",
        "title": "elemental_hydrostatic_pressure > elemental_hydrostatic_pressure > elemental_hydrostatic_pressure",
        "section": "elemental_hydrostatic_pressure > elemental_hydrostatic_pressure",
        "text": "MecanicMisc.elemental_hydrostatic_pressure(**kwargs)\n\nGet result data for the elemental hydrostatic pressure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_moment",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_moment.html#nodal_moment",
        "title": "nodal_moment",
        "section": "nodal_moment",
        "text": "Get result data for the nodal moment.\nnodal_moment"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_moment",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_moment.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_moment",
        "title": "nodal_moment > nodal_moment > nodal_moment",
        "section": "nodal_moment > nodal_moment",
        "text": "MecanicMisc.nodal_moment(**kwargs)\n\nGet result data for the nodal moment.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_co_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_co_energy.html#elemental_co_energy",
        "title": "elemental_co_energy",
        "section": "elemental_co_energy",
        "text": "Get result data for the elemental co energy.\nelemental_co_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_co_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_co_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_co_energy",
        "title": "elemental_co_energy > elemental_co_energy > elemental_co_energy",
        "section": "elemental_co_energy > elemental_co_energy",
        "text": "MecanicMisc.elemental_co_energy(**kwargs)\n\nGet result data for the elemental co energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.html#electricpotential",
        "title": "ElectricPotential",
        "section": "ElectricPotential",
        "text": "Defines the temperature object for a thermal/electric analysis.\nElectricPotential.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nElectricPotential.scalar\nResult data for the scalar values.\nElectricPotential\nElectricPotential.has_complex_frequencies\nElectricPotential.scalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricPotential.html#ansys.dpf.post.electric_results.ElectricPotential",
        "title": "ElectricPotential > ElectricPotential > ElectricPotential",
        "section": "ElectricPotential > ElectricPotential",
        "text": "class ansys.dpf.post.electric_results.ElectricPotential(**kwargs)\n\nDefines the temperature object for a thermal/electric analysis.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElectricPotential.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElectricPotential.scalar\n\nResult data for the scalar values.\n\n"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#reduce-cyclic-model-size-by-using-the-mesh-external-layer-for-result-and-mesh-extraction",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction",
        "section": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction",
        "text": "This example shows postprocessing on a mesh external layer for a cyclic modal analysis.\nThe external layer is the layer of solid elements with at least one facet facing the outside of\nthe geometry.\nThis feature, available for all types of mechanical simulation supporting cyclic\nor cyclic multi-stage models, allows you to reduce the size\nof both the mesh and the extracted data to improve processing performance.\nBecause larger stresses and strains are usually located on the skin of a model,\ncomputing results on the external layer gives equivalent maximum values in most cases.\nReduce cyclic model size by using the mesh external layer for result and mesh extraction"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#perform-required-imports",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#get-simulation-object",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#extract-displacement-data",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Extract displacement data",
        "section": "Extract displacement data",
        "text": "Extract displacement data on the external layer.\nExtract displacement data"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#select-sectors-for-expansion",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Select sectors for expansion",
        "section": "Select sectors for expansion",
        "text": "Extract displacement data on the external layer\nfor a cyclic expansion on a selected number of sectors.\nSelect sectors for expansion"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#extract-stress-and-strain-data",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Extract stress and strain data",
        "section": "Extract stress and strain data",
        "text": "Extract stress and elastic strain data on the external layer.\nYou can easily compute averages and invariants on the external layer because the\nconnectivity of the kept elements remains unchanged.\nExtract stress and strain data"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer",
        "href": "examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.html#get-stress-results-on-external-layer-of-first-sector-with-a-cyclic-phase",
        "title": "Reduce cyclic model size by using the mesh external layer for result and mesh extraction > Get stress results on external layer of first sector with a cyclic phase",
        "section": "Get stress results on external layer of first sector with a cyclic phase",
        "text": "Total running time of the script: (0 minutes 4.694 seconds)\nDownload Jupyter notebook: 03-cyclic-mesh-external-layer.ipynb\nDownload Python source code: 03-cyclic-mesh-external-layer.py\nDownload zipped: 03-cyclic-mesh-external-layer.zip\nGallery generated by Sphinx-Gallery\nGet stress results on external layer of first sector with a cyclic phase\nDownload Jupyter notebook: 03-cyclic-mesh-external-layer.ipynb\nDownload Python source code: 03-cyclic-mesh-external-layer.py\nDownload zipped: 03-cyclic-mesh-external-layer.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.html#resultdata",
        "title": "ResultData",
        "section": "ResultData",
        "text": "Provides the result data for a DPF Result object.\nThis class is created using the ansys.dpf.core.Result class.\noperator_name (str)\ndata_sources\nmodel\nelem_average (bool)\nlocation (str, optional) – The default is None.\nelement_scoping (optional) – The default is None.\nnode_scoping (optional) – The default is None.\nnamed_selection (optional) – The default is None.\ntime (optional) – The default is None.\ngrouping (optional) – The default is None.\nphase (optional) – The default is None.\nsubresult (optional) – The default is None.\nmapdl_grouping (optional) – The default is None.\nset (optional) – The default is None.\npath (optional) – The default is None.\ntime_scoping (optional) – The default is None.\nparameters (To see all)\npost.print_available_keywords() (you can use the)\nmethod.\nResultData.get_all_label_spaces()\nGet all label spaces contained in a result.\nResultData.get_data_at_field([field_index])\nGet the data for the field with the specified index.\nResultData.get_max_data_at_field([field_index])\nGet the maximum values field data for the field with the specified index.\nResultData.get_min_data_at_field([field_index])\nGet the minimum values field data for the field with the specified index.\nResultData.get_scoping_at_field([field_index])\nGet the scoping of the result for the field with the specified index.\nResultData.plot_contour([display_option, ...])\nPlot the contour result on its mesh support.\nResultData.max\nMaximum value field.\nResultData.max_data\nMaximum value field data.\nResultData.min\nMinimum values field.\nResultData.min_data\nMinimum values field data.\nResultData.num_fields\nNumber of fields contained in the result.\nResultData.result_fields_container\nResult fields container.\nResultData\nResult\nansys.dpf.core.Result\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nResultData.get_all_label_spaces\nResultData.get_data_at_field\nResultData.get_max_data_at_field\nResultData.get_min_data_at_field\nResultData.get_scoping_at_field\nResultData.plot_contour\nResultData.max\nResultData.max_data\nResultData.min\nResultData.min_data\nResultData.num_fields\nResultData.result_fields_container"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.html#ansys.dpf.post.result_data.ResultData",
        "title": "ResultData > ResultData > ResultData",
        "section": "ResultData > ResultData",
        "text": "class ansys.dpf.post.result_data.ResultData(operator_name: str, data_sources, model, elem_average: bool, location: str | None = None, element_scoping=None, node_scoping=None, named_selection=None, time=None, grouping=None, phase=None, subresult=None, mapdl_grouping=None, set=None, path=None, time_scoping=None)\n\nProvides the result data for a DPF Result object.\n\nThis class is created using the ansys.dpf.core.Result class.\n\nParameters\n\noperator_name (str)\n\ndata_sources\n\nmodel\n\nelem_average (bool)\n\nlocation (str, optional) – The default is None.\n\nelement_scoping (optional) – The default is None.\n\nnode_scoping (optional) – The default is None.\n\nnamed_selection (optional) – The default is None.\n\ntime (optional) – The default is None.\n\ngrouping (optional) – The default is None.\n\nphase (optional) – The default is None.\n\nsubresult (optional) – The default is None.\n\nmapdl_grouping (optional) – The default is None.\n\nset (optional) – The default is None.\n\npath (optional) – The default is None.\n\ntime_scoping (optional) – The default is None.\n\nparameters (To see all)\n\npost.print_available_keywords() (you can use the)\n\nmethod.\n\nExamples\n\n>>> from ansys.dpf import post\n>>> from ansys.dpf.post import examples\n>>> solution = post.load_solution(examples.download_all_kinds_of_complexity())\n>>> disp = solution.displacement()\n>>> disp_on_nodes = solution.displacement(node_scoping = [1, 23])\n>>> disp_on_named_selection = solution.displacement(named_selection=\"SELECTION\")\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nResultData.get_all_label_spaces()\n\nGet all label spaces contained in a result.\n\nResultData.get_data_at_field([field_index])\n\nGet the data for the field with the specified index.\n\nResultData.get_max_data_at_field([field_index])\n\nGet the maximum values field data for the field with the specified index.\n\nResultData.get_min_data_at_field([field_index])\n\nGet the minimum values field data for the field with the specified index.\n\nResultData.get_scoping_at_field([field_index])\n\nGet the scoping of the result for the field with the specified index.\n\nResultData.plot_contour([display_option, ...])\n\nPlot the contour result on its mesh support.\n\n\n\nAttributes\n\n\n\n\n\n\n\nResultData.max\n\nMaximum value field.\n\nResultData.max_data\n\nMaximum value field data.\n\nResultData.min\n\nMinimum values field.\n\nResultData.min_data\n\nMinimum values field data.\n\nResultData.num_fields\n\nNumber of fields contained in the result.\n\nResultData.result_fields_container\n\nResult fields container.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.plot_contour",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.plot_contour.html#plot_contour",
        "title": "plot_contour",
        "section": "plot_contour",
        "text": "Plot the contour result on its mesh support.\nThe obtained figure depends on the support, which can be a\nmeshed region or a time frequency support. For a transient analysis,\nthis method plots the last result if no time scoping is specified.\nTo return a string containing all label spaces, use the\nself.get_all_label_spaces() method.\ndisplay_option (str, default: 'time') – Name of the label to display.\noption_id (int, default: 1) – Label ID to display.\n**kwargs – Additional keyword arguments for the plotter. For keyword\narguments, see help(pyvista.plot).\nPlot a result at time step number 1.\nObtain labels.\nplot_contour\nself.get_all_label_spaces()\nstr\n'time'\nint\n1\nhelp(pyvista.plot)"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.plot_contour",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.plot_contour.html#ansys.dpf.post.result_data.ResultData.plot_contour",
        "title": "plot_contour > plot_contour > plot_contour",
        "section": "plot_contour > plot_contour",
        "text": "ResultData.plot_contour(display_option: str = 'time', option_id: int = 1, **kwargs)\n\nPlot the contour result on its mesh support.\n\nThe obtained figure depends on the support, which can be a\nmeshed region or a time frequency support. For a transient analysis,\nthis method plots the last result if no time scoping is specified.\nTo return a string containing all label spaces, use the\nself.get_all_label_spaces() method.\n\nParameters\n\ndisplay_option (str, default: 'time') – Name of the label to display.\n\noption_id (int, default: 1) – Label ID to display.\n\n**kwargs – Additional keyword arguments for the plotter. For keyword\narguments, see help(pyvista.plot).\n\nExamples\n\nPlot a result at time step number 1.\n\n>>> from ansys.dpf import post\n>>> from ansys.dpf.post import examples\n>>> solution = post.load_solution(examples.download_all_kinds_of_complexity())\n>>> stress = solution.stress(location=post.locations.nodal)\n>>> sx = stress.xx\n>>> pl = sx.plot_contour(\"time\", [1], off_screen=True)  # doctest: +SKIP\n\nObtain labels.\n\n>>> sx.get_all_label_spaces() # doctest: +ELLIPSIS\n[{'...': ..., '...': ...}, {'...': ..., '...': ...}]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/03-Cyclic-Examples/sg_execution_times",
        "href": "examples/03-Cyclic-Examples/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:19.816 total execution time for 5 files from examples/03-Cyclic-Examples:\nExample\nTime\nMem (MB)\nsphx_glr_examples_03-Cyclic-Examples_05-modal_cyclic_no_expansion.py (05-modal_cyclic_no_expansion.py)\n00:06.296\n0.0\nsphx_glr_examples_03-Cyclic-Examples_03-cyclic-mesh-external-layer.py (03-cyclic-mesh-external-layer.py)\n00:04.694\n0.0\nsphx_glr_examples_03-Cyclic-Examples_02-multi-stage-cyclic-results.py (02-multi-stage-cyclic-results.py)\n00:03.436\n0.0\nsphx_glr_examples_03-Cyclic-Examples_04-cyclic-mesh-skin.py (04-cyclic-mesh-skin.py)\n00:03.234\n0.0\nsphx_glr_examples_03-Cyclic-Examples_01-cyclic-results.py (01-cyclic-results.py)\n00:02.155\n0.0\nComputation times\n05-modal_cyclic_no_expansion.py\n03-cyclic-mesh-external-layer.py\n02-multi-stage-cyclic-results.py\n04-cyclic-mesh-skin.py\n01-cyclic-results.py"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min.html#min",
        "title": "min",
        "section": "min",
        "text": "Minimum values field.\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\nmin\nmin_max_fc"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.min.html#ansys.dpf.post.result_data.ResultData.min",
        "title": "min > min > min",
        "section": "min > min",
        "text": "property ResultData.min\n\nMinimum values field.\n\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 0).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max_data",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max_data.html#max_data",
        "title": "max_data",
        "section": "max_data",
        "text": "Maximum value field data.\nChains the result operator to the min_max_fc operator and returns the\nresult (output from pin 1).\nmax_data\nmin_max_fc"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max_data",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max_data.html#ansys.dpf.post.result_data.ResultData.max_data",
        "title": "max_data > max_data > max_data",
        "section": "max_data > max_data",
        "text": "property ResultData.max_data\n\nMaximum value field data.\n\nChains the result operator to the min_max_fc operator and returns the\nresult (output from pin 1).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.norm",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.norm.html#norm",
        "title": "norm",
        "section": "norm",
        "text": "Result data for the norm of the vector.\nnorm"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.norm",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.norm.html#ansys.dpf.post.temperature.HeatFlux.norm",
        "title": "norm > norm > norm",
        "section": "norm > norm",
        "text": "property HeatFlux.norm\n\nResult data for the norm of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/plotting",
        "href": "user_guide/plotting.html#plot-results",
        "title": "Plot results",
        "section": "Plot results",
        "text": "PyDPF-Post provides functionality for plotting results. Here is a summary of\nthe steps:\nLoad the Simulation object\nwith the result file.\nRequest a DataFrame object to\nobtain the scalar field of interest.\nUse the plotting methods of the DataFrame object\nto render it.\nSome plotting examples follow.\nPlot results\nSimulation\nDataFrame\nDataFrame"
    },
    {
        "objectID": "user_guide/plotting",
        "href": "user_guide/plotting.html#total-deformation",
        "title": "Plot results > Total deformation",
        "section": "Total deformation",
        "text": "This code shows how to plot the total deformation (norm of the displacement vector field):\nTotal deformation"
    },
    {
        "objectID": "user_guide/plotting",
        "href": "user_guide/plotting.html#normal-stresses",
        "title": "Plot results > Normal stresses",
        "section": "Normal stresses",
        "text": "Plotting of raw data at Gauss points is not available.\nHowever, you can plot data averaged at nodes or elements.\nThis code shows how to plot the nodal xx-component of stress:\nNormal stresses"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain.html#elemental_plastic_strain",
        "title": "elemental_plastic_strain",
        "section": "elemental_plastic_strain",
        "text": "Get result data for the elemental plastic strain.\nelemental_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_plastic_strain",
        "title": "elemental_plastic_strain > elemental_plastic_strain > elemental_plastic_strain",
        "section": "elemental_plastic_strain > elemental_plastic_strain",
        "text": "MecanicMisc.elemental_plastic_strain(**kwargs)\n\nGet result data for the elemental plastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_strains.html#elemental_thermal_strains",
        "title": "elemental_thermal_strains",
        "section": "elemental_thermal_strains",
        "text": "Get result data for the elemental thermal strains.\nelemental_thermal_strains"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_strains",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_strains.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_strains",
        "title": "elemental_thermal_strains > elemental_thermal_strains > elemental_thermal_strains",
        "section": "elemental_thermal_strains > elemental_thermal_strains",
        "text": "MecanicMisc.elemental_thermal_strains(**kwargs)\n\nGet result data for the elemental thermal strains.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_2.html#principal_2",
        "title": "principal_2",
        "section": "principal_2",
        "text": "Result data for the second principal component of the tensor.\nprincipal_2"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_2",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.principal_2.html#ansys.dpf.post.strain.PlasticStrain.principal_2",
        "title": "principal_2 > principal_2 > principal_2",
        "section": "principal_2 > principal_2",
        "text": "property PlasticStrain.principal_2\n\nResult data for the second principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_kinetic_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_kinetic_energy.html#elemental_kinetic_energy",
        "title": "elemental_kinetic_energy",
        "section": "elemental_kinetic_energy",
        "text": "Get result data for the elemental kinetic energy.\nelemental_kinetic_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_kinetic_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_kinetic_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_kinetic_energy",
        "title": "elemental_kinetic_energy > elemental_kinetic_energy > elemental_kinetic_energy",
        "section": "elemental_kinetic_energy > elemental_kinetic_energy",
        "text": "MecanicMisc.elemental_kinetic_energy(**kwargs)\n\nGet result data for the elemental kinetic energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#postprocess-a-result-file-for-a-static-analysis",
        "title": "Postprocess a result file for a static analysis",
        "section": "Postprocess a result file for a static analysis",
        "text": "This example shows how to use the legacy PyDPF-Post API to postprocess a result file\nfor a static analysis.\nPostprocess a result file for a static analysis"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#perform-required-imports",
        "title": "Postprocess a result file for a static analysis > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-solution-object",
        "title": "Postprocess a result file for a static analysis > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a result file for a static analysis\ncomputed in Ansys Mechanical.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-result-objects",
        "title": "Postprocess a result file for a static analysis > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-displacement-result",
        "title": "Postprocess a result file for a static analysis > Get displacement result",
        "section": "Get displacement result",
        "text": "Get displacement result"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-number-of-fields",
        "title": "Postprocess a result file for a static analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get number of fields"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-data-from-field",
        "title": "Postprocess a result file for a static analysis > Get data from field",
        "section": "Get data from field",
        "text": "Get data from field"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-maximum-data-value-over-all-fields",
        "title": "Postprocess a result file for a static analysis > Get maximum data value over all fields",
        "section": "Get maximum data value over all fields",
        "text": "Get maximum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess a result file for a static analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-maximum-data-value-over-targeted-field",
        "title": "Postprocess a result file for a static analysis > Get maximum data value over targeted field",
        "section": "Get maximum data value over targeted field",
        "text": "Get maximum data value over targeted field"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess a result file for a static analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-stress-result-for-a-tensor",
        "title": "Postprocess a result file for a static analysis > Get stress result for a tensor",
        "section": "Get stress result for a tensor",
        "text": "Get stress result for a tensor"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-number-of-fields",
        "title": "Postprocess a result file for a static analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get the number of shell and solid elements in distinct fields.\nGet number of fields"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-shell-field",
        "title": "Postprocess a result file for a static analysis > Get shell field",
        "section": "Get shell field",
        "text": "Get shell field"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-solid-field",
        "title": "Postprocess a result file for a static analysis > Get solid field",
        "section": "Get solid field",
        "text": "Get solid field"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#plot-contour",
        "title": "Postprocess a result file for a static analysis > Plot contour",
        "section": "Plot contour",
        "text": "Plot contour"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-elastic-strain-result",
        "title": "Postprocess a result file for a static analysis > Get elastic strain result",
        "section": "Get elastic strain result",
        "text": "Get elastic strain result"
    },
    {
        "objectID": "examples/05-Legacy/02-static-analysis",
        "href": "examples/05-Legacy/02-static-analysis.html#get-number-of-fields",
        "title": "Postprocess a result file for a static analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get the number of shell and solid elements in distinct fields.\nIf the result file contains results, use this method\nto get the elastic strain result.\nUse this method to get the temperature result.\nTotal running time of the script: (0 minutes 1.213 seconds)\nDownload Jupyter notebook: 02-static-analysis.ipynb\nDownload Python source code: 02-static-analysis.py\nDownload zipped: 02-static-analysis.zip\nGallery generated by Sphinx-Gallery\nGet number of fields\nDownload Jupyter notebook: 02-static-analysis.ipynb\nDownload Python source code: 02-static-analysis.py\nDownload zipped: 02-static-analysis.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_force.html#elemental_nodal_force",
        "title": "elemental_nodal_force",
        "section": "elemental_nodal_force",
        "text": "Get result data for the elemental nodal force.\nelemental_nodal_force"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_force.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_force",
        "title": "elemental_nodal_force > elemental_nodal_force > elemental_nodal_force",
        "section": "elemental_nodal_force > elemental_nodal_force",
        "text": "MecanicMisc.elemental_nodal_force(**kwargs)\n\nGet result data for the elemental nodal force.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.von_mises",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.von_mises.html#von_mises",
        "title": "von_mises",
        "section": "von_mises",
        "text": "Result data for the von Mises stress.\nvon_mises"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.von_mises",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.von_mises.html#ansys.dpf.post.stress.Stress.von_mises",
        "title": "von_mises > von_mises > von_mises",
        "section": "von_mises > von_mises",
        "text": "property Stress.von_mises\n\nResult data for the von Mises stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.get_result_info",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.get_result_info.html#get_result_info",
        "title": "get_result_info",
        "section": "get_result_info",
        "text": "Get result file information.\nget_result_info"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.get_result_info",
        "href": "api/_autosummary/ansys.dpf.post.dpf_solution.DpfSolution.get_result_info.html#ansys.dpf.post.dpf_solution.DpfSolution.get_result_info",
        "title": "get_result_info > get_result_info > get_result_info",
        "section": "get_result_info > get_result_info",
        "text": "DpfSolution.get_result_info()\n\nGet result file information.\n\nExamples\n\n>>> from ansys.dpf import post\n>>> from ansys.dpf.post import examples\n>>> solution = post.load_solution(examples.static_rst)\n>>> print(solution.get_result_info()) # doctest: +NORMALIZE_WHITESPACE +ELLIPSIS\nStatic analysis\nUnit system: MKS: m, kg, N, s, V, A, degC\nPhysics Type: ...\nAvailable results: ...\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature.scalar",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.scalar.html#scalar",
        "title": "scalar",
        "section": "scalar",
        "text": "Result data for the scalar values.\nscalar"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.Temperature.scalar",
        "href": "api/_autosummary/ansys.dpf.post.temperature.Temperature.scalar.html#ansys.dpf.post.temperature.Temperature.scalar",
        "title": "scalar > scalar > scalar",
        "section": "scalar > scalar",
        "text": "property Temperature.scalar\n\nResult data for the scalar values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.z",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.z.html#z",
        "title": "z",
        "section": "z",
        "text": "Result data for the Z component of the vector.\nz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.z",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.z.html#ansys.dpf.post.displacement.Displacement.z",
        "title": "z > z > z",
        "section": "z > z",
        "text": "property Displacement.z\n\nResult data for the Z component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#known-issues",
        "title": "Known issues",
        "section": "Known issues",
        "text": "This page gathers the known issues a user can experience for each version of DPF.\nKnown issues"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-dpf-server-2023-2-pre1",
        "title": "Known issues > ansys-dpf-server-2023-2-pre1",
        "section": "ansys-dpf-server-2023-2-pre1",
        "text": "ansys-dpf-server-2023-2-pre1"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-dpf-server-2023-2-pre0",
        "title": "Known issues > ansys-dpf-server-2023-2-pre0",
        "section": "ansys-dpf-server-2023-2-pre0",
        "text": "Pip install error with setuptools>=67.0.0.\nansys-dpf-server-2023-2-pre0\nsetuptools>=67.0.0"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-2023-r1",
        "title": "Known issues > Ansys 2023 R1",
        "section": "Ansys 2023 R1",
        "text": "Ansys 2023 R1"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-2022-r2",
        "title": "Known issues > Ansys 2022 R2",
        "section": "Ansys 2022 R2",
        "text": "Ansys 2022 R2"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-2022-r1",
        "title": "Known issues > Ansys 2022 R1",
        "section": "Ansys 2022 R1",
        "text": "Ansys 2022 R1"
    },
    {
        "objectID": "user_guide/known_issues_list",
        "href": "user_guide/known_issues_list.html#ansys-2021-r2",
        "title": "Known issues > Ansys 2021 R2",
        "section": "Ansys 2021 R2",
        "text": "Ansys 2021 R2"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_state_variable.html#elemental_nodal_plastic_state_variable",
        "title": "elemental_nodal_plastic_state_variable",
        "section": "elemental_nodal_plastic_state_variable",
        "text": "Get result data for the elemental nodal plastic state variable.\nelemental_nodal_plastic_state_variable"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_state_variable",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_state_variable.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_state_variable",
        "title": "elemental_nodal_plastic_state_variable > elemental_nodal_plastic_state_variable > elemental_nodal_plastic_state_variable",
        "section": "elemental_nodal_plastic_state_variable > elemental_nodal_plastic_state_variable",
        "text": "MecanicMisc.elemental_nodal_plastic_state_variable(**kwargs)\n\nGet result data for the elemental nodal plastic state variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.phase",
        "href": "api/ansys.dpf.post.phase.html#phase",
        "title": "Phase",
        "section": "Phase",
        "text": "In fluid simulations, a phase defines the physical state of a given species.\nPhase"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xx",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xx.html#xx",
        "title": "xx",
        "section": "xx",
        "text": "Result data for the XX component of the tensor.\nxx"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xx",
        "href": "api/_autosummary/ansys.dpf.post.strain.ElasticStrain.xx.html#ansys.dpf.post.strain.ElasticStrain.xx",
        "title": "xx > xx > xx",
        "section": "xx > xx",
        "text": "property ElasticStrain.xx\n\nResult data for the XX component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "index",
        "href": "index.html#pydpf-post-documentation-0101",
        "title": "PyDPF-Post documentation 0.10.1",
        "section": "PyDPF-Post documentation 0.10.1",
        "text": "PyDPF-Post, a component of the Ansys Data Processing Framework (DPF), provides a Python\ninterface for loading a simulation result file, extracting metadata and results,\nand then applying postprocessing operations.\nLearn how to install PyDPF-Post in user mode and quickly\nbegin using it.\nUnderstand key concepts for using PyDPF-Post.\nUnderstand how to use Python to interact programmatically with\nPyDPF-Post.\nExplore examples that show how to use PyDPF-Post to\nperform many different types of operations.\nLearn how to contribute to the PyDPF-Post codebase or documentation.\nPyDPF-Post documentation 0.10.1"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_eqv_stress_parameter.html#elemental_nodal_eqv_stress_parameter",
        "title": "elemental_nodal_eqv_stress_parameter",
        "section": "elemental_nodal_eqv_stress_parameter",
        "text": "Get result data for the elemental nodal equivalent stress parameter.\nelemental_nodal_eqv_stress_parameter"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_eqv_stress_parameter.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_eqv_stress_parameter",
        "title": "elemental_nodal_eqv_stress_parameter > elemental_nodal_eqv_stress_parameter > elemental_nodal_eqv_stress_parameter",
        "section": "elemental_nodal_eqv_stress_parameter > elemental_nodal_eqv_stress_parameter",
        "text": "MecanicMisc.elemental_nodal_eqv_stress_parameter(**kwargs)\n\nGet result data for the elemental nodal equivalent stress parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/accessing_file_metadata",
        "href": "user_guide/accessing_file_metadata.html#browse-result-file-metadata",
        "title": "Browse result file metadata",
        "section": "Browse result file metadata",
        "text": "After a result file is loaded, you can browse all metadata or only mesh metadata.\nBrowse result file metadata"
    },
    {
        "objectID": "user_guide/accessing_file_metadata",
        "href": "user_guide/accessing_file_metadata.html#browse-all-metadata",
        "title": "Browse result file metadata > Browse all metadata",
        "section": "Browse all metadata",
        "text": "This code shows how to instantiate the Simulation object and then\nbrowse all metadata for a loaded simulation:\nPyDPF-Post supports four different analysis types for mechanical results:\nStatic analysis\nModal analysis\nHarmonic analysis\nTransient analysis\nThe legacy Solution object also supports thermal and electrical results.\nBrowse all metadata\nSimulation\nSolution"
    },
    {
        "objectID": "user_guide/accessing_file_metadata",
        "href": "user_guide/accessing_file_metadata.html#browse-only-mesh-metadata",
        "title": "Browse result file metadata > Browse only mesh metadata",
        "section": "Browse only mesh metadata",
        "text": "This code shows how to instantiate the Simulation object and then\nbrowse only the mesh metadata for a loaded simulation:\nBrowse only mesh metadata\nSimulation"
    },
    {
        "objectID": "api/result_data",
        "href": "api/result_data.html#resultdata-class",
        "title": "ResultData class",
        "section": "ResultData class",
        "text": "The ResultData class is\ncreated using the Result class. The Result\nclass provides access to the result values contained in the Result object.\nThis example shows how to access displacement result values:\nansys.dpf.post.result_data.ResultData(...[, ...])\nProvides the result data for a DPF Result object.\nResultData class\nResultData\nResultData\nResult\nResult\nResult\ndisplacement\nansys.dpf.post.result_data.ResultData\nResult"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xy",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xy.html#xy",
        "title": "xy",
        "section": "xy",
        "text": "Result data of for the XY component of the tensor.\nxy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xy",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xy.html#ansys.dpf.post.strain.PlasticStrain.xy",
        "title": "xy > xy > xy",
        "section": "xy > xy",
        "text": "property PlasticStrain.xy\n\nResult data of for the XY component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max.html#max",
        "title": "max",
        "section": "max",
        "text": "Maximum value field.\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 1).\nmax\nmin_max_fc"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.max.html#ansys.dpf.post.result_data.ResultData.max",
        "title": "max > max > max",
        "section": "max > max",
        "text": "property ResultData.max\n\nMaximum value field.\n\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 1).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_total_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_total_stress.html#elemental_contact_total_stress",
        "title": "elemental_contact_total_stress",
        "section": "elemental_contact_total_stress",
        "text": "Get result data for the elemental contact total stress.\nelemental_contact_total_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_total_stress",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_total_stress.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_total_stress",
        "title": "elemental_contact_total_stress > elemental_contact_total_stress > elemental_contact_total_stress",
        "section": "elemental_contact_total_stress > elemental_contact_total_stress",
        "text": "MecanicMisc.elemental_contact_total_stress(**kwargs)\n\nGet result data for the elemental contact total stress.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-export_data",
        "href": "examples/01-Detailed-Examples/05-export_data.html#export-data-in-a-dataframe-to-another-format",
        "title": "Export data in a dataframe to another format",
        "section": "Export data in a dataframe to another format",
        "text": "This example uses a static simulation to show how to export data in a dataframe\nto another format.\nExport data in a dataframe to another format"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-export_data",
        "href": "examples/01-Detailed-Examples/05-export_data.html#perform-required-imports",
        "title": "Export data in a dataframe to another format > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-export_data",
        "href": "examples/01-Detailed-Examples/05-export_data.html#get-simulation-object",
        "title": "Export data in a dataframe to another format > Get Simulation object",
        "section": "Get Simulation object",
        "text": "Get the Simulation object that allows access to the result. The Simulation\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Simulation object\nSimulation\nSimulation\nSimulation\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-export_data",
        "href": "examples/01-Detailed-Examples/05-export_data.html#extract-elemental-nodal-stress",
        "title": "Export data in a dataframe to another format > Extract elemental nodal stress",
        "section": "Extract elemental nodal stress",
        "text": "Extract elemental nodal stress"
    },
    {
        "objectID": "examples/01-Detailed-Examples/05-export_data",
        "href": "examples/01-Detailed-Examples/05-export_data.html#export-to-numpy-array",
        "title": "Export data in a dataframe to another format > Export to NumPy array",
        "section": "Export to NumPy array",
        "text": "Total running time of the script: (0 minutes 0.493 seconds)\nDownload Jupyter notebook: 05-export_data.ipynb\nDownload Python source code: 05-export_data.py\nDownload zipped: 05-export_data.zip\nGallery generated by Sphinx-Gallery\nExport to NumPy array\nDownload Jupyter notebook: 05-export_data.ipynb\nDownload Python source code: 05-export_data.py\nDownload zipped: 05-export_data.zip"
    },
    {
        "objectID": "api/ansys",
        "href": "api/ansys.html#ansys-namespace",
        "title": "ansys namespace",
        "section": "ansys namespace",
        "text": "ansys namespace"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_scoping_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_scoping_at_field.html#get_scoping_at_field",
        "title": "get_scoping_at_field",
        "section": "get_scoping_at_field",
        "text": "Get the scoping of the result for the field with the specified index.\nfield_index (int, optional) – Field index. The default is 0.\nget_scoping_at_field\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_scoping_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_scoping_at_field.html#ansys.dpf.post.result_data.ResultData.get_scoping_at_field",
        "title": "get_scoping_at_field > get_scoping_at_field > get_scoping_at_field",
        "section": "get_scoping_at_field > get_scoping_at_field",
        "text": "ResultData.get_scoping_at_field(field_index: int = 0)\n\nGet the scoping of the result for the field with the specified index.\n\nParameters\n\nfield_index (int, optional) – Field index. The default is 0.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#postprocess-the-result-file-for-a-harmonic-analysis",
        "title": "Postprocess the result file for a harmonic analysis",
        "section": "Postprocess the result file for a harmonic analysis",
        "text": "This example shows how to use the legacy PyDPF-Post API to postprocess a result\nfile for a harmonic analysis.\nPostprocess the result file for a harmonic analysis"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#perform-required-imports",
        "title": "Postprocess the result file for a harmonic analysis > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-solution-object",
        "title": "Postprocess the result file for a harmonic analysis > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object. This example loads a result file for an harmonic\nanalysis computed in Ansys Mechanical.\nGet Solution object\nSolution\nSolution"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-result-objects",
        "title": "Postprocess the result file for a harmonic analysis > Get Result objects",
        "section": "Get Result objects",
        "text": "Get Result objects\nResult"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-displacement-result",
        "title": "Postprocess the result file for a harmonic analysis > Get displacement result",
        "section": "Get displacement result",
        "text": "The displacement result contains a field for real values and a field for\nimaginary values.\nGet displacement result"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-number-of-fields",
        "title": "Postprocess the result file for a harmonic analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get number of fields"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-data-from-field",
        "title": "Postprocess the result file for a harmonic analysis > Get data from field",
        "section": "Get data from field",
        "text": "Get data from field"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-maximum-data-value-over-all-fields",
        "title": "Postprocess the result file for a harmonic analysis > Get maximum data value over all fields",
        "section": "Get maximum data value over all fields",
        "text": "Get maximum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess the result file for a harmonic analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-maximum-data-value-over-targeted-field",
        "title": "Postprocess the result file for a harmonic analysis > Get maximum data value over targeted field",
        "section": "Get maximum data value over targeted field",
        "text": "Get maximum data value over targeted field"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-minimum-data-value-over-all-fields",
        "title": "Postprocess the result file for a harmonic analysis > Get minimum data value over all fields",
        "section": "Get minimum data value over all fields",
        "text": "Get minimum data value over all fields"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-stress-result",
        "title": "Postprocess the result file for a harmonic analysis > Get stress result",
        "section": "Get stress result",
        "text": "Get a stress result that deals with amplitude. It contains a field for real\nvalues and a field for imaginary values.\nGet stress result"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#check-if-support-has-complex-frequencies",
        "title": "Postprocess the result file for a harmonic analysis > Check if support has complex frequencies",
        "section": "Check if support has complex frequencies",
        "text": "Check if support has complex frequencies"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-tensor-result",
        "title": "Postprocess the result file for a harmonic analysis > Get tensor result",
        "section": "Get tensor result",
        "text": "Get tensor result"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-number-of-fields",
        "title": "Postprocess the result file for a harmonic analysis > Get number of fields",
        "section": "Get number of fields",
        "text": "Get the number of shell and solid elements in distinct fields. Because shell and\nsolid elements are in distinct fields, you get four fields: the\nsolid-real one, the solid-imaginary one, the shell-real one, and the\nshell-imaginary one.\nGet number of fields"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-shell-field",
        "title": "Postprocess the result file for a harmonic analysis > Get shell field",
        "section": "Get shell field",
        "text": "Get shell field"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-solid-field",
        "title": "Postprocess the result file for a harmonic analysis > Get solid field",
        "section": "Get solid field",
        "text": "Get solid field"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#plot-amplitude-contour",
        "title": "Postprocess the result file for a harmonic analysis > Plot amplitude contour",
        "section": "Plot amplitude contour",
        "text": "Plot amplitude contour"
    },
    {
        "objectID": "examples/05-Legacy/04-harmonic-analysis",
        "href": "examples/05-Legacy/04-harmonic-analysis.html#get-elastic-strain-result",
        "title": "Postprocess the result file for a harmonic analysis > Get elastic strain result",
        "section": "Get elastic strain result",
        "text": "Get an elastic strain result that deals with phase. It contains a field for\nreal values and a field for imaginary values.\nThe phase must be a float value. The unit is degrees.\nIf the result file contains results, use this method\nto get the elastic strain result.\nTotal running time of the script: (0 minutes 1.248 seconds)\nDownload Jupyter notebook: 04-harmonic-analysis.ipynb\nDownload Python source code: 04-harmonic-analysis.py\nDownload zipped: 04-harmonic-analysis.zip\nGallery generated by Sphinx-Gallery\nGet elastic strain result\nDownload Jupyter notebook: 04-harmonic-analysis.ipynb\nDownload Python source code: 04-harmonic-analysis.py\nDownload zipped: 04-harmonic-analysis.zip"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#exctarct-fluid-simulation-results",
        "title": "Exctarct fluid simulation results",
        "section": "Exctarct fluid simulation results",
        "text": "This example shows how to load a fluid simulation for a heating coil that has been simulated\nwith Ansys CFX, explore the metadata available, and use the result extraction capabilities.\nThis example requires DPF 7.0 (2024.1.pre0) or later.\nFor more information, see compatibility.\nExctarct fluid simulation results"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#perform-required-imports",
        "title": "Exctarct fluid simulation results > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget using the examples module.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#load-fluid-analysis-result",
        "title": "Exctarct fluid simulation results > Load fluid analysis result",
        "section": "Load fluid analysis result",
        "text": "Load fluid analysis result"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#explore-available-metadata",
        "title": "Exctarct fluid simulation results > Explore available metadata",
        "section": "Explore available metadata",
        "text": "Check the available cell and face zones.\nThe mesh metadata is available separately from the mesh\nas accessing the mesh means loading it.\nUse the mesh_info property to explore the mesh structure to define queries.\nCheck available species.\nCheck available phases.\nCheck the metadata on available results\nExplore available metadata\nmesh_info"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#extract-a-result",
        "title": "Exctarct fluid simulation results > Extract a result",
        "section": "Extract a result",
        "text": "Print information about a specific available result.\nExtract a result"
    },
    {
        "objectID": "examples/04-Fluid-Examples/00-explore-fluid-simulation",
        "href": "examples/04-Fluid-Examples/00-explore-fluid-simulation.html#extract-temperature-data",
        "title": "Exctarct fluid simulation results > Extract temperature data",
        "section": "Extract temperature data",
        "text": "Select data for phase 2 (Water) only\nTo directly extract the temperature data for a given phase,\npass the temperature() method a phases argument.\nThis argument must be given a list of phase unique IDs, which appear\nin the dataframe in the phase label column between parentheses,\nor as listed under the Available qualifier labels section of the\nmetadata on the result. You can also directly use the phase name.\nTo extract a result on given zones use the zone_ids argument\nor the qualifiers dictionary argument with the zone key.\nThis code gets and plots the temperature on all face zones.\nTotal running time of the script: (0 minutes 3.342 seconds)\nDownload Jupyter notebook: 00-explore-fluid-simulation.ipynb\nDownload Python source code: 00-explore-fluid-simulation.py\nDownload zipped: 00-explore-fluid-simulation.zip\nGallery generated by Sphinx-Gallery\nExtract temperature data\ntemperature()\nphases\nAvailable qualifier labels\nzone_ids\nqualifiers\nzone\nDownload Jupyter notebook: 00-explore-fluid-simulation.ipynb\nDownload Python source code: 00-explore-fluid-simulation.py\nDownload zipped: 00-explore-fluid-simulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain_energy_density.html#elemental_nodal_elastic_strain_energy_density",
        "title": "elemental_nodal_elastic_strain_energy_density",
        "section": "elemental_nodal_elastic_strain_energy_density",
        "text": "Get result data for the elemental nodal elastic strain energy density.\nelemental_nodal_elastic_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_elastic_strain_energy_density",
        "title": "elemental_nodal_elastic_strain_energy_density > elemental_nodal_elastic_strain_energy_density > elemental_nodal_elastic_strain_energy_density",
        "section": "elemental_nodal_elastic_strain_energy_density > elemental_nodal_elastic_strain_energy_density",
        "text": "MecanicMisc.elemental_nodal_elastic_strain_energy_density(**kwargs)\n\nGet result data for the elemental nodal elastic strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_dissipation_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_dissipation_energy.html#elemental_thermal_dissipation_energy",
        "title": "elemental_thermal_dissipation_energy",
        "section": "elemental_thermal_dissipation_energy",
        "text": "Get result data for the elemental thermal dissipation energy.\nelemental_thermal_dissipation_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_dissipation_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_dissipation_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_thermal_dissipation_energy",
        "title": "elemental_thermal_dissipation_energy > elemental_thermal_dissipation_energy > elemental_thermal_dissipation_energy",
        "section": "elemental_thermal_dissipation_energy > elemental_thermal_dissipation_energy",
        "text": "MecanicMisc.elemental_thermal_dissipation_energy(**kwargs)\n\nGet result data for the elemental thermal dissipation energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain.html#elemental_nodal_plastic_strain",
        "title": "elemental_nodal_plastic_strain",
        "section": "elemental_nodal_plastic_strain",
        "text": "Get result data for the elemental nodal plastic strain.\nelemental_nodal_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_plastic_strain",
        "title": "elemental_nodal_plastic_strain > elemental_nodal_plastic_strain > elemental_nodal_plastic_strain",
        "section": "elemental_nodal_plastic_strain > elemental_nodal_plastic_strain",
        "text": "MecanicMisc.elemental_nodal_plastic_strain(**kwargs)\n\nGet result data for the elemental nodal plastic strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "API reference"
    },
    {
        "objectID": "api/solution",
        "href": "api/solution.html#dpfsolution-class",
        "title": "DpfSolution class",
        "section": "DpfSolution class",
        "text": "The DpfSolution class is\nthe entry point for browsing the contents of the result file.\nThis code shows how to load a result file:\nansys.dpf.post.load_solution(data_sources[, ...])\nLoads a solution and returns a ansys.dpf.post.Result object.\nansys.dpf.post.dpf_solution.DpfSolution(...)\nProvides the main class of the DPF-Post solution.\nDpfSolution class\nDpfSolution\nDpfSolution\nansys.dpf.post.load_solution\nansys.dpf.post.Result\nansys.dpf.post.dpf_solution.DpfSolution"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_plastic_strain.html#nodal_accu_eqv_plastic_strain",
        "title": "nodal_accu_eqv_plastic_strain",
        "section": "nodal_accu_eqv_plastic_strain",
        "text": "Get result data for the nodal accurate equivalent plastic strain result data.\nnodal_accu_eqv_plastic_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_plastic_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_plastic_strain.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_accu_eqv_plastic_strain",
        "title": "nodal_accu_eqv_plastic_strain > nodal_accu_eqv_plastic_strain > nodal_accu_eqv_plastic_strain",
        "section": "nodal_accu_eqv_plastic_strain > nodal_accu_eqv_plastic_strain",
        "text": "MecanicMisc.nodal_accu_eqv_plastic_strain(**kwargs)\n\nGet result data for the nodal accurate equivalent plastic strain result data.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.norm",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.norm.html#norm",
        "title": "norm",
        "section": "norm",
        "text": "Result data for the norm of the vector.\nnorm"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.norm",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.norm.html#ansys.dpf.post.electric_results.ElectricField.norm",
        "title": "norm > norm > norm",
        "section": "norm > norm",
        "text": "property ElectricField.norm\n\nResult data for the norm of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_max_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_max_data_at_field.html#get_max_data_at_field",
        "title": "get_max_data_at_field",
        "section": "get_max_data_at_field",
        "text": "Get the maximum values field data for the field with the specified index.\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 1).\nfield_index (int, optional) – Field index. The default is 0.\nget_max_data_at_field\nmin_max_fc\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_max_data_at_field",
        "href": "api/_autosummary/ansys.dpf.post.result_data.ResultData.get_max_data_at_field.html#ansys.dpf.post.result_data.ResultData.get_max_data_at_field",
        "title": "get_max_data_at_field > get_max_data_at_field > get_max_data_at_field",
        "section": "get_max_data_at_field > get_max_data_at_field",
        "text": "ResultData.get_max_data_at_field(field_index: int = 0)\n\nGet the maximum values field data for the field with the specified index.\n\nChains the result operator to the min_max_fc operator and returns\nthe result (output from pin 1).\n\nParameters\n\nfield_index (int, optional) – Field index. The default is 0.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.dataframe",
        "href": "api/ansys.dpf.post.dataframe.html#dataframe",
        "title": "DataFrame",
        "section": "DataFrame",
        "text": "DataFrame"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-data-from-a-static-simulation",
        "title": "Get data from a static simulation",
        "section": "Get data from a static simulation",
        "text": "This example shows how to get data from a previously stored static simulation.\nThe available results can be listed to see what results can be retrieved.\nGet data from a static simulation"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#perform-required-imports",
        "title": "Get data from a static simulation > Perform required imports",
        "section": "Perform required imports",
        "text": "Perform required imports. This example uses a supplied file that you can\nget by importing the DPF examples package.\nPerform required imports\nexamples"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-solution-object",
        "title": "Get data from a static simulation > Get Solution object",
        "section": "Get Solution object",
        "text": "Get the Solution object that allows access to the result. The Solution\nobject must be instantiated with the path for the result file. For example,\n\"C:/Users/user/my_result.rst\" on Windows or \"/home/user/my_result.rst\"\non Linux.\nGet Solution object\nSolution\nSolution\nSolution\n\"C:/Users/user/my_result.rst\"\n\"/home/user/my_result.rst\""
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-and-plot-displacements",
        "title": "Get data from a static simulation > Get and plot displacements",
        "section": "Get and plot displacements",
        "text": "Print information\nPlot displacements\nGet and plot displacements"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-and-plot-stresses",
        "title": "Get data from a static simulation > Get and plot stresses",
        "section": "Get and plot stresses",
        "text": "Get the “XY” stress component averaged on nodes.\nPrint information.\nPlot available stresses.\nGet and plot stresses"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-stresses-at-only-five-nodes",
        "title": "Get data from a static simulation > Get stresses at only five nodes",
        "section": "Get stresses at only five nodes",
        "text": "Get stresses at only the first five nodes using their IDs.\nPrint information.\nPlot stresses.\nGet stresses at only five nodes"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-stresses-in-a-named-selection",
        "title": "Get data from a static simulation > Get stresses in a named selection",
        "section": "Get stresses in a named selection",
        "text": "Get the name of the first named selection in the simulation.\nPrint information.\nPlot stresses.\nGet stresses in a named selection"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-stresses-in-a-few-elements",
        "title": "Get data from a static simulation > Get stresses in a few elements",
        "section": "Get stresses in a few elements",
        "text": "Get stresses only for a few elements selected by their IDs.\nPrint information.\nPlot stresses.\nGet stresses in a few elements"
    },
    {
        "objectID": "examples/05-Legacy/01-get_data_from_static_simulation",
        "href": "examples/05-Legacy/01-get_data_from_static_simulation.html#get-elemental-streses-and-raw-stresses",
        "title": "Get data from a static simulation > Get elemental streses and raw stresses",
        "section": "Get elemental streses and raw stresses",
        "text": "Get elemental stresses and print information.\nGet raw stresses (ElementalNodal) and print information.\nTotal running time of the script: (0 minutes 3.565 seconds)\nDownload Jupyter notebook: 01-get_data_from_static_simulation.ipynb\nDownload Python source code: 01-get_data_from_static_simulation.py\nDownload zipped: 01-get_data_from_static_simulation.zip\nGallery generated by Sphinx-Gallery\nGet elemental streses and raw stresses\nDownload Jupyter notebook: 01-get_data_from_static_simulation.ipynb\nDownload Python source code: 01-get_data_from_static_simulation.py\nDownload zipped: 01-get_data_from_static_simulation.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_sliding_distance",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_sliding_distance.html#elemental_contact_sliding_distance",
        "title": "elemental_contact_sliding_distance",
        "section": "elemental_contact_sliding_distance",
        "text": "Get result data for the elemental contact sliding distance.\nelemental_contact_sliding_distance"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_sliding_distance",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_sliding_distance.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_contact_sliding_distance",
        "title": "elemental_contact_sliding_distance > elemental_contact_sliding_distance > elemental_contact_sliding_distance",
        "section": "elemental_contact_sliding_distance > elemental_contact_sliding_distance",
        "text": "MecanicMisc.elemental_contact_sliding_distance(**kwargs)\n\nGet result data for the elemental contact sliding distance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xz.html#xz",
        "title": "xz",
        "section": "xz",
        "text": "Result data for the XZ component of the tensor.\nxz"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xz",
        "href": "api/_autosummary/ansys.dpf.post.strain.PlasticStrain.xz.html#ansys.dpf.post.strain.PlasticStrain.xz",
        "title": "xz > xz > xz",
        "section": "xz > xz",
        "text": "property PlasticStrain.xz\n\nResult data for the XZ component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.html#electricfield",
        "title": "ElectricField",
        "section": "ElectricField",
        "text": "Defines the temperature object for a thermal/electric analysis.\nElectricField.has_complex_frequencies()\nCheck if the result contains complex frequencies.\nElectricField.norm\nResult data for the norm of the vector.\nElectricField.vector\nResult data for the vector values.\nElectricField.x\nResult data for the X component of the vector.\nElectricField.y\nResult data for the Y component of the vector.\nElectricField.z\nResult data for the Z component of the vector.\nElectricField\nElectricField.has_complex_frequencies\nElectricField.norm\nElectricField.vector\nElectricField.x\nElectricField.y\nElectricField.z"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField",
        "href": "api/_autosummary/ansys.dpf.post.electric_results.ElectricField.html#ansys.dpf.post.electric_results.ElectricField",
        "title": "ElectricField > ElectricField > ElectricField",
        "section": "ElectricField > ElectricField",
        "text": "class ansys.dpf.post.electric_results.ElectricField(**kwargs)\n\nDefines the temperature object for a thermal/electric analysis.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElectricField.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElectricField.norm\n\nResult data for the norm of the vector.\n\nElectricField.vector\n\nResult data for the vector values.\n\nElectricField.x\n\nResult data for the X component of the vector.\n\nElectricField.y\n\nResult data for the Y component of the vector.\n\nElectricField.z\n\nResult data for the Z component of the vector.\n\n"
    },
    {
        "objectID": "api/ansys.dpf.post.common",
        "href": "api/ansys.dpf.post.common.html#common",
        "title": "Common",
        "section": "Common",
        "text": "Common"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers",
        "href": "api/ansys.dpf.post.helpers.html#ansysdpfposthelpers-package",
        "title": "ansys.dpf.post.helpers package",
        "section": "ansys.dpf.post.helpers package",
        "text": "ansys.dpf.post.helpers package"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers",
        "href": "api/ansys.dpf.post.helpers.html#submodules",
        "title": "ansys.dpf.post.helpers package > Submodules",
        "section": "Submodules",
        "text": "Submodules"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers",
        "href": "api/ansys.dpf.post.helpers.html#module-contents",
        "title": "ansys.dpf.post.helpers package > Module contents",
        "section": "Module contents",
        "text": "Tools package.\nModule contents"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers",
        "href": "api/ansys.dpf.post.helpers.html#tools",
        "title": "ansys.dpf.post.helpers package > Tools",
        "section": "Tools",
        "text": "This package regroups helpers for different common post-treatment functionalities.\nTools"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_reaction_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_reaction_force.html#nodal_reaction_force",
        "title": "nodal_reaction_force",
        "section": "nodal_reaction_force",
        "text": "Get result data for the nodal reaction force.\nnodal_reaction_force"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_reaction_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.nodal_reaction_force.html#ansys.dpf.post.misc_results.MecanicMisc.nodal_reaction_force",
        "title": "nodal_reaction_force > nodal_reaction_force > nodal_reaction_force",
        "section": "nodal_reaction_force > nodal_reaction_force",
        "text": "MecanicMisc.nodal_reaction_force(**kwargs)\n\nGet result data for the nodal reaction force.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.y",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.y.html#y",
        "title": "y",
        "section": "y",
        "text": "Result data for the Y component of the vector.\ny"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.y",
        "href": "api/_autosummary/ansys.dpf.post.temperature.HeatFlux.y.html#ansys.dpf.post.temperature.HeatFlux.y",
        "title": "y > y > y",
        "section": "y > y",
        "text": "property HeatFlux.y\n\nResult data for the Y component of the vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_eqv_stress_parameter.html#elemental_eqv_stress_parameter",
        "title": "elemental_eqv_stress_parameter",
        "section": "elemental_eqv_stress_parameter",
        "text": "Get result data for an elemental equivalent stress parameter.\nelemental_eqv_stress_parameter"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_eqv_stress_parameter",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_eqv_stress_parameter.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_eqv_stress_parameter",
        "title": "elemental_eqv_stress_parameter > elemental_eqv_stress_parameter > elemental_eqv_stress_parameter",
        "section": "elemental_eqv_stress_parameter > elemental_eqv_stress_parameter",
        "text": "MecanicMisc.elemental_eqv_stress_parameter(**kwargs)\n\nGet result data for an elemental equivalent stress parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "sg_execution_times",
        "href": "sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "01:46.961 total execution time for 33 files from all galleries:\nExample\nTime\nMem (MB)\nsphx_glr_examples_01-Detailed-Examples_05-mesh-exploration.py (../../examples/01-Detailed-Examples/05-mesh-exploration.py)\n00:13.968\n0.0\nsphx_glr_examples_00-Different-analysis-types_01-static-simulation.py (../../examples/00-Different-analysis-types/01-static-simulation.py)\n00:09.304\n0.0\nsphx_glr_examples_02-Performance-Improvements_01-mesh-external-layer.py (../../examples/02-Performance-Improvements/01-mesh-external-layer.py)\n00:08.059\n0.0\nsphx_glr_examples_00-Different-analysis-types_02-modal-simulation.py (../../examples/00-Different-analysis-types/02-modal-simulation.py)\n00:06.600\n0.0\nsphx_glr_examples_00-Different-analysis-types_04-harmonic-complex-results.py (../../examples/00-Different-analysis-types/04-harmonic-complex-results.py)\n00:06.432\n0.0\nsphx_glr_examples_03-Cyclic-Examples_05-modal_cyclic_no_expansion.py (../../examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.py)\n00:06.296\n0.0\nsphx_glr_examples_02-Performance-Improvements_03-mesh-external-layer-compare.py (../../examples/02-Performance-Improvements/03-mesh-external-layer-compare.py)\n00:05.524\n0.0\nsphx_glr_examples_03-Cyclic-Examples_03-cyclic-mesh-external-layer.py (../../examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.py)\n00:04.694\n0.0\nsphx_glr_examples_01-Detailed-Examples_04-invariants.py (../../examples/01-Detailed-Examples/04-invariants.py)\n00:04.089\n0.0\nsphx_glr_examples_00-Different-analysis-types_03-transient-simulation.py (../../examples/00-Different-analysis-types/03-transient-simulation.py)\n00:03.899\n0.0\nsphx_glr_examples_02-Performance-Improvements_02-mesh-skin.py (../../examples/02-Performance-Improvements/02-mesh-skin.py)\n00:03.809\n0.0\nsphx_glr_examples_05-Legacy_01-get_data_from_static_simulation.py (../../examples/05-Legacy/01-get_data_from_static_simulation.py)\n00:03.565\n0.0\nsphx_glr_examples_03-Cyclic-Examples_02-multi-stage-cyclic-results.py (../../examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.py)\n00:03.436\n0.0\nsphx_glr_examples_04-Fluid-Examples_00-explore-fluid-simulation.py (../../examples/04-Fluid-Examples/00-explore-fluid-simulation.py)\n00:03.342\n0.0\nsphx_glr_examples_00-Different-analysis-types_05-fluid-simulation.py (../../examples/00-Different-analysis-types/05-fluid-simulation.py)\n00:03.281\n0.0\nsphx_glr_examples_03-Cyclic-Examples_04-cyclic-mesh-skin.py (../../examples/03-Cyclic-Examples/04-cyclic-mesh-skin.py)\n00:03.234\n0.0\nsphx_glr_examples_01-Detailed-Examples_01-named-selections-modal-simulation.py (../../examples/01-Detailed-Examples/01-named-selections-modal-simulation.py)\n00:02.923\n0.0\nsphx_glr_examples_01-Detailed-Examples_00-dataframe-manipulation.py (../../examples/01-Detailed-Examples/00-dataframe-manipulation.py)\n00:02.281\n0.0\nsphx_glr_examples_03-Cyclic-Examples_01-cyclic-results.py (../../examples/03-Cyclic-Examples/01-cyclic-results.py)\n00:02.155\n0.0\nsphx_glr_examples_01-Detailed-Examples_02-modal-extract-sub-results.py (../../examples/01-Detailed-Examples/02-modal-extract-sub-results.py)\n00:01.364\n0.0\nsphx_glr_examples_05-Legacy_04-harmonic-analysis.py (../../examples/05-Legacy/04-harmonic-analysis.py)\n00:01.248\n0.0\nsphx_glr_examples_05-Legacy_02-static-analysis.py (../../examples/05-Legacy/02-static-analysis.py)\n00:01.213\n0.0\nsphx_glr_examples_05-Legacy_03-modal-analysis.py (../../examples/05-Legacy/03-modal-analysis.py)\n00:01.128\n0.0\nsphx_glr_examples_05-Legacy_00-overview_example.py (../../examples/05-Legacy/00-overview_example.py)\n00:01.041\n0.0\nsphx_glr_examples_01-Detailed-Examples_03-explore-result-data-harmonic.py (../../examples/01-Detailed-Examples/03-explore-result-data-harmonic.py)\n00:00.997\n0.0\nsphx_glr_examples_05-Legacy_08-result_on_path_of_coordinates.py (../../examples/05-Legacy/08-result_on_path_of_coordinates.py)\n00:00.952\n0.0\nsphx_glr_examples_05-Legacy_05-transient-analysis.py (../../examples/05-Legacy/05-transient-analysis.py)\n00:00.655\n0.0\nsphx_glr_examples_01-Detailed-Examples_05-export_data.py (../../examples/01-Detailed-Examples/05-export_data.py)\n00:00.493\n0.0\nsphx_glr_examples_01-Detailed-Examples_06-compute-min-max.py (../../examples/01-Detailed-Examples/06-compute-min-max.py)\n00:00.276\n0.0\nsphx_glr_examples_05-Legacy_09-basics.py (../../examples/05-Legacy/09-basics.py)\n00:00.233\n0.0\nsphx_glr_examples_05-Legacy_01-introduction.py (../../examples/05-Legacy/01-introduction.py)\n00:00.226\n0.0\nsphx_glr_examples_05-Legacy_07-result_keywords.py (../../examples/05-Legacy/07-result_keywords.py)\n00:00.146\n0.0\nsphx_glr_examples_05-Legacy_06-complex_results.py (../../examples/05-Legacy/06-complex_results.py)\n00:00.097\n0.0\nComputation times\n../../examples/01-Detailed-Examples/05-mesh-exploration.py\n../../examples/00-Different-analysis-types/01-static-simulation.py\n../../examples/02-Performance-Improvements/01-mesh-external-layer.py\n../../examples/00-Different-analysis-types/02-modal-simulation.py\n../../examples/00-Different-analysis-types/04-harmonic-complex-results.py\n../../examples/03-Cyclic-Examples/05-modal_cyclic_no_expansion.py\n../../examples/02-Performance-Improvements/03-mesh-external-layer-compare.py\n../../examples/03-Cyclic-Examples/03-cyclic-mesh-external-layer.py\n../../examples/01-Detailed-Examples/04-invariants.py\n../../examples/00-Different-analysis-types/03-transient-simulation.py\n../../examples/02-Performance-Improvements/02-mesh-skin.py\n../../examples/05-Legacy/01-get_data_from_static_simulation.py\n../../examples/03-Cyclic-Examples/02-multi-stage-cyclic-results.py\n../../examples/04-Fluid-Examples/00-explore-fluid-simulation.py\n../../examples/00-Different-analysis-types/05-fluid-simulation.py\n../../examples/03-Cyclic-Examples/04-cyclic-mesh-skin.py\n../../examples/01-Detailed-Examples/01-named-selections-modal-simulation.py\n../../examples/01-Detailed-Examples/00-dataframe-manipulation.py\n../../examples/03-Cyclic-Examples/01-cyclic-results.py\n../../examples/01-Detailed-Examples/02-modal-extract-sub-results.py\n../../examples/05-Legacy/04-harmonic-analysis.py\n../../examples/05-Legacy/02-static-analysis.py\n../../examples/05-Legacy/03-modal-analysis.py\n../../examples/05-Legacy/00-overview_example.py\n../../examples/01-Detailed-Examples/03-explore-result-data-harmonic.py\n../../examples/05-Legacy/08-result_on_path_of_coordinates.py\n../../examples/05-Legacy/05-transient-analysis.py\n../../examples/01-Detailed-Examples/05-export_data.py\n../../examples/01-Detailed-Examples/06-compute-min-max.py\n../../examples/05-Legacy/09-basics.py\n../../examples/05-Legacy/01-introduction.py\n../../examples/05-Legacy/07-result_keywords.py\n../../examples/05-Legacy/06-complex_results.py"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.html#mecanicmisc",
        "title": "MecanicMisc",
        "section": "MecanicMisc",
        "text": "Provides the miscellaneous mecanic result.\nMecanicMisc.elemental_accu_eqv_creep_strain(...)\nGet result data for the elemental accurate equivalent creep strain.\nMecanicMisc.elemental_accu_eqv_plastic_strain(...)\nGet result data for the elemental accurate eqvivalent plastic strain.\nMecanicMisc.elemental_artificial_hourglass_energy(...)\nGet result data for the elemental artificial hourglass energy.\nMecanicMisc.elemental_co_energy(**kwargs)\nGet result data for the elemental co energy.\nMecanicMisc.elemental_contact_fluid_penetration_pressure(...)\nGet result data for the elemental contact fluid penetration pressure.\nMecanicMisc.elemental_contact_friction_stress(...)\nGet result data for the elemental contact friction stress.\nMecanicMisc.elemental_contact_penetration(...)\nGet result data for the elemental contact penetration.\nMecanicMisc.elemental_contact_pressure(**kwargs)\nGet result data for the elemental contact pressure.\nMecanicMisc.elemental_contact_sliding_distance(...)\nGet result data for the elemental contact sliding distance.\nMecanicMisc.elemental_contact_status(**kwargs)\nGet result data for the elemental contact status.\nMecanicMisc.elemental_contact_surface_heat_flux(...)\nGet result data for the elemental contact surface heat flux.\nMecanicMisc.elemental_contact_total_stress(...)\nGet result data for the elemental contact total stress.\nMecanicMisc.elemental_contactgap_distance(...)\nGet result data for the elemental contact gap distance.\nMecanicMisc.elemental_creep_strain_energy_density(...)\nGet result data for the elemental creep strain energy density.\nMecanicMisc.elemental_elastic_strain(**kwargs)\nGet result data for the elemental elastic strain.\nMecanicMisc.elemental_elastic_strain_energy_density(...)\nGet result data for the elemental elastic strain energy density.\nMecanicMisc.elemental_eqv_stress_parameter(...)\nGet result data for an elemental equivalent stress parameter.\nMecanicMisc.elemental_force(**kwargs)\nGet result data for the elemental force.\nMecanicMisc.elemental_hydrostatic_pressure(...)\nGet result data for the elemental hydrostatic pressure.\nMecanicMisc.elemental_incremental_energy(...)\nGet result data for the elemental incremental energy.\nMecanicMisc.elemental_kinetic_energy(**kwargs)\nGet result data for the elemental kinetic energy.\nMecanicMisc.elemental_mass(**kwargs)\nGet result data for the elemental mass.\nMecanicMisc.elemental_nodal_accu_eqv_creep_strain(...)\nGet result data for the elemental nodal accurate equivalent creep strain.\nMecanicMisc.elemental_nodal_accu_eqv_plastic_strain(...)\nGet result data for the elemental nodal accurate eqvivalent plastic strain.\nMecanicMisc.elemental_nodal_creep_strain_energy_density(...)\nGet result data for the elemental nodal creep strain energy density.\nMecanicMisc.elemental_nodal_elastic_strain(...)\nGet result data for the elemental nodal elastic strain.\nMecanicMisc.elemental_nodal_elastic_strain_energy_density(...)\nGet result data for the elemental nodal elastic strain energy density.\nMecanicMisc.elemental_nodal_eqv_stress_parameter(...)\nGet result data for the elemental nodal equivalent stress parameter.\nMecanicMisc.elemental_nodal_force(**kwargs)\nGet result data for the elemental nodal force.\nMecanicMisc.elemental_nodal_hydrostatic_pressure(...)\nGet result data for the elemental nodal hydrostatic pressure.\nMecanicMisc.elemental_nodal_plastic_state_variable(...)\nGet result data for the elemental nodal plastic state variable.\nMecanicMisc.elemental_nodal_plastic_strain(...)\nGet result data for the elemental nodal plastic strain.\nMecanicMisc.elemental_nodal_plastic_strain_energy_density(...)\nGet result data for the elemental nodal plastic strain energy density.\nMecanicMisc.elemental_nodal_stress(**kwargs)\nGet result data for the elemental nodal stress.\nMecanicMisc.elemental_nodal_stress_ratio(...)\nGet result data for the elemental nodal stress ratio.\nMecanicMisc.elemental_nodal_structural_temperature(...)\nGet result data for the elemental nodal structural temperature.\nMecanicMisc.elemental_nodal_thermal_strains(...)\nGet result data for the elemental nodal thermal strains.\nMecanicMisc.elemental_plastic_state_variable(...)\nGet result data for the elemental plastic state variable.\nMecanicMisc.elemental_plastic_strain(**kwargs)\nGet result data for the elemental plastic strain.\nMecanicMisc.elemental_plastic_strain_energy_density(...)\nGet result data for the elemental plastic strain energy density.\nMecanicMisc.elemental_stiffness_matrix_energy(...)\nGet result data for the elemental stiffness matrix energy.\nMecanicMisc.elemental_stress(**kwargs)\nGet result data for the elemental stress.\nMecanicMisc.elemental_stress_ratio(**kwargs)\nGet result data for the elemental stress ratio.\nMecanicMisc.elemental_structural_temperature(...)\nGet result data for the elemental structural temperature.\nMecanicMisc.elemental_thermal_dissipation_energy(...)\nGet result data for the elemental thermal dissipation energy.\nMecanicMisc.elemental_thermal_strains(**kwargs)\nGet result data for the elemental thermal strains.\nMecanicMisc.elemental_volume(**kwargs)\nGet result data for the elemental volume.\nMecanicMisc.modal_basis(**kwargs)\nGet result data for the modal basis.\nMecanicMisc.nodal_acceleration(**kwargs)\nGet result data for the nodal acceleration.\nMecanicMisc.nodal_accu_eqv_creep_strain(**kwargs)\nGet result data for the nodal accurate equivalent creep strain.\nMecanicMisc.nodal_accu_eqv_plastic_strain(...)\nGet result data for the nodal accurate equivalent plastic strain result data.\nMecanicMisc.nodal_creep_strain_energy_density(...)\nGet result data for the nodal creep strain energy density.\nMecanicMisc.nodal_displacement(**kwargs)\nGet result data for the nodal displacement.\nMecanicMisc.nodal_elastic_strain(**kwargs)\nGet result data for the nodal elastic strain.\nMecanicMisc.nodal_elastic_strain_energy_density(...)\nGet result data for the nodal elastic strain energy density.\nMecanicMisc.nodal_eqv_stress_parameter(**kwargs)\nGet result data for the nodal equivalent stress parameter.\nMecanicMisc.nodal_force(**kwargs)\nGet result data for the nodal force.\nMecanicMisc.nodal_hydrostatic_pressure(**kwargs)\nGet result data for the nodal hydrostatic pressure.\nMecanicMisc.nodal_moment(**kwargs)\nGet result data for the nodal moment.\nMecanicMisc.nodal_plastic_state_variable(...)\nGet result data for the nodal plastic state variable.\nMecanicMisc.nodal_plastic_strain(**kwargs)\nGet result data for the nodal plastic strain.\nMecanicMisc.nodal_plastic_strain_energy_density(...)\nGet result data for the nodal plastic strain energy density.\nMecanicMisc.nodal_raw_displacement(**kwargs)\nGet result data for the nodal raw displacement.\nMecanicMisc.nodal_raw_reaction_force(**kwargs)\nGet result data for the nodal raw reaction force.\nMecanicMisc.nodal_reaction_force(**kwargs)\nGet result data for the nodal reaction force.\nMecanicMisc.nodal_stress(**kwargs)\nGet result data for the nodal stress.\nMecanicMisc.nodal_stress_ratio(**kwargs)\nGet result data for the nodal stress ratio.\nMecanicMisc.nodal_structural_temperature(...)\nGet result data for the nodal structural temperature.\nMecanicMisc.nodal_thermal_strains(**kwargs)\nGet result data for the nodal thermal strains.\nMecanicMisc.nodal_velocity(**kwargs)\nGet result data for the nodal velocity.\nMecanicMisc.von_mises_stress(**kwargs)\nGet result data for the nodal von Mises stress.\nMecanicMisc\nMecanicMisc.elemental_accu_eqv_creep_strain\nMecanicMisc.elemental_accu_eqv_plastic_strain\nMecanicMisc.elemental_artificial_hourglass_energy\nMecanicMisc.elemental_co_energy\nMecanicMisc.elemental_contact_fluid_penetration_pressure\nMecanicMisc.elemental_contact_friction_stress\nMecanicMisc.elemental_contact_penetration\nMecanicMisc.elemental_contact_pressure\nMecanicMisc.elemental_contact_sliding_distance\nMecanicMisc.elemental_contact_status\nMecanicMisc.elemental_contact_surface_heat_flux\nMecanicMisc.elemental_contact_total_stress\nMecanicMisc.elemental_contactgap_distance\nMecanicMisc.elemental_creep_strain_energy_density\nMecanicMisc.elemental_elastic_strain\nMecanicMisc.elemental_elastic_strain_energy_density\nMecanicMisc.elemental_eqv_stress_parameter\nMecanicMisc.elemental_force\nMecanicMisc.elemental_hydrostatic_pressure\nMecanicMisc.elemental_incremental_energy\nMecanicMisc.elemental_kinetic_energy\nMecanicMisc.elemental_mass\nMecanicMisc.elemental_nodal_accu_eqv_creep_strain\nMecanicMisc.elemental_nodal_accu_eqv_plastic_strain\nMecanicMisc.elemental_nodal_creep_strain_energy_density\nMecanicMisc.elemental_nodal_elastic_strain\nMecanicMisc.elemental_nodal_elastic_strain_energy_density\nMecanicMisc.elemental_nodal_eqv_stress_parameter\nMecanicMisc.elemental_nodal_force\nMecanicMisc.elemental_nodal_hydrostatic_pressure\nMecanicMisc.elemental_nodal_plastic_state_variable\nMecanicMisc.elemental_nodal_plastic_strain\nMecanicMisc.elemental_nodal_plastic_strain_energy_density\nMecanicMisc.elemental_nodal_stress\nMecanicMisc.elemental_nodal_stress_ratio\nMecanicMisc.elemental_nodal_structural_temperature\nMecanicMisc.elemental_nodal_thermal_strains\nMecanicMisc.elemental_plastic_state_variable\nMecanicMisc.elemental_plastic_strain\nMecanicMisc.elemental_plastic_strain_energy_density\nMecanicMisc.elemental_stiffness_matrix_energy\nMecanicMisc.elemental_stress\nMecanicMisc.elemental_stress_ratio\nMecanicMisc.elemental_structural_temperature\nMecanicMisc.elemental_thermal_dissipation_energy\nMecanicMisc.elemental_thermal_strains\nMecanicMisc.elemental_volume\nMecanicMisc.modal_basis\nMecanicMisc.nodal_acceleration\nMecanicMisc.nodal_accu_eqv_creep_strain\nMecanicMisc.nodal_accu_eqv_plastic_strain\nMecanicMisc.nodal_creep_strain_energy_density\nMecanicMisc.nodal_displacement\nMecanicMisc.nodal_elastic_strain\nMecanicMisc.nodal_elastic_strain_energy_density\nMecanicMisc.nodal_eqv_stress_parameter\nMecanicMisc.nodal_force\nMecanicMisc.nodal_hydrostatic_pressure\nMecanicMisc.nodal_moment\nMecanicMisc.nodal_plastic_state_variable\nMecanicMisc.nodal_plastic_strain\nMecanicMisc.nodal_plastic_strain_energy_density\nMecanicMisc.nodal_raw_displacement\nMecanicMisc.nodal_raw_reaction_force\nMecanicMisc.nodal_reaction_force\nMecanicMisc.nodal_stress\nMecanicMisc.nodal_stress_ratio\nMecanicMisc.nodal_structural_temperature\nMecanicMisc.nodal_thermal_strains\nMecanicMisc.nodal_velocity\nMecanicMisc.von_mises_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.html#ansys.dpf.post.misc_results.MecanicMisc",
        "title": "MecanicMisc > MecanicMisc > MecanicMisc",
        "section": "MecanicMisc > MecanicMisc",
        "text": "class ansys.dpf.post.misc_results.MecanicMisc(model, data_sources)\n\nProvides the miscellaneous mecanic result.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMecanicMisc.elemental_accu_eqv_creep_strain(...)\n\nGet result data for the elemental accurate equivalent creep strain.\n\nMecanicMisc.elemental_accu_eqv_plastic_strain(...)\n\nGet result data for the elemental accurate eqvivalent plastic strain.\n\nMecanicMisc.elemental_artificial_hourglass_energy(...)\n\nGet result data for the elemental artificial hourglass energy.\n\nMecanicMisc.elemental_co_energy(**kwargs)\n\nGet result data for the elemental co energy.\n\nMecanicMisc.elemental_contact_fluid_penetration_pressure(...)\n\nGet result data for the elemental contact fluid penetration pressure.\n\nMecanicMisc.elemental_contact_friction_stress(...)\n\nGet result data for the elemental contact friction stress.\n\nMecanicMisc.elemental_contact_penetration(...)\n\nGet result data for the elemental contact penetration.\n\nMecanicMisc.elemental_contact_pressure(**kwargs)\n\nGet result data for the elemental contact pressure.\n\nMecanicMisc.elemental_contact_sliding_distance(...)\n\nGet result data for the elemental contact sliding distance.\n\nMecanicMisc.elemental_contact_status(**kwargs)\n\nGet result data for the elemental contact status.\n\nMecanicMisc.elemental_contact_surface_heat_flux(...)\n\nGet result data for the elemental contact surface heat flux.\n\nMecanicMisc.elemental_contact_total_stress(...)\n\nGet result data for the elemental contact total stress.\n\nMecanicMisc.elemental_contactgap_distance(...)\n\nGet result data for the elemental contact gap distance.\n\nMecanicMisc.elemental_creep_strain_energy_density(...)\n\nGet result data for the elemental creep strain energy density.\n\nMecanicMisc.elemental_elastic_strain(**kwargs)\n\nGet result data for the elemental elastic strain.\n\nMecanicMisc.elemental_elastic_strain_energy_density(...)\n\nGet result data for the elemental elastic strain energy density.\n\nMecanicMisc.elemental_eqv_stress_parameter(...)\n\nGet result data for an elemental equivalent stress parameter.\n\nMecanicMisc.elemental_force(**kwargs)\n\nGet result data for the elemental force.\n\nMecanicMisc.elemental_hydrostatic_pressure(...)\n\nGet result data for the elemental hydrostatic pressure.\n\nMecanicMisc.elemental_incremental_energy(...)\n\nGet result data for the elemental incremental energy.\n\nMecanicMisc.elemental_kinetic_energy(**kwargs)\n\nGet result data for the elemental kinetic energy.\n\nMecanicMisc.elemental_mass(**kwargs)\n\nGet result data for the elemental mass.\n\nMecanicMisc.elemental_nodal_accu_eqv_creep_strain(...)\n\nGet result data for the elemental nodal accurate equivalent creep strain.\n\nMecanicMisc.elemental_nodal_accu_eqv_plastic_strain(...)\n\nGet result data for the elemental nodal accurate eqvivalent plastic strain.\n\nMecanicMisc.elemental_nodal_creep_strain_energy_density(...)\n\nGet result data for the elemental nodal creep strain energy density.\n\nMecanicMisc.elemental_nodal_elastic_strain(...)\n\nGet result data for the elemental nodal elastic strain.\n\nMecanicMisc.elemental_nodal_elastic_strain_energy_density(...)\n\nGet result data for the elemental nodal elastic strain energy density.\n\nMecanicMisc.elemental_nodal_eqv_stress_parameter(...)\n\nGet result data for the elemental nodal equivalent stress parameter.\n\nMecanicMisc.elemental_nodal_force(**kwargs)\n\nGet result data for the elemental nodal force.\n\nMecanicMisc.elemental_nodal_hydrostatic_pressure(...)\n\nGet result data for the elemental nodal hydrostatic pressure.\n\nMecanicMisc.elemental_nodal_plastic_state_variable(...)\n\nGet result data for the elemental nodal plastic state variable.\n\nMecanicMisc.elemental_nodal_plastic_strain(...)\n\nGet result data for the elemental nodal plastic strain.\n\nMecanicMisc.elemental_nodal_plastic_strain_energy_density(...)\n\nGet result data for the elemental nodal plastic strain energy density.\n\nMecanicMisc.elemental_nodal_stress(**kwargs)\n\nGet result data for the elemental nodal stress.\n\nMecanicMisc.elemental_nodal_stress_ratio(...)\n\nGet result data for the elemental nodal stress ratio.\n\nMecanicMisc.elemental_nodal_structural_temperature(...)\n\nGet result data for the elemental nodal structural temperature.\n\nMecanicMisc.elemental_nodal_thermal_strains(...)\n\nGet result data for the elemental nodal thermal strains.\n\nMecanicMisc.elemental_plastic_state_variable(...)\n\nGet result data for the elemental plastic state variable.\n\nMecanicMisc.elemental_plastic_strain(**kwargs)\n\nGet result data for the elemental plastic strain.\n\nMecanicMisc.elemental_plastic_strain_energy_density(...)\n\nGet result data for the elemental plastic strain energy density.\n\nMecanicMisc.elemental_stiffness_matrix_energy(...)\n\nGet result data for the elemental stiffness matrix energy.\n\nMecanicMisc.elemental_stress(**kwargs)\n\nGet result data for the elemental stress.\n\nMecanicMisc.elemental_stress_ratio(**kwargs)\n\nGet result data for the elemental stress ratio.\n\nMecanicMisc.elemental_structural_temperature(...)\n\nGet result data for the elemental structural temperature.\n\nMecanicMisc.elemental_thermal_dissipation_energy(...)\n\nGet result data for the elemental thermal dissipation energy.\n\nMecanicMisc.elemental_thermal_strains(**kwargs)\n\nGet result data for the elemental thermal strains.\n\nMecanicMisc.elemental_volume(**kwargs)\n\nGet result data for the elemental volume.\n\nMecanicMisc.modal_basis(**kwargs)\n\nGet result data for the modal basis.\n\nMecanicMisc.nodal_acceleration(**kwargs)\n\nGet result data for the nodal acceleration.\n\nMecanicMisc.nodal_accu_eqv_creep_strain(**kwargs)\n\nGet result data for the nodal accurate equivalent creep strain.\n\nMecanicMisc.nodal_accu_eqv_plastic_strain(...)\n\nGet result data for the nodal accurate equivalent plastic strain result data.\n\nMecanicMisc.nodal_creep_strain_energy_density(...)\n\nGet result data for the nodal creep strain energy density.\n\nMecanicMisc.nodal_displacement(**kwargs)\n\nGet result data for the nodal displacement.\n\nMecanicMisc.nodal_elastic_strain(**kwargs)\n\nGet result data for the nodal elastic strain.\n\nMecanicMisc.nodal_elastic_strain_energy_density(...)\n\nGet result data for the nodal elastic strain energy density.\n\nMecanicMisc.nodal_eqv_stress_parameter(**kwargs)\n\nGet result data for the nodal equivalent stress parameter.\n\nMecanicMisc.nodal_force(**kwargs)\n\nGet result data for the nodal force.\n\nMecanicMisc.nodal_hydrostatic_pressure(**kwargs)\n\nGet result data for the nodal hydrostatic pressure.\n\nMecanicMisc.nodal_moment(**kwargs)\n\nGet result data for the nodal moment.\n\nMecanicMisc.nodal_plastic_state_variable(...)\n\nGet result data for the nodal plastic state variable.\n\nMecanicMisc.nodal_plastic_strain(**kwargs)\n\nGet result data for the nodal plastic strain.\n\nMecanicMisc.nodal_plastic_strain_energy_density(...)\n\nGet result data for the nodal plastic strain energy density.\n\nMecanicMisc.nodal_raw_displacement(**kwargs)\n\nGet result data for the nodal raw displacement.\n\nMecanicMisc.nodal_raw_reaction_force(**kwargs)\n\nGet result data for the nodal raw reaction force.\n\nMecanicMisc.nodal_reaction_force(**kwargs)\n\nGet result data for the nodal reaction force.\n\nMecanicMisc.nodal_stress(**kwargs)\n\nGet result data for the nodal stress.\n\nMecanicMisc.nodal_stress_ratio(**kwargs)\n\nGet result data for the nodal stress ratio.\n\nMecanicMisc.nodal_structural_temperature(...)\n\nGet result data for the nodal structural temperature.\n\nMecanicMisc.nodal_thermal_strains(**kwargs)\n\nGet result data for the nodal thermal strains.\n\nMecanicMisc.nodal_velocity(**kwargs)\n\nGet result data for the nodal velocity.\n\nMecanicMisc.von_mises_stress(**kwargs)\n\nGet result data for the nodal von Mises stress.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_creep_strain.html#elemental_nodal_accu_eqv_creep_strain",
        "title": "elemental_nodal_accu_eqv_creep_strain",
        "section": "elemental_nodal_accu_eqv_creep_strain",
        "text": "Get result data for the elemental nodal accurate equivalent creep strain.\nelemental_nodal_accu_eqv_creep_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_creep_strain",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_creep_strain.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_accu_eqv_creep_strain",
        "title": "elemental_nodal_accu_eqv_creep_strain > elemental_nodal_accu_eqv_creep_strain > elemental_nodal_accu_eqv_creep_strain",
        "section": "elemental_nodal_accu_eqv_creep_strain > elemental_nodal_accu_eqv_creep_strain",
        "text": "MecanicMisc.elemental_nodal_accu_eqv_creep_strain(**kwargs)\n\nGet result data for the elemental nodal accurate equivalent creep strain.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stiffness_matrix_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stiffness_matrix_energy.html#elemental_stiffness_matrix_energy",
        "title": "elemental_stiffness_matrix_energy",
        "section": "elemental_stiffness_matrix_energy",
        "text": "Get result data for the elemental stiffness matrix energy.\nelemental_stiffness_matrix_energy"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stiffness_matrix_energy",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_stiffness_matrix_energy.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_stiffness_matrix_energy",
        "title": "elemental_stiffness_matrix_energy > elemental_stiffness_matrix_energy > elemental_stiffness_matrix_energy",
        "section": "elemental_stiffness_matrix_energy > elemental_stiffness_matrix_energy",
        "text": "MecanicMisc.elemental_stiffness_matrix_energy(**kwargs)\n\nGet result data for the elemental stiffness matrix energy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.mesh",
        "href": "api/ansys.dpf.post.mesh.html#mesh",
        "title": "Mesh",
        "section": "Mesh",
        "text": "Mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.has_complex_frequencies.html#has_complex_frequencies",
        "title": "has_complex_frequencies",
        "section": "has_complex_frequencies",
        "text": "Check if the result contains complex frequencies.\nTrue if the result contains complex frequencies, False otherwise.\nbool\nhas_complex_frequencies\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.displacement.Displacement.has_complex_frequencies",
        "href": "api/_autosummary/ansys.dpf.post.displacement.Displacement.has_complex_frequencies.html#ansys.dpf.post.displacement.Displacement.has_complex_frequencies",
        "title": "has_complex_frequencies > has_complex_frequencies > has_complex_frequencies",
        "section": "has_complex_frequencies > has_complex_frequencies",
        "text": "Displacement.has_complex_frequencies()\n\nCheck if the result contains complex frequencies.\n\nReturns\n\nTrue if the result contains complex frequencies, False otherwise.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers.selections",
        "href": "api/ansys.dpf.post.helpers.selections.html#selections",
        "title": "Selections",
        "section": "Selections",
        "text": "Selections"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys repository appears in\nContribute\nin the PyAnsys developer’s guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyDPF-Post.\nThe following contribution information is specific to PyDPF-Post.\nContribute"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#install-in-development-mode",
        "title": "Contribute > Install in development mode",
        "section": "Install in development mode",
        "text": "If you want to edit and potentially contribute to PyDPF-Post,\nclone the repository and install it using pip with the -e\ndevelopment flag:\nInstall in development mode\npip\n-e"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the PyDPF-Post Issues\npage to submit questions, report bugs, and request new features.\nTo reach the project support team, email pyansys.core@ansys.com.\nPost issues"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_force.html#elemental_force",
        "title": "elemental_force",
        "section": "elemental_force",
        "text": "Get result data for the elemental force.\nelemental_force"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_force",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_force.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_force",
        "title": "elemental_force > elemental_force > elemental_force",
        "section": "elemental_force > elemental_force",
        "text": "MecanicMisc.elemental_force(**kwargs)\n\nGet result data for the elemental force.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_creep_strain_energy_density.html#elemental_creep_strain_energy_density",
        "title": "elemental_creep_strain_energy_density",
        "section": "elemental_creep_strain_energy_density",
        "text": "Get result data for the elemental creep strain energy density.\nelemental_creep_strain_energy_density"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_creep_strain_energy_density",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_creep_strain_energy_density.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_creep_strain_energy_density",
        "title": "elemental_creep_strain_energy_density > elemental_creep_strain_energy_density > elemental_creep_strain_energy_density",
        "section": "elemental_creep_strain_energy_density > elemental_creep_strain_energy_density",
        "text": "MecanicMisc.elemental_creep_strain_energy_density(**kwargs)\n\nGet result data for the elemental creep strain energy density.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_hydrostatic_pressure.html#elemental_nodal_hydrostatic_pressure",
        "title": "elemental_nodal_hydrostatic_pressure",
        "section": "elemental_nodal_hydrostatic_pressure",
        "text": "Get result data for the elemental nodal hydrostatic pressure.\nelemental_nodal_hydrostatic_pressure"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_hydrostatic_pressure",
        "href": "api/_autosummary/ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_hydrostatic_pressure.html#ansys.dpf.post.misc_results.MecanicMisc.elemental_nodal_hydrostatic_pressure",
        "title": "elemental_nodal_hydrostatic_pressure > elemental_nodal_hydrostatic_pressure > elemental_nodal_hydrostatic_pressure",
        "section": "elemental_nodal_hydrostatic_pressure > elemental_nodal_hydrostatic_pressure",
        "text": "MecanicMisc.elemental_nodal_hydrostatic_pressure(**kwargs)\n\nGet result data for the elemental nodal hydrostatic pressure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_1.html#principal_1",
        "title": "principal_1",
        "section": "principal_1",
        "text": "Result data for the first principal component of the tensor.\nprincipal_1"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_1",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_1.html#ansys.dpf.post.stress.Stress.principal_1",
        "title": "principal_1 > principal_1 > principal_1",
        "section": "principal_1 > principal_1",
        "text": "property Stress.principal_1\n\nResult data for the first principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_3.html#principal_3",
        "title": "principal_3",
        "section": "principal_3",
        "text": "Results data for the third principal component of the tensor.\nprincipal_3"
    },
    {
        "objectID": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_3",
        "href": "api/_autosummary/ansys.dpf.post.stress.Stress.principal_3.html#ansys.dpf.post.stress.Stress.principal_3",
        "title": "principal_3 > principal_3 > principal_3",
        "section": "principal_3 > principal_3",
        "text": "property Stress.principal_3\n\nResults data for the third principal component of the tensor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/05-Legacy/index",
        "href": "examples/05-Legacy/index.html#pydpf-post-legacy-examples",
        "title": "PyDPF-Post legacy examples",
        "section": "PyDPF-Post legacy examples",
        "text": "These examples show how you use the legacy PyDPF-Post API.\nsphx_glr_examples_05-Legacy_00-overview_example.py\nsphx_glr_examples_05-Legacy_01-get_data_from_static_simulation.py\nsphx_glr_examples_05-Legacy_01-introduction.py\nsphx_glr_examples_05-Legacy_02-static-analysis.py\nsphx_glr_examples_05-Legacy_03-modal-analysis.py\nsphx_glr_examples_05-Legacy_04-harmonic-analysis.py\nsphx_glr_examples_05-Legacy_05-transient-analysis.py\nsphx_glr_examples_05-Legacy_06-complex_results.py\nsphx_glr_examples_05-Legacy_07-result_keywords.py\nsphx_glr_examples_05-Legacy_08-result_on_path_of_coordinates.py\nsphx_glr_examples_05-Legacy_09-basics.py\nPyDPF-Post legacy examples"
    },
    {
        "objectID": "api/ansys.dpf.post.helpers.streamlines",
        "href": "api/ansys.dpf.post.helpers.streamlines.html#streamlines",
        "title": "Streamlines",
        "section": "Streamlines",
        "text": "Streamlines"
    },
    {
        "objectID": "api/ansys.dpf.post.modal_mechanical_simulation",
        "href": "api/ansys.dpf.post.modal_mechanical_simulation.html#modalmechanicalsimulation",
        "title": "ModalMechanicalSimulation",
        "section": "ModalMechanicalSimulation",
        "text": "ModalMechanicalSimulation"
    },
    {
        "objectID": "api/ansys.dpf.post.selection",
        "href": "api/ansys.dpf.post.selection.html#selection",
        "title": "Selection",
        "section": "Selection",
        "text": "Selection"
    }
]