name: Release

on:
#  pull_request:
#    tags:
#      - "*"
#    branches:
#      - "release*"

  push:
    tags:
      - "*"
    branches:
      - "release*"

env:
  PACKAGE_NAME: ansys-dpf-post
  ANSYS_VERSION: 221

jobs:
  Build_and_Test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: ["windows-2019", "ubuntu-latest"]

    steps:
      - uses: actions/checkout@v2

      - name: "Build Package"
        uses: pyansys/pydpf-actions/build_package@v2.1
        with:
          python-version: ${{ matrix.python-version }}
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: post
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
          install_extras: plotting

      - id: "Test Package"
        uses: pyansys/pydpf-actions/test_package@v2.0
        with:
          MODULE: post

  Build_Doc:
    name: Build Doc
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: "Build Documentation"
        uses: pyansys/pydpf-actions/build_doc@v2.0
        with:
          python-version: "3.8"
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: post
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
          install_extras: plotting
        timeout-minutes: 30

  Push_Doc:
    name: Push Doc
    runs-on: ubuntu-latest
    needs: [Build_Doc]
    steps:
      - uses: actions/checkout@v2

      - name: "Push Documentation"
        uses: pyansys/pydpf-actions/push_doc@v2.0
        with:
          PYANSYS_CI_BOT_TOKEN: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          DOC_REPO: DPF-Post-docs

  Release:
    runs-on: ubuntu-latest
    needs: [Build_and_Test, Push_Doc]
    steps:
      - name: "Release Package"
        uses: pyansys/pydpf-actions/release_package@v2.0
        with:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}