name: Release

on:
#  pull_request:
#    tags:
#      - "*"
#    branches:
#      - "release*"

  push:
    tags:
      - "*"
    branches:
      - "release*"

env:
  PACKAGE_NAME: ansys-dpf-post
  ANSYS_VERSION: 221

jobs:
  Build_Test_Upload:
    name: Build_Test_Upload
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
        os: ["windows-2019", "ubuntu-latest"]

    steps:
      - uses: actions/checkout@v2

      - id: build_package
        uses: ./.github/build_package
        with:
          python-version: ${{ matrix.python-version }}
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: post
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
          install_extras: plotting

      - id: test_package
        uses: ./.github/test_package
        with:
          MODULE: post

      - id: upload_package
        uses: ./.github/test_package
        with:
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          UPLOAD_WHEELHOUSE: false
        if: ${{ runner.os }} == 'Windows' && ${{ matrix.python-version }} == "3.8"

  Documentation:
    name: Documentation
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - id: build_doc
        uses: ./.github/build_doc
        with:
          python-version: "3.8"
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: post
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
        timeout-minutes: 30

      - name: Init git and add docs
        run: |
          cd docs/build/html
          git init
          git checkout -b $env:GH_DOC_BRANCH
          git config --global user.name "pyansys-ci-bot"
          git config --global user.email "$env:GH_EMAIL"
          New-Item -ItemType file .nojekyll
          git add .
          git commit -m "Documentation generated"
        env:
          GH_DOC_BRANCH: gh-pages
          GH_EMAIL: pyansys.github.bot@ansys.com

      - name: Publish GitHub Pages merge commit
        run: |
          cd docs/build/html
          git remote add origin https://${{secrets.PYANSYS_CI_BOT_TOKEN}}@github.com/pyansys/DPF-Post-docs
          git push -u origin $env:GH_DOC_BRANCH --force
        env:
          GH_DOC_BRANCH: gh-pages

  Release:
    runs-on: ubuntu-latest
    needs: [Build_Test_Upload, Documentation]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/download-artifact@v2

      - name: Display structure of downloaded files
        run: ls -R

      - name: Install twine
        shell: cmd
        run: |
          python -m pip install --upgrade pip
          pip install setuptools twine

      - name: Build package
        run: python setup.py sdist

      - name: Publish distribution ðŸ“¦ to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
        run: |
          twine upload --skip-existing ./**/*.whl
          twine upload --skip-existing ./**/*.tar.gz
#         /!\ Do NOT publish to Pypi the zip containing the wheelhouses

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz
            ./**/*.pdf
            ./**/*.zip